#define SECDEC_RESULT_IS_COMPLEX 1
#include "common_cuda.h"

#define SecDecInternalSignCheckPositivePolynomial(cond, id) if (unlikely(cond)) {val = REAL_NAN; break;}
#define SecDecInternalSignCheckContourDeformation(cond, id) if (unlikely(cond)) {val = REAL_NAN; break;}

extern "C" __global__ void
doublebox_nonplanar_integral__sector_7_order_0(
    result_t * __restrict__ result,
    const uint64_t lattice,
    const uint64_t index1,
    const uint64_t index2,
    const uint64_t * __restrict__ genvec,
    const real_t * __restrict__ shift,
    const real_t * __restrict__ realp,
    const complex_t * __restrict__ complexp,
    const real_t * __restrict__ deformp
)
{
    // assert(blockDim.x == 128);
    const uint64_t bid = blockIdx.x;
    const uint64_t tid = threadIdx.x;
    const real_t s = realp[0]; (void)s;
    const real_t t = realp[1]; (void)t;
    const real_t msq = realp[2]; (void)msq;
    const real_t SecDecInternalLambda0 = deformp[0]; (void)SecDecInternalLambda0;
    const real_t SecDecInternalLambda1 = deformp[1]; (void)SecDecInternalLambda1;
    const real_t SecDecInternalLambda2 = deformp[2]; (void)SecDecInternalLambda2;
    const real_t SecDecInternalLambda3 = deformp[3]; (void)SecDecInternalLambda3;
    const real_t SecDecInternalLambda4 = deformp[4]; (void)SecDecInternalLambda4;
    const real_t SecDecInternalLambda5 = deformp[5]; (void)SecDecInternalLambda5;
    const real_t invlattice = SecDecInternalDenominator((real_t)(double)lattice);
    result_t val = (result_t)0;
    uint64_t index = index1 + (bid*128 + tid)*8;
    uint64_t li_x0 = mulmod(index, genvec[0], lattice);
    uint64_t li_x1 = mulmod(index, genvec[1], lattice);
    uint64_t li_x2 = mulmod(index, genvec[2], lattice);
    uint64_t li_x3 = mulmod(index, genvec[3], lattice);
    uint64_t li_x4 = mulmod(index, genvec[4], lattice);
    uint64_t li_x5 = mulmod(index, genvec[5], lattice);
    for (uint64_t i = 0; (i < 8) && (index < index2); i++, index++) {
        real_t x0 = warponce(invlattice*(double)li_x0 + shift[0], 1.0);
        li_x0 = warponce_i(li_x0 + genvec[0], lattice);
        real_t x1 = warponce(invlattice*(double)li_x1 + shift[1], 1.0);
        li_x1 = warponce_i(li_x1 + genvec[1], lattice);
        real_t x2 = warponce(invlattice*(double)li_x2 + shift[2], 1.0);
        li_x2 = warponce_i(li_x2 + genvec[2], lattice);
        real_t x3 = warponce(invlattice*(double)li_x3 + shift[3], 1.0);
        li_x3 = warponce_i(li_x3 + genvec[3], lattice);
        real_t x4 = warponce(invlattice*(double)li_x4 + shift[4], 1.0);
        li_x4 = warponce_i(li_x4 + genvec[4], lattice);
        real_t x5 = warponce(invlattice*(double)li_x5 + shift[5], 1.0);
        li_x5 = warponce_i(li_x5 + genvec[5], lattice);
        real_t w_x0 = korobov3x3_w(x0);
        real_t w_x1 = korobov3x3_w(x1);
        real_t w_x2 = korobov3x3_w(x2);
        real_t w_x3 = korobov3x3_w(x3);
        real_t w_x4 = korobov3x3_w(x4);
        real_t w_x5 = korobov3x3_w(x5);
        real_t w = w_x0*w_x1*w_x2*w_x3*w_x4*w_x5;
        x0 = korobov3x3_f(x0);
        x1 = korobov3x3_f(x1);
        x2 = korobov3x3_f(x2);
        x3 = korobov3x3_f(x3);
        x4 = korobov3x3_f(x4);
        x5 = korobov3x3_f(x5);
        auto tmp1_1 = x0 + 1;
        auto tmp1_2 = tmp1_1 + x4;
        auto tmp1_3 = tmp1_2 + x3;
        auto tmp1_4 = 2*msq;
        auto tmp1_5 = tmp1_3*tmp1_4;
        auto tmp1_6 = 3*x3;
        auto tmp1_7 = x2 + 1;
        auto tmp1_8 = tmp1_7 + x5;
        auto tmp1_9 = tmp1_6*tmp1_8;
        auto tmp1_10 = tmp1_8*tmp1_1;
        auto tmp1_11 = tmp1_8*x4;
        auto tmp3_1 = tmp1_10 + tmp1_11;
        auto tmp3_2 = tmp1_9 + 2*tmp3_1;
        auto tmp1_12 = tmp3_2*x1;
        auto tmp1_13 = 2*x5;
        auto tmp3_3 = tmp1_13*tmp1_7;
        auto tmp3_4 = 2*x2 + tmp3_3 + 1;
        auto tmp3_5 = tmp1_12 + tmp3_4;
        auto tmp3_6 = tmp3_5*msq;
        auto tmp1_14 = x5*t;
        auto tmp3_7 = tmp3_6-tmp1_14;
        auto tmp3_8 = t*tmp1_7;
        auto tmp3_9 = tmp1_14 + tmp3_8;
        auto tmp1_15 = x3*t;
        auto tmp1_16 = tmp3_9 + tmp1_15;
        auto tmp1_17 = -x1*tmp1_16;
        auto tmp3_10 = tmp1_17 + tmp3_7;
        auto tmp1_18 = tmp1_4*x3;
        auto tmp1_19 = tmp1_18*tmp1_2;
        auto tmp1_20 = -tmp1_15 + tmp1_19;
        auto tmp1_21 = 2*x4;
        auto tmp1_22 = tmp1_21*tmp1_1;
        auto tmp1_23 = 2*x0;
        auto tmp1_24 = tmp1_23 + 1;
        auto tmp3_11 = tmp1_24 + tmp1_22;
        auto tmp1_25 = msq*x3;
        auto tmp1_26 = tmp1_25*tmp3_11;
        auto tmp1_27 = x4*t;
        auto tmp1_28 = tmp1_27*x3;
        auto tmp3_12 = tmp1_28-tmp1_26;
        auto tmp3_13 = -2*tmp3_12;
        auto tmp1_29 = tmp1_2*tmp1_4;
        auto tmp1_30 = 2*x3;
        auto tmp1_31 = tmp1_30 + 3*tmp1_2;
        auto tmp3_14 = tmp1_31*x1;
        auto tmp1_32 = 2*tmp1_8;
        auto tmp3_15 = tmp3_14 + tmp1_32;
        auto tmp3_16 = tmp3_15*msq;
        auto tmp1_33 = x0*s;
        auto tmp1_34 = -x1*tmp1_33;
        auto tmp3_17 = tmp1_34 + tmp3_16;
        auto tmp1_35 = tmp1_4*x1;
        auto tmp1_36 = tmp1_35*tmp1_8;
        auto tmp1_37 = x1*x3;
        auto tmp1_38 = tmp1_37*tmp1_2;
        auto tmp3_18 = tmp3_2 + 4*tmp1_38;
        auto tmp3_19 = tmp3_18*msq;
        auto tmp3_20 = x2*s;
        auto tmp1_39 = -x3*tmp3_20;
        auto tmp3_21 = tmp1_39 + tmp3_19;
        auto tmp1_40 = tmp1_6 + 2*tmp1_2;
        auto tmp3_22 = tmp1_40*x1;
        auto tmp3_23 = tmp3_22 + tmp1_32;
        auto tmp3_24 = tmp3_23*msq;
        auto tmp3_25 = -s*tmp1_37;
        auto tmp3_26 = tmp3_25 + tmp3_24;
        auto tmp3_27 = tmp1_24*tmp1_8;
        auto tmp3_28 = tmp1_10*tmp1_21;
        auto tmp1_41 = tmp3_1*tmp1_6;
        auto tmp3_29 = tmp1_41 + tmp3_27 + tmp3_28;
        auto tmp3_30 = tmp1_30*x1;
        auto tmp3_31 = tmp3_11*tmp3_30;
        auto tmp3_32 = tmp3_31 + tmp3_29;
        auto tmp3_33 = msq*tmp3_32;
        auto tmp1_42 = tmp1_33*x2;
        auto tmp3_34 = tmp1_27 + tmp1_42 + tmp1_14;
        auto tmp1_43 = tmp3_34*x3;
        auto tmp3_35 = tmp3_9*x4;
        auto tmp3_36 = tmp1_43 + tmp3_35;
        auto tmp3_37 = -tmp1_27*tmp3_30;
        auto tmp3_38 = tmp3_33 + tmp3_37-tmp3_36;
        auto tmp3_39 = tmp3_30 + tmp1_8;
        auto tmp3_40 = tmp3_39*msq;
        auto tmp1_44 = 2*x1;
        auto tmp1_45 = tmp1_2*tmp1_44;
        auto tmp3_41 = tmp1_45 + tmp1_8;
        auto tmp3_42 = msq*tmp3_41;
        auto tmp3_43 = tmp1_6*tmp1_2;
        auto tmp3_44 = tmp3_43 + tmp3_11;
        auto tmp1_46 = tmp3_44*x1;
        auto tmp1_47 = tmp1_8*x3;
        auto tmp3_45 = tmp1_47 + tmp3_1;
        auto tmp3_46 = tmp1_46 + 2*tmp3_45;
        auto tmp3_47 = tmp3_46*msq;
        auto tmp3_48 = tmp1_15 + tmp1_27;
        auto tmp3_49 = -x1-1;
        auto tmp3_50 = tmp3_48*tmp3_49;
        auto tmp1_48 = -t*tmp1_1;
        auto tmp3_51 = tmp3_47 + tmp3_50 + tmp1_48;
        auto tmp3_52 = msq*x1;
        auto tmp1_49 = tmp1_8*tmp1_30;
        auto tmp3_53 = tmp1_49 + 3*tmp3_1;
        auto tmp3_54 = tmp1_2*tmp1_30;
        auto tmp3_55 = tmp3_54 + tmp3_11;
        auto tmp3_56 = tmp3_55*tmp1_44;
        auto tmp3_57 = tmp3_56 + tmp3_53;
        auto tmp3_58 = msq*tmp3_57;
        auto tmp1_50 = -tmp1_44*tmp1_27;
        auto tmp3_59 = tmp3_58 + tmp1_50-tmp3_34;
        auto tmp3_60 = tmp3_24-t;
        auto tmp3_61 = tmp1_33*x3;
        auto tmp3_62 = tmp3_61 + tmp1_27;
        auto tmp1_51 = -x1*tmp3_62;
        auto tmp3_63 = tmp1_51 + tmp3_47;
        auto tmp3_64 = -tmp3_20*tmp1_37;
        auto tmp3_65 = tmp3_64 + tmp3_7;
        auto tmp3_66 = x1*t;
        auto tmp3_67 = tmp3_24-tmp3_66;
        auto tmp3_68 = -t + tmp3_67;
        auto tmp3_69 = tmp3_44*msq;
        auto tmp3_70 = tmp3_69-tmp3_48;
        auto tmp3_71 = tmp3_69-tmp3_62;
        auto tmp3_72 = -x1*tmp3_34;
        auto tmp3_73 = x1*tmp3_53;
        auto tmp3_74 = tmp3_73 + tmp3_4;
        auto tmp3_75 = msq*tmp3_74;
        auto tmp3_76 = tmp3_75-tmp1_14 + tmp3_72;
        auto tmp3_77 = msq*tmp3_55;
        auto tmp3_78 = -tmp1_27 + tmp3_77;
        auto tmp3_79 = -t*tmp3_30;
        auto tmp3_80 = tmp3_19 + tmp3_79-tmp1_16;
        auto tmp3_81 = tmp1_8*tmp3_52;
        auto tmp3_82 = 3*tmp3_81;
        auto tmp3_83 = -tmp3_66 + tmp3_82;
        auto tmp3_84 = -t + tmp1_5;
        auto tmp3_85 = -x1*tmp3_20;
        auto tmp3_86 = tmp3_85 + tmp3_82;
        auto tmp3_87 = tmp3_16-tmp3_66-t;
        auto tmp3_88 = x1*tmp3_29;
        auto tmp3_89 = tmp1_1 + x3;
        auto tmp3_90 = x4 + tmp3_89;
        auto tmp3_91 = tmp3_4*tmp3_90;
        auto tmp3_92 = tmp3_88 + tmp3_91;
        auto tmp3_93 = msq*tmp3_92;
        auto tmp3_94 = -x1*tmp3_36;
        auto tmp3_95 = -tmp1_14*tmp3_89;
        auto tmp3_96 = -x5*tmp1_27;
        auto tmp3_97 = tmp3_93 + tmp3_94 + tmp3_96 + tmp3_95;
        auto tmp3_98 = tmp1_3*msq;
        auto tmp3_99 = msq*tmp1_2;
        auto tmp3_100 = tmp1_4-t;
        auto tmp3_101 = 3*msq;
        auto tmp3_102 = tmp3_101-t;
        auto tmp3_103 = -s + tmp3_101;
        auto tmp3_104 = x1*SecDecInternalLambda1;
        auto tmp3_105 = -SecDecInternalLambda1 + tmp3_104;
        auto tmp3_106 = x5*SecDecInternalLambda5;
        auto tmp3_107 = -SecDecInternalLambda5 + 2*tmp3_106;
        auto tmp1_52 = x4*SecDecInternalLambda4;
        auto tmp3_108 = -1 + tmp1_21;
        auto tmp3_109 = SecDecInternalLambda4*tmp3_108;
        auto tmp1_53 = x3*SecDecInternalLambda3;
        auto tmp3_110 = -1 + tmp1_30;
        auto tmp3_111 = SecDecInternalLambda3*tmp3_110;
        auto tmp1_54 = x2*SecDecInternalLambda2;
        auto tmp1_55 = -SecDecInternalLambda2 + 2*tmp1_54;
        auto tmp1_56 = -1 + tmp1_44;
        auto tmp3_112 = SecDecInternalLambda1*tmp1_56;
        auto tmp1_57 = x0*SecDecInternalLambda0;
        auto tmp3_113 = -1 + tmp1_23;
        auto tmp3_114 = SecDecInternalLambda0*tmp3_113;
        auto __PowCall1 = SecDecInternalSqr(x0);
        auto __PowCall2 = SecDecInternalSqr(x1);
        auto __PowCall3 = SecDecInternalSqr(x2);
        auto __PowCall4 = SecDecInternalSqr(x3);
        auto __PowCall5 = SecDecInternalSqr(x4);
        auto __PowCall6 = SecDecInternalSqr(x5);
        auto tmp2_33 = __PowCall2*tmp1_5;
        auto tmp3_115 = tmp3_86 + tmp2_33;
        auto tmp2_34 = __PowCall5 + __PowCall1;
        auto tmp2_35 = tmp1_25*tmp2_34;
        auto tmp2_36 = __PowCall4*tmp3_99;
        auto tmp3_116 = tmp2_36-tmp3_12 + tmp2_35;
        auto tmp3_117 = __PowCall2*tmp3_116;
        auto tmp3_118 = __PowCall6 + __PowCall3;
        auto tmp2_37 = tmp3_98*tmp3_118;
        auto tmp2_38 = tmp2_34 + __PowCall4;
        auto tmp2_39 = tmp3_81*tmp2_38;
        auto tmp3_119 = tmp3_117 + tmp3_97 + tmp2_39 + tmp2_37;
        auto tmp3_120 = __PowCall2*tmp1_29;
        auto tmp3_121 = tmp1_36 + tmp3_120;
        auto tmp3_122 = __PowCall2*tmp1_18;
        auto tmp3_123 = tmp3_122 + tmp1_36;
        auto tmp2_40 = __PowCall2*tmp3_84;
        auto tmp3_124 = tmp3_83 + tmp2_40;
        auto tmp2_41 = __PowCall4*tmp1_35;
        auto tmp2_42 = tmp3_80 + tmp2_41;
        auto tmp3_125 = tmp3_118*msq;
        auto tmp2_43 = msq*tmp2_34;
        auto tmp3_126 = tmp3_78 + tmp2_43;
        auto tmp3_127 = __PowCall2*tmp3_126;
        auto tmp3_128 = tmp3_127 + tmp3_76 + tmp3_125;
        auto tmp2_44 = tmp2_38*msq;
        auto tmp2_45 = tmp3_71 + tmp2_44;
        auto tmp3_129 = tmp3_70 + tmp2_44;
        auto tmp2_46 = msq*__PowCall4;
        auto tmp2_47 = tmp1_19 + tmp2_46;
        auto tmp3_130 = __PowCall2*tmp2_47;
        auto tmp3_131 = tmp3_130 + tmp3_65 + tmp3_125;
        auto tmp3_132 = tmp3_52*tmp2_38;
        auto tmp2_48 = tmp3_63 + tmp3_132;
        auto tmp2_49 = tmp1_35*tmp2_34;
        auto tmp3_133 = tmp3_59 + tmp2_49;
        auto tmp3_134 = tmp3_51 + tmp3_132;
        auto tmp2_50 = tmp3_40*tmp2_34;
        auto tmp2_51 = __PowCall4*tmp3_42;
        auto tmp3_135 = tmp2_51 + tmp3_38 + tmp2_50;
        auto tmp3_136 = tmp3_21 + tmp2_41;
        auto tmp3_137 = tmp1_18*tmp2_34;
        auto tmp3_138 = __PowCall4*tmp1_29;
        auto tmp3_139 = tmp3_138 + tmp3_13 + tmp3_137;
        auto tmp3_140 = tmp1_20 + tmp2_46;
        auto tmp3_141 = __PowCall2*tmp3_140;
        auto tmp3_142 = tmp3_141 + tmp3_10 + tmp3_125;
        auto __RealPartCall1 = SecDecInternalRealPart(tmp3_87);
        auto __RealPartCall3 = SecDecInternalRealPart(tmp1_5);
        auto __RealPartCall9 = SecDecInternalRealPart(tmp3_67);
        auto __RealPartCall12 = SecDecInternalRealPart(tmp3_68);
        auto __RealPartCall15 = SecDecInternalRealPart(tmp3_60);
        auto __RealPartCall20 = SecDecInternalRealPart(tmp3_26);
        auto __RealPartCall23 = SecDecInternalRealPart(tmp3_17);
        auto __RealPartCall24 = SecDecInternalRealPart(tmp1_5);
        auto __RealPartCall27 = SecDecInternalRealPart(tmp1_5);
        auto tmp3_143 = __PowCall1*SecDecInternalLambda0;
        auto tmp3_144 = tmp3_143-tmp1_57;
        auto tmp3_145 = SecDecInternalI(tmp3_144);
        auto tmp3_146 = __RealPartCall20*tmp3_145;
        auto tmp3_147 = __RealPartCall15*tmp3_145;
        auto tmp3_148 = __PowCall3*SecDecInternalLambda2;
        auto tmp3_149 = tmp3_148-tmp1_54;
        auto tmp3_150 = SecDecInternalI(tmp3_149);
        auto tmp3_151 = __RealPartCall20*tmp3_150;
        auto tmp3_152 = __RealPartCall23*tmp3_150;
        auto tmp3_153 = __RealPartCall9*tmp3_150;
        auto tmp3_154 = __RealPartCall3*tmp3_150;
        auto tmp3_155 = __PowCall4*SecDecInternalLambda3;
        auto tmp3_156 = tmp3_155-tmp1_53;
        auto tmp3_157 = SecDecInternalI(tmp3_156);
        auto tmp3_158 = __RealPartCall23*tmp3_157;
        auto tmp3_159 = __RealPartCall1*tmp3_157;
        auto tmp3_160 = __PowCall5*SecDecInternalLambda4;
        auto tmp3_161 = tmp3_160-tmp1_52;
        auto tmp3_162 = SecDecInternalI(tmp3_161);
        auto tmp3_163 = __RealPartCall9*tmp3_162;
        auto tmp3_164 = __RealPartCall12*tmp3_162;
        auto tmp3_165 = __PowCall6*SecDecInternalLambda5;
        auto tmp3_166 = tmp3_165-tmp3_106;
        auto tmp3_167 = SecDecInternalI(tmp3_166);
        auto tmp3_168 = __RealPartCall15*tmp3_167;
        auto tmp3_169 = __RealPartCall3*tmp3_167;
        auto tmp3_170 = __RealPartCall1*tmp3_167;
        auto tmp3_171 = __RealPartCall12*tmp3_167;
        auto __RealPartCall2 = SecDecInternalRealPart(tmp3_115);
        auto __RealPartCall4 = SecDecInternalRealPart(tmp3_121);
        auto __RealPartCall5 = SecDecInternalRealPart(tmp3_123);
        auto __RealPartCall6 = SecDecInternalRealPart(tmp3_124);
        auto __RealPartCall7 = SecDecInternalRealPart(tmp2_42);
        auto __RealPartCall8 = SecDecInternalRealPart(tmp3_128);
        auto __RealPartCall10 = SecDecInternalRealPart(tmp2_45);
        auto __RealPartCall11 = SecDecInternalRealPart(tmp3_129);
        auto __RealPartCall13 = SecDecInternalRealPart(tmp3_131);
        auto __RealPartCall14 = SecDecInternalRealPart(tmp2_48);
        auto __RealPartCall16 = SecDecInternalRealPart(tmp3_133);
        auto __RealPartCall17 = SecDecInternalRealPart(tmp3_134);
        auto __RealPartCall18 = SecDecInternalRealPart(tmp3_135);
        auto __RealPartCall19 = SecDecInternalRealPart(tmp3_123);
        auto __RealPartCall21 = SecDecInternalRealPart(tmp3_136);
        auto __RealPartCall22 = SecDecInternalRealPart(tmp3_123);
        auto __RealPartCall25 = SecDecInternalRealPart(tmp3_139);
        auto __RealPartCall26 = SecDecInternalRealPart(tmp3_142);
        auto tmp3_172 = SecDecInternalI(tmp3_105*__RealPartCall18);
        auto tmp3_173 = 1 + tmp3_172;
        auto tmp3_174 = __PowCall1*SecDecInternalLambda0;
        auto tmp3_175 = tmp3_174-tmp1_57;
        auto tmp3_176 = SecDecInternalI(tmp3_175);
        auto tmp3_177 = __RealPartCall13*tmp3_176;
        auto tmp3_178 = x0 + tmp3_177;
        auto tmp3_179 = __RealPartCall22*tmp3_175;
        auto tmp3_180 = __RealPartCall13*tmp3_114;
        auto tmp3_181 = tmp3_180 + tmp3_179;
        auto tmp3_182 = SecDecInternalI(tmp3_181);
        auto tmp3_183 = 1 + tmp3_182;
        auto tmp3_184 = __RealPartCall21*tmp3_176;
        auto tmp3_185 = __RealPartCall2*tmp3_176;
        auto tmp3_186 = __RealPartCall19*tmp3_176;
        auto tmp3_187 = __PowCall2*SecDecInternalLambda1;
        auto tmp3_188 = tmp3_187-tmp3_104;
        auto tmp3_189 = SecDecInternalI(tmp3_188);
        auto tmp3_190 = __RealPartCall18*tmp3_189;
        auto tmp3_191 = x1 + tmp3_190;
        auto tmp3_192 = __RealPartCall21*tmp3_189;
        auto tmp3_193 = __RealPartCall25*tmp3_188;
        auto tmp3_194 = __RealPartCall18*tmp3_112;
        auto tmp3_195 = tmp3_194 + tmp3_193;
        auto tmp3_196 = SecDecInternalI(tmp3_195);
        auto tmp3_197 = 1 + tmp3_196;
        auto tmp3_198 = __RealPartCall10*tmp3_189;
        auto tmp3_199 = __RealPartCall16*tmp3_189;
        auto tmp3_200 = __RealPartCall7*tmp3_189;
        auto tmp3_201 = __RealPartCall11*tmp3_189;
        auto tmp3_202 = __PowCall3*SecDecInternalLambda2;
        auto tmp3_203 = tmp3_202-tmp1_54;
        auto tmp3_204 = SecDecInternalI(tmp3_203);
        auto tmp3_205 = __RealPartCall14*tmp3_204;
        auto tmp3_206 = x2 + tmp3_205;
        auto tmp3_207 = __RealPartCall10*tmp3_204;
        auto tmp3_208 = __RealPartCall24*tmp3_203;
        auto tmp3_209 = __RealPartCall14*tmp1_55;
        auto tmp3_210 = tmp3_209 + tmp3_208;
        auto tmp3_211 = SecDecInternalI(tmp3_210);
        auto tmp3_212 = 1 + tmp3_211;
        auto tmp3_213 = __PowCall4*SecDecInternalLambda3;
        auto tmp3_214 = tmp3_213-tmp1_53;
        auto tmp3_215 = SecDecInternalI(tmp3_214);
        auto tmp3_216 = __RealPartCall8*tmp3_215;
        auto tmp3_217 = x3 + tmp3_216;
        auto tmp3_218 = __RealPartCall2*tmp3_215;
        auto tmp3_219 = __RealPartCall16*tmp3_215;
        auto tmp3_220 = __RealPartCall4*tmp3_214;
        auto tmp3_221 = __RealPartCall8*tmp3_111;
        auto tmp3_222 = tmp3_221 + tmp3_220;
        auto tmp3_223 = SecDecInternalI(tmp3_222);
        auto tmp3_224 = 1 + tmp3_223;
        auto tmp3_225 = __RealPartCall6*tmp3_215;
        auto tmp3_226 = __PowCall5*SecDecInternalLambda4;
        auto tmp3_227 = tmp3_226-tmp1_52;
        auto tmp3_228 = SecDecInternalI(tmp3_227);
        auto tmp3_229 = __RealPartCall26*tmp3_228;
        auto tmp3_230 = x4 + tmp3_229;
        auto tmp3_231 = __RealPartCall19*tmp3_228;
        auto tmp3_232 = __RealPartCall7*tmp3_228;
        auto tmp3_233 = __RealPartCall6*tmp3_228;
        auto tmp3_234 = __RealPartCall5*tmp3_227;
        auto tmp3_235 = __RealPartCall26*tmp3_109;
        auto tmp3_236 = tmp3_235 + tmp3_234;
        auto tmp3_237 = SecDecInternalI(tmp3_236);
        auto tmp3_238 = 1 + tmp3_237;
        auto tmp3_239 = __PowCall6*SecDecInternalLambda5;
        auto tmp3_240 = tmp3_239-tmp3_106;
        auto tmp3_241 = SecDecInternalI(tmp3_240);
        auto tmp3_242 = __RealPartCall17*tmp3_241;
        auto tmp3_243 = x5 + tmp3_242;
        auto tmp3_244 = __RealPartCall11*tmp3_241;
        auto tmp3_245 = __RealPartCall27*tmp3_240;
        auto tmp3_246 = __RealPartCall17*tmp3_107;
        auto tmp3_247 = tmp3_246 + tmp3_245;
        auto tmp3_248 = SecDecInternalI(tmp3_247);
        auto tmp3_249 = 1 + tmp3_248;
        auto tmp3_250 = tmp3_230 + tmp3_178 + 1;
        auto tmp3_251 = tmp3_217 + tmp3_250;
        auto tmp3_252 = tmp3_206 + tmp3_243 + 1;
        auto tmp3_253 = tmp3_252*tmp3_251;
        auto tmp3_254 = tmp3_191*tmp3_217*tmp3_250;
        auto tmp3_255 = tmp3_254 + tmp3_253;
        auto tmp3_256 = tmp3_163*tmp3_244;
        auto tmp3_257 = tmp3_232*tmp3_169;
        auto tmp3_258 = tmp3_256-tmp3_257;
        auto tmp3_259 = tmp3_258*tmp3_218;
        auto tmp3_260 = tmp3_163*tmp3_168;
        auto tmp3_261 = tmp3_231*tmp3_169;
        auto tmp3_262 = tmp3_260-tmp3_261;
        auto tmp3_263 = tmp3_262*tmp3_219;
        auto tmp3_264 = tmp3_232*tmp3_168;
        auto tmp3_265 = tmp3_231*tmp3_244;
        auto tmp3_266 = tmp3_264-tmp3_265;
        auto tmp3_267 = tmp3_266*tmp3_158;
        auto tmp3_268 = tmp3_267 + tmp3_259-tmp3_263;
        auto tmp3_269 = tmp3_268*tmp3_152;
        auto tmp3_270 = tmp3_233*tmp3_168;
        auto tmp3_271 = tmp3_231*tmp3_170;
        auto tmp3_272 = tmp3_270-tmp3_271;
        auto tmp3_273 = tmp3_272*tmp3_158;
        auto tmp3_274 = tmp3_262*tmp3_224;
        auto tmp3_275 = tmp3_233*tmp3_169;
        auto tmp3_276 = tmp3_163*tmp3_170;
        auto tmp3_277 = tmp3_275-tmp3_276;
        auto tmp3_278 = tmp3_277*tmp3_218;
        auto tmp3_279 = -tmp3_278 + tmp3_273-tmp3_274;
        auto tmp3_280 = tmp3_279*tmp3_207;
        auto tmp3_281 = tmp3_233*tmp3_244;
        auto tmp3_282 = tmp3_232*tmp3_170;
        auto tmp3_283 = tmp3_281-tmp3_282;
        auto tmp3_284 = tmp3_283*tmp3_218;
        auto tmp3_285 = tmp3_272*tmp3_219;
        auto tmp3_286 = tmp3_266*tmp3_224;
        auto tmp3_287 = tmp3_286 + tmp3_284-tmp3_285;
        auto tmp3_288 = tmp3_287*tmp3_212;
        auto tmp3_289 = tmp3_283*tmp3_158;
        auto tmp3_290 = tmp3_258*tmp3_224;
        auto tmp3_291 = tmp3_277*tmp3_219;
        auto tmp3_292 = -tmp3_291 + tmp3_289-tmp3_290;
        auto tmp3_293 = tmp3_292*tmp3_151;
        auto tmp3_294 = -tmp3_293-tmp3_269 + tmp3_280 + tmp3_288;
        auto tmp3_295 = tmp3_200*tmp3_294;
        auto tmp3_296 = tmp3_238*tmp3_244;
        auto tmp3_297 = tmp3_232*tmp3_171;
        auto tmp3_298 = tmp3_296-tmp3_297;
        auto tmp3_299 = tmp3_298*tmp3_218;
        auto tmp3_300 = tmp3_266*tmp3_225;
        auto tmp3_301 = tmp3_238*tmp3_168;
        auto tmp3_302 = tmp3_231*tmp3_171;
        auto tmp3_303 = tmp3_301-tmp3_302;
        auto tmp3_304 = tmp3_303*tmp3_219;
        auto tmp3_305 = -tmp3_304 + tmp3_299 + tmp3_300;
        auto tmp3_306 = tmp3_305*tmp3_212;
        auto tmp3_307 = tmp3_238*tmp3_169;
        auto tmp3_308 = tmp3_163*tmp3_171;
        auto tmp3_309 = tmp3_307-tmp3_308;
        auto tmp3_310 = tmp3_309*tmp3_218;
        auto tmp3_311 = tmp3_303*tmp3_158;
        auto tmp3_312 = tmp3_262*tmp3_225;
        auto tmp3_313 = tmp3_312 + tmp3_310-tmp3_311;
        auto tmp3_314 = tmp3_313*tmp3_207;
        auto tmp3_315 = tmp3_268*tmp3_153;
        auto tmp3_316 = tmp3_309*tmp3_219;
        auto tmp3_317 = tmp3_298*tmp3_158;
        auto tmp3_318 = tmp3_258*tmp3_225;
        auto tmp3_319 = tmp3_318 + tmp3_316-tmp3_317;
        auto tmp3_320 = tmp3_319*tmp3_151;
        auto tmp3_321 = -tmp3_306 + tmp3_314 + tmp3_315-tmp3_320;
        auto tmp3_322 = tmp3_199*tmp3_321;
        auto tmp3_323 = tmp3_238*tmp3_170;
        auto tmp3_324 = tmp3_233*tmp3_171;
        auto tmp3_325 = tmp3_323-tmp3_324;
        auto tmp3_326 = tmp3_325*tmp3_218;
        auto tmp3_327 = tmp3_303*tmp3_224;
        auto tmp3_328 = tmp3_272*tmp3_225;
        auto tmp3_329 = tmp3_328 + tmp3_326-tmp3_327;
        auto tmp3_330 = tmp3_329*tmp3_207;
        auto tmp3_331 = tmp3_325*tmp3_219;
        auto tmp3_332 = tmp3_298*tmp3_224;
        auto tmp3_333 = tmp3_283*tmp3_225;
        auto tmp3_334 = tmp3_333 + tmp3_331-tmp3_332;
        auto tmp3_335 = tmp3_334*tmp3_151;
        auto tmp3_336 = tmp3_305*tmp3_152;
        auto tmp3_337 = tmp3_287*tmp3_153;
        auto tmp3_338 = -tmp3_330 + tmp3_335 + tmp3_336-tmp3_337;
        auto tmp3_339 = tmp3_198*tmp3_338;
        auto tmp3_340 = tmp3_329*tmp3_212;
        auto tmp3_341 = tmp3_325*tmp3_158;
        auto tmp3_342 = tmp3_309*tmp3_224;
        auto tmp3_343 = tmp3_277*tmp3_225;
        auto tmp3_344 = tmp3_343 + tmp3_341-tmp3_342;
        auto tmp3_345 = tmp3_344*tmp3_151;
        auto tmp3_346 = tmp3_313*tmp3_152;
        auto tmp3_347 = tmp3_279*tmp3_153;
        auto tmp3_348 = -tmp3_340 + tmp3_345 + tmp3_346 + tmp3_347;
        auto tmp3_349 = -tmp3_197*tmp3_348;
        auto tmp3_350 = tmp3_334*tmp3_212;
        auto tmp3_351 = tmp3_344*tmp3_207;
        auto tmp3_352 = tmp3_292*tmp3_153;
        auto tmp3_353 = tmp3_319*tmp3_152;
        auto tmp3_354 = tmp3_351-tmp3_350 + tmp3_352 + tmp3_353;
        auto tmp3_355 = tmp3_192*tmp3_354;
        auto tmp3_356 = tmp3_355 + tmp3_349 + tmp3_339 + tmp3_295 + tmp3_322;
        auto tmp3_357 = tmp3_147*tmp3_356;
        auto tmp3_358 = -tmp3_201*tmp3_294;
        auto tmp3_359 = tmp3_164*tmp3_244;
        auto tmp3_360 = tmp3_232*tmp3_249;
        auto tmp3_361 = tmp3_359-tmp3_360;
        auto tmp3_362 = tmp3_361*tmp3_218;
        auto tmp3_363 = tmp3_164*tmp3_168;
        auto tmp3_364 = tmp3_231*tmp3_249;
        auto tmp3_365 = tmp3_363-tmp3_364;
        auto tmp3_366 = tmp3_365*tmp3_219;
        auto tmp3_367 = tmp3_266*tmp3_159;
        auto tmp3_368 = tmp3_367 + tmp3_362-tmp3_366;
        auto tmp3_369 = tmp3_368*tmp3_212;
        auto tmp3_370 = tmp3_164*tmp3_169;
        auto tmp3_371 = tmp3_163*tmp3_249;
        auto tmp3_372 = tmp3_370-tmp3_371;
        auto tmp3_373 = tmp3_372*tmp3_218;
        auto tmp3_374 = tmp3_365*tmp3_158;
        auto tmp3_375 = tmp3_262*tmp3_159;
        auto tmp3_376 = tmp3_375 + tmp3_373-tmp3_374;
        auto tmp3_377 = tmp3_376*tmp3_207;
        auto tmp3_378 = tmp3_372*tmp3_219;
        auto tmp3_379 = tmp3_361*tmp3_158;
        auto tmp3_380 = tmp3_258*tmp3_159;
        auto tmp3_381 = tmp3_380 + tmp3_378-tmp3_379;
        auto tmp3_382 = tmp3_381*tmp3_151;
        auto tmp3_383 = tmp3_268*tmp3_154;
        auto tmp3_384 = tmp3_369-tmp3_377 + tmp3_382-tmp3_383;
        auto tmp3_385 = tmp3_199*tmp3_384;
        auto tmp3_386 = tmp3_164*tmp3_170;
        auto tmp3_387 = tmp3_233*tmp3_249;
        auto tmp3_388 = tmp3_386-tmp3_387;
        auto tmp3_389 = tmp3_388*tmp3_218;
        auto tmp3_390 = tmp3_365*tmp3_224;
        auto tmp3_391 = tmp3_272*tmp3_159;
        auto tmp3_392 = tmp3_391 + tmp3_389-tmp3_390;
        auto tmp3_393 = tmp3_392*tmp3_207;
        auto tmp3_394 = tmp3_388*tmp3_219;
        auto tmp3_395 = tmp3_361*tmp3_224;
        auto tmp3_396 = tmp3_283*tmp3_159;
        auto tmp3_397 = tmp3_396 + tmp3_394-tmp3_395;
        auto tmp3_398 = tmp3_397*tmp3_151;
        auto tmp3_399 = tmp3_368*tmp3_152;
        auto tmp3_400 = tmp3_287*tmp3_154;
        auto tmp3_401 = -tmp3_393 + tmp3_398 + tmp3_399-tmp3_400;
        auto tmp3_402 = -tmp3_198*tmp3_401;
        auto tmp3_403 = tmp3_392*tmp3_212;
        auto tmp3_404 = tmp3_388*tmp3_158;
        auto tmp3_405 = tmp3_372*tmp3_224;
        auto tmp3_406 = tmp3_277*tmp3_159;
        auto tmp3_407 = tmp3_406 + tmp3_404-tmp3_405;
        auto tmp3_408 = tmp3_407*tmp3_151;
        auto tmp3_409 = tmp3_376*tmp3_152;
        auto tmp3_410 = tmp3_279*tmp3_154;
        auto tmp3_411 = -tmp3_403 + tmp3_408 + tmp3_409 + tmp3_410;
        auto tmp3_412 = tmp3_197*tmp3_411;
        auto tmp3_413 = tmp3_397*tmp3_212;
        auto tmp3_414 = tmp3_407*tmp3_207;
        auto tmp3_415 = tmp3_381*tmp3_152;
        auto tmp3_416 = tmp3_292*tmp3_154;
        auto tmp3_417 = -tmp3_413 + tmp3_414 + tmp3_415 + tmp3_416;
        auto tmp3_418 = -tmp3_192*tmp3_417;
        auto tmp3_419 = tmp3_418 + tmp3_412 + tmp3_402 + tmp3_358 + tmp3_385;
        auto tmp3_420 = tmp3_186*tmp3_419;
        auto tmp3_421 = -tmp3_201*tmp3_321;
        auto tmp3_422 = -tmp3_200*tmp3_384;
        auto tmp3_423 = tmp3_164*tmp3_171;
        auto tmp3_424 = tmp3_238*tmp3_249;
        auto tmp3_425 = tmp3_423-tmp3_424;
        auto tmp3_426 = tmp3_425*tmp3_218;
        auto tmp3_427 = tmp3_365*tmp3_225;
        auto tmp3_428 = tmp3_303*tmp3_159;
        auto tmp3_429 = tmp3_428 + tmp3_426-tmp3_427;
        auto tmp3_430 = tmp3_429*tmp3_207;
        auto tmp3_431 = tmp3_425*tmp3_219;
        auto tmp3_432 = tmp3_361*tmp3_225;
        auto tmp3_433 = tmp3_298*tmp3_159;
        auto tmp3_434 = tmp3_433 + tmp3_431-tmp3_432;
        auto tmp3_435 = tmp3_434*tmp3_151;
        auto tmp3_436 = tmp3_368*tmp3_153;
        auto tmp3_437 = tmp3_305*tmp3_154;
        auto tmp3_438 = -tmp3_430 + tmp3_435 + tmp3_436-tmp3_437;
        auto tmp3_439 = tmp3_198*tmp3_438;
        auto tmp3_440 = tmp3_429*tmp3_212;
        auto tmp3_441 = tmp3_425*tmp3_158;
        auto tmp3_442 = tmp3_372*tmp3_225;
        auto tmp3_443 = tmp3_309*tmp3_159;
        auto tmp3_444 = tmp3_443 + tmp3_441-tmp3_442;
        auto tmp3_445 = tmp3_444*tmp3_151;
        auto tmp3_446 = tmp3_376*tmp3_153;
        auto tmp3_447 = tmp3_313*tmp3_154;
        auto tmp3_448 = -tmp3_440 + tmp3_445 + tmp3_446-tmp3_447;
        auto tmp3_449 = -tmp3_197*tmp3_448;
        auto tmp3_450 = tmp3_434*tmp3_212;
        auto tmp3_451 = tmp3_444*tmp3_207;
        auto tmp3_452 = tmp3_381*tmp3_153;
        auto tmp3_453 = tmp3_319*tmp3_154;
        auto tmp3_454 = -tmp3_450 + tmp3_451 + tmp3_452-tmp3_453;
        auto tmp3_455 = tmp3_192*tmp3_454;
        auto tmp3_456 = tmp3_455 + tmp3_449 + tmp3_439 + tmp3_421 + tmp3_422;
        auto tmp3_457 = tmp3_185*tmp3_456;
        auto tmp3_458 = -tmp3_201*tmp3_338;
        auto tmp3_459 = tmp3_200*tmp3_401;
        auto tmp3_460 = -tmp3_199*tmp3_438;
        auto tmp3_461 = tmp3_392*tmp3_153;
        auto tmp3_462 = tmp3_429*tmp3_152;
        auto tmp3_463 = tmp3_425*tmp3_224;
        auto tmp3_464 = tmp3_388*tmp3_225;
        auto tmp3_465 = tmp3_325*tmp3_159;
        auto tmp3_466 = tmp3_465 + tmp3_463-tmp3_464;
        auto tmp3_467 = tmp3_466*tmp3_151;
        auto tmp3_468 = tmp3_329*tmp3_154;
        auto tmp3_469 = tmp3_461-tmp3_462 + tmp3_467-tmp3_468;
        auto tmp3_470 = tmp3_197*tmp3_469;
        auto tmp3_471 = tmp3_397*tmp3_153;
        auto tmp3_472 = tmp3_434*tmp3_152;
        auto tmp3_473 = tmp3_466*tmp3_207;
        auto tmp3_474 = tmp3_334*tmp3_154;
        auto tmp3_475 = tmp3_471-tmp3_472 + tmp3_473-tmp3_474;
        auto tmp3_476 = -tmp3_192*tmp3_475;
        auto tmp3_477 = tmp3_476 + tmp3_470 + tmp3_460 + tmp3_458 + tmp3_459;
        auto tmp3_478 = tmp3_146*tmp3_477;
        auto tmp3_479 = tmp3_201*tmp3_348;
        auto tmp3_480 = -tmp3_200*tmp3_411;
        auto tmp3_481 = tmp3_199*tmp3_448;
        auto tmp3_482 = -tmp3_198*tmp3_469;
        auto tmp3_483 = tmp3_407*tmp3_153;
        auto tmp3_484 = tmp3_444*tmp3_152;
        auto tmp3_485 = tmp3_466*tmp3_212;
        auto tmp3_486 = tmp3_344*tmp3_154;
        auto tmp3_487 = tmp3_483-tmp3_484 + tmp3_485-tmp3_486;
        auto tmp3_488 = tmp3_192*tmp3_487;
        auto tmp3_489 = tmp3_488 + tmp3_482 + tmp3_481 + tmp3_479 + tmp3_480;
        auto tmp3_490 = tmp3_184*tmp3_489;
        auto tmp3_491 = -tmp3_201*tmp3_354;
        auto tmp3_492 = tmp3_200*tmp3_417;
        auto tmp3_493 = -tmp3_199*tmp3_454;
        auto tmp3_494 = tmp3_198*tmp3_475;
        auto tmp3_495 = -tmp3_197*tmp3_487;
        auto tmp3_496 = tmp3_495 + tmp3_494 + tmp3_493 + tmp3_491 + tmp3_492;
        auto tmp3_497 = tmp3_183*tmp3_496;
        auto tmp3_498 = tmp3_497 + tmp3_490 + tmp3_478 + tmp3_457 + tmp3_357 + tmp3_420;
        auto __PowCall7 = SecDecInternalSqr(tmp3_178);
        auto __PowCall8 = SecDecInternalSqr(tmp3_191);
        auto __PowCall9 = SecDecInternalSqr(tmp3_206);
        auto __PowCall10 = SecDecInternalSqr(tmp3_217);
        auto __PowCall11 = SecDecInternalSqr(tmp3_230);
        auto __PowCall12 = SecDecInternalSqr(tmp3_243);
        auto tmp3_499 = tmp3_178*tmp1_4;
        auto tmp3_500 = tmp3_499*__PowCall8;
        auto tmp3_501 = __PowCall8*tmp3_100;
        auto tmp3_502 = tmp3_501 + tmp3_500;
        auto tmp3_503 = tmp3_230*tmp3_502;
        auto tmp3_504 = tmp3_206*tmp1_4;
        auto tmp3_505 = tmp3_504 + tmp3_100;
        auto tmp3_506 = tmp3_243*tmp3_505;
        auto tmp3_507 = tmp3_506 + tmp3_503 + tmp3_500 + tmp3_504;
        auto tmp3_508 = tmp3_217*tmp3_507;
        auto tmp3_509 = tmp3_178*tmp3_101;
        auto tmp3_510 = tmp3_230*tmp3_101;
        auto tmp3_511 = tmp3_510 + tmp3_102 + tmp3_509;
        auto tmp3_512 = tmp3_243*tmp3_511;
        auto tmp3_513 = tmp3_178*tmp3_103;
        auto tmp3_514 = tmp3_101 + tmp3_513;
        auto tmp3_515 = tmp3_206*tmp3_514;
        auto tmp3_516 = tmp3_206*tmp3_101;
        auto tmp3_517 = tmp3_102 + tmp3_516;
        auto tmp3_518 = tmp3_230*tmp3_517;
        auto tmp3_519 = tmp3_512 + tmp3_518 + tmp3_515 + tmp3_101 + tmp3_509;
        auto tmp3_520 = tmp3_217*tmp3_519;
        auto tmp3_521 = tmp3_499 + tmp3_100;
        auto tmp3_522 = tmp3_521*tmp3_230;
        auto tmp3_523 = __PowCall7 + __PowCall11 + 1;
        auto tmp3_524 = tmp3_523 + __PowCall10;
        auto tmp3_525 = msq*tmp3_524;
        auto tmp3_526 = tmp3_525 + tmp3_522 + tmp3_499;
        auto tmp3_527 = tmp3_243 + tmp3_206 + 1;
        auto tmp3_528 = tmp3_527*tmp3_526;
        auto tmp3_529 = tmp3_520 + tmp3_528;
        auto tmp3_530 = tmp3_191*tmp3_529;
        auto tmp3_531 = tmp3_499 + tmp1_4;
        auto tmp3_532 = tmp3_531*tmp3_206;
        auto tmp3_533 = tmp3_178 + 1;
        auto tmp3_534 = tmp3_100*tmp3_533;
        auto tmp3_535 = tmp3_230*tmp3_505;
        auto tmp3_536 = tmp3_535 + tmp3_532 + tmp3_534;
        auto tmp3_537 = tmp3_243*tmp3_536;
        auto tmp3_538 = __PowCall9 + __PowCall12 + 1;
        auto tmp3_539 = __PowCall8*__PowCall10;
        auto tmp3_540 = tmp3_538 + tmp3_539;
        auto tmp3_541 = tmp3_230 + tmp3_533;
        auto tmp3_542 = tmp3_540*tmp3_541;
        auto tmp3_543 = __PowCall8*tmp3_523;
        auto tmp3_544 = tmp3_543 + tmp3_538;
        auto tmp3_545 = tmp3_217*tmp3_544;
        auto tmp3_546 = tmp3_545 + tmp3_542;
        auto tmp3_547 = msq*tmp3_546;
        auto tmp3_548 = tmp3_230*tmp3_504;
        auto tmp3_549 = tmp3_530 + tmp3_547 + tmp3_508 + tmp3_537 + tmp3_532 + tmp3_548;
        auto __PowCall13 = SecDecInternalSqr(tmp3_549)*tmp3_549;
        auto __DenominatorCall1 = SecDecInternalDenominator(__PowCall13);
        auto tmp3_550 = -tmp3_119 + tmp3_549;
        auto tmp3_551 = tmp3_498*tmp3_173*__DenominatorCall1*tmp1_44*tmp3_255;
        auto _SignCheckExpression = SecDecInternalImagPart(tmp3_550);
        SecDecInternalSignCheckContourDeformation(!(_SignCheckExpression<=0), 1);
        auto tmp3_552 = SecDecInternalRealPart(tmp3_255);
        SecDecInternalSignCheckPositivePolynomial(!(tmp3_552>=0), 1);
        val = val + w*(tmp3_551);
    }
    // Sum up 128*8=1024 values across 4 warps.
    typedef cub::BlockReduce<result_t, 128, cub::BLOCK_REDUCE_RAKING_COMMUTATIVE_ONLY> Reduce;
    __shared__ typename Reduce::TempStorage shared;
    result_t sum = Reduce(shared).Sum(val);
    if (tid == 0) result[bid] = sum;
}
