#include "optimize_deformation_parameters_sector_11_0.hpp"
namespace doublebox_nonplanar_integral
{
void sector_11_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x0-1;
    auto tmp1_2 = tmp1_1*x0;
    auto tmp1_3 = tmp1_2*x3;
    auto tmp1_4 = SecDecInternalSqr(x0);
    auto tmp3_1 = tmp1_4-1;
    auto tmp1_5 = tmp3_1*x0;
    auto tmp3_2 = tmp1_3 + tmp1_5;
    auto tmp1_6 = -x2-x4;
    auto tmp3_3 = tmp3_2*tmp1_6;
    auto tmp3_4 = x1*x0;
    auto tmp3_5 = -tmp3_1*tmp3_4;
    auto tmp1_7 = tmp3_4*tmp1_1;
    auto tmp1_8 = tmp1_7 + tmp1_2;
    auto tmp1_9 = -x3*tmp1_8;
    auto tmp3_6 = tmp1_9-tmp1_5 + tmp3_5 + tmp3_3;
    auto tmp3_7 = -2*tmp1_2-tmp1_7;
    auto tmp3_8 = x1*tmp3_7;
    auto tmp3_9 = tmp1_2*x4;
    auto tmp3_10 = -2*tmp1_8-tmp3_9;
    auto tmp3_11 = x4*tmp3_10;
    auto tmp3_12 = -tmp3_9-tmp1_8;
    auto tmp3_13 = -x2*tmp1_2;
    auto tmp3_14 = 3*tmp3_12 + tmp3_13;
    auto tmp3_15 = x2*tmp3_14;
    auto tmp3_16 = tmp3_15 + tmp3_11-tmp1_2 + tmp3_8;
    auto tmp3_17 = x5*tmp3_16;
    auto tmp3_18 = 2*tmp3_6 + tmp3_17;
    auto tmp3_19 = msq*tmp3_18;
    auto tmp3_20 = x0*s;
    auto tmp3_21 = -s + tmp3_20;
    auto tmp3_22 = x2*tmp3_21*tmp3_4;
    auto tmp3_23 = x0*t;
    auto tmp3_24 = -t + tmp3_23;
    auto tmp3_25 = x4*x0*tmp3_24;
    auto tmp3_26 = tmp3_25 + tmp3_22;
    auto tmp3_27 = x5*tmp3_26;
    auto tmp3_28 = tmp3_27 + tmp3_19;
    auto tmp3_29 = x0 + 1;
    auto tmp3_30 = tmp3_29*x1;
    auto tmp3_31 = tmp3_30-tmp3_29;
    auto tmp3_32 = tmp3_31*x1;
    auto tmp1_10 = x1-1;
    auto tmp1_11 = x3*x1;
    auto tmp1_12 = tmp1_10*tmp1_11;
    auto tmp3_33 = tmp3_32 + tmp1_12;
    auto tmp1_13 = -x4*tmp3_33;
    auto tmp1_14 = SecDecInternalSqr(x1);
    auto tmp3_34 = tmp1_14-1;
    auto tmp1_15 = tmp3_34*x1;
    auto tmp1_16 = -tmp3_29*tmp1_15;
    auto tmp1_17 = -tmp3_34*tmp1_11;
    auto tmp3_35 = tmp1_13 + tmp1_16 + tmp1_17;
    auto tmp3_36 = x2*tmp3_33;
    auto tmp3_37 = tmp1_10*x1;
    auto tmp3_38 = -x4*tmp3_37;
    auto tmp3_39 = -tmp1_15 + tmp3_38;
    auto tmp3_40 = -x2*tmp3_37;
    auto tmp3_41 = 2*tmp3_39 + tmp3_40;
    auto tmp3_42 = x5*x2;
    auto tmp3_43 = tmp3_41*tmp3_42;
    auto tmp3_44 = tmp3_43 + 2*tmp3_35-3*tmp3_36;
    auto tmp3_45 = x5*tmp3_44;
    auto tmp3_46 = 2*x1;
    auto tmp3_47 = -tmp3_31*tmp3_46;
    auto tmp3_48 = tmp3_47-tmp1_12;
    auto tmp3_49 = x3*tmp3_48;
    auto tmp3_50 = x0 + 2;
    auto tmp3_51 = tmp3_50*x0;
    auto tmp3_52 = tmp3_51 + 1;
    auto tmp3_53 = -tmp3_52*tmp3_37;
    auto tmp3_54 = tmp3_45 + tmp3_53 + tmp3_49;
    auto tmp3_55 = msq*tmp3_54;
    auto tmp3_56 = x1*t;
    auto tmp3_57 = -t + tmp3_56;
    auto tmp3_58 = tmp3_57*tmp1_11;
    auto tmp3_59 = tmp3_4*s;
    auto tmp3_60 = -tmp3_20 + tmp3_59;
    auto tmp3_61 = x1*tmp3_60*tmp3_42;
    auto tmp3_62 = tmp3_55 + tmp3_58 + tmp3_61;
    auto tmp3_63 = tmp3_29 + x3;
    auto tmp3_64 = tmp3_63*x4;
    auto tmp3_65 = tmp3_64 + tmp3_30;
    auto tmp1_18 = tmp3_63*x2;
    auto tmp1_19 = -1-3*x1;
    auto tmp3_66 = x3*tmp1_19;
    auto tmp3_67 = -2*tmp1_18 + tmp3_66-tmp3_29-3*tmp3_65;
    auto tmp3_68 = x2*tmp3_67;
    auto tmp1_20 = tmp3_30 + tmp3_29;
    auto tmp1_21 = x1 + 1;
    auto tmp1_22 = tmp1_21*x3;
    auto tmp1_23 = tmp1_20 + tmp1_22;
    auto tmp1_24 = tmp1_23 + tmp3_64;
    auto tmp3_69 = 3*tmp1_24;
    auto tmp3_70 = tmp3_69 + tmp3_68;
    auto tmp3_71 = x2*tmp3_70;
    auto tmp1_25 = tmp1_21 + x4;
    auto tmp3_72 = tmp1_25*x2;
    auto tmp1_26 = -tmp3_46-x4;
    auto tmp3_73 = x4*tmp1_26;
    auto tmp3_74 = -2*tmp3_72 + tmp3_73-tmp3_34;
    auto tmp3_75 = x2*tmp3_74;
    auto tmp3_76 = x4 + 2*tmp1_21;
    auto tmp3_77 = tmp3_76*x4;
    auto tmp1_27 = x1 + 2;
    auto tmp3_78 = tmp1_27*x1;
    auto tmp3_79 = tmp3_78 + 1;
    auto tmp3_80 = tmp3_77 + tmp3_79;
    auto tmp3_81 = tmp3_75 + tmp3_80;
    auto tmp3_82 = tmp3_81*tmp3_42;
    auto tmp3_83 = tmp3_71 + tmp3_82;
    auto tmp3_84 = x5*tmp3_83;
    auto tmp3_85 = 2*tmp3_29;
    auto tmp1_28 = tmp3_85 + x3;
    auto tmp3_86 = tmp1_28*x3;
    auto tmp3_87 = tmp3_86 + tmp3_52;
    auto tmp3_88 = x2-1;
    auto tmp1_29 = tmp3_88*x2;
    auto tmp1_30 = -tmp3_87*tmp1_29;
    auto tmp3_89 = tmp1_30 + tmp3_84;
    auto tmp3_90 = msq*tmp3_89;
    auto tmp3_91 = x4*t;
    auto tmp3_92 = tmp3_42*tmp3_91*tmp3_88;
    auto tmp1_31 = x3*t;
    auto tmp3_93 = tmp3_59 + tmp1_31;
    auto tmp1_32 = tmp3_93 + tmp3_91;
    auto tmp1_33 = tmp1_32*tmp1_29;
    auto tmp3_94 = tmp1_33 + tmp3_92;
    auto tmp3_95 = x5*tmp3_94;
    auto tmp3_96 = tmp1_31*tmp1_29;
    auto tmp3_97 = tmp3_90 + tmp3_96 + tmp3_95;
    auto tmp3_98 = x2*x3;
    auto tmp3_99 = x4*x3;
    auto tmp3_100 = tmp3_98 + tmp3_99;
    auto tmp1_34 = x3 + x0;
    auto tmp3_101 = tmp1_34*x3;
    auto tmp3_102 = tmp3_101-tmp3_29;
    auto tmp3_103 = -tmp3_102*tmp3_100;
    auto tmp3_104 = -tmp1_22-x0-tmp3_4;
    auto tmp3_105 = x3*tmp3_104;
    auto tmp3_106 = tmp3_105 + tmp1_20;
    auto tmp3_107 = x3*tmp3_106;
    auto tmp3_108 = tmp3_107 + tmp3_103;
    auto tmp3_109 = tmp1_22-tmp1_21;
    auto tmp3_110 = tmp3_109*x3;
    auto tmp3_111 = x3-1;
    auto tmp3_112 = tmp3_111*tmp3_99;
    auto tmp1_35 = -2*tmp3_110-tmp3_112;
    auto tmp3_113 = x4*tmp1_35;
    auto tmp3_114 = -tmp3_110-tmp3_112;
    auto tmp3_115 = -tmp3_111*tmp3_98;
    auto tmp3_116 = 3*tmp3_114 + tmp3_115;
    auto tmp3_117 = x2*tmp3_116;
    auto tmp3_118 = tmp3_79*x3;
    auto tmp3_119 = -tmp3_118 + tmp3_79;
    auto tmp3_120 = x3*tmp3_119;
    auto tmp3_121 = tmp3_117 + tmp3_120 + tmp3_113;
    auto tmp3_122 = x5*tmp3_121;
    auto tmp3_123 = 2*tmp3_108 + tmp3_122;
    auto tmp3_124 = msq*tmp3_123;
    auto tmp3_125 = x5 + 1;
    auto tmp3_126 = tmp1_31-t;
    auto tmp3_127 = tmp3_125*tmp3_126*tmp3_100;
    auto tmp3_128 = tmp3_56 + t;
    auto tmp3_129 = x3*tmp3_128*tmp3_111;
    auto tmp3_130 = tmp3_124 + tmp3_129 + tmp3_127;
    auto tmp3_131 = t + tmp3_23 + tmp1_31;
    auto tmp3_132 = tmp3_131*x4;
    auto tmp3_133 = tmp3_91-t;
    auto tmp3_134 = tmp3_133*tmp3_42;
    auto tmp3_135 = tmp3_134 + tmp3_132-tmp3_131;
    auto tmp3_136 = x4*tmp3_135;
    auto tmp3_137 = x2*x4;
    auto tmp3_138 = tmp3_133*tmp3_137;
    auto tmp3_139 = tmp3_138 + tmp3_136;
    auto tmp3_140 = x5*tmp3_139;
    auto tmp3_141 = -tmp1_11-tmp3_65;
    auto tmp3_142 = x4*tmp3_141;
    auto tmp3_143 = tmp3_142 + tmp1_23;
    auto tmp3_144 = 2*x4;
    auto tmp3_145 = tmp3_143*tmp3_144;
    auto tmp3_146 = -x1-x4;
    auto tmp3_147 = x4*tmp3_146;
    auto tmp3_148 = tmp3_147 + tmp1_21;
    auto tmp3_149 = tmp3_148*tmp3_144;
    auto tmp3_150 = x4-1;
    auto tmp3_151 = -tmp3_150*tmp3_137;
    auto tmp3_152 = tmp3_149 + tmp3_151;
    auto tmp3_153 = tmp3_152*tmp3_42;
    auto tmp3_154 = -tmp3_64 + tmp3_63;
    auto tmp3_155 = tmp3_154*tmp3_137;
    auto tmp3_156 = tmp3_153 + tmp3_145 + 3*tmp3_155;
    auto tmp3_157 = x5*tmp3_156;
    auto tmp3_158 = tmp3_150*x4;
    auto tmp3_159 = -tmp3_87*tmp3_158;
    auto tmp3_160 = tmp3_159 + tmp3_157;
    auto tmp3_161 = msq*tmp3_160;
    auto tmp3_162 = tmp1_31*tmp3_158;
    auto tmp3_163 = tmp3_161 + tmp3_162 + tmp3_140;
    auto tmp3_164 = tmp3_144-x3 + tmp3_46-tmp1_1;
    auto tmp3_165 = x2*tmp3_164;
    auto tmp3_166 = 3*x0;
    auto tmp3_167 = tmp3_166-1;
    auto tmp3_168 = tmp3_46-tmp3_167;
    auto tmp3_169 = x1*tmp3_168;
    auto tmp3_170 = tmp3_144-3*x3 + 4*x1-tmp3_167;
    auto tmp3_171 = x4*tmp3_170;
    auto tmp3_172 = tmp3_165 + tmp3_171-3*tmp1_22 + tmp3_169-1-tmp3_166;
    auto tmp3_173 = x2*tmp3_172;
    auto tmp3_174 = tmp3_85 + tmp3_30;
    auto tmp3_175 = tmp3_174*x1;
    auto tmp3_176 = tmp3_64 + 2*tmp1_23;
    auto tmp3_177 = tmp3_176*x4;
    auto tmp3_178 = tmp3_175 + tmp3_177 + tmp3_118 + tmp3_29;
    auto tmp3_179 = -tmp3_72-tmp3_80;
    auto tmp3_180 = 2*tmp3_42;
    auto tmp3_181 = tmp3_179*tmp3_180;
    auto tmp3_182 = tmp3_181 + tmp3_173-tmp3_178;
    auto tmp3_183 = x5*tmp3_182;
    auto tmp3_184 = tmp3_69 + tmp1_18;
    auto tmp3_185 = x2*tmp3_184;
    auto tmp3_186 = tmp3_183 + tmp3_185 + tmp3_178;
    auto tmp3_187 = msq*tmp3_186;
    auto tmp3_188 = -tmp3_91 + tmp3_93;
    auto tmp3_189 = x2*tmp3_188;
    auto tmp3_190 = tmp3_91*tmp3_180;
    auto tmp3_191 = tmp3_190 + tmp3_132 + tmp3_189;
    auto tmp3_192 = x5*tmp3_191;
    auto tmp3_193 = tmp1_32*x2;
    auto tmp3_194 = tmp3_187 + tmp3_192-tmp3_132-tmp3_193;
    auto tmp3_195 = x5*tmp3_194;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_28))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_62))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_97))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_130))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_163))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_195))));
}
}
