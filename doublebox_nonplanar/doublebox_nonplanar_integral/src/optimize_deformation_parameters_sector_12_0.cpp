#include "optimize_deformation_parameters_sector_12_0.hpp"
namespace doublebox_nonplanar_integral
{
void sector_12_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x0-1;
    auto tmp1_2 = tmp1_1*x0;
    auto tmp1_3 = tmp1_2*x4;
    auto tmp1_4 = SecDecInternalSqr(x0);
    auto tmp3_1 = tmp1_4-1;
    auto tmp1_5 = tmp3_1*x0;
    auto tmp3_2 = tmp1_3 + tmp1_5;
    auto tmp1_6 = -x2-x3;
    auto tmp3_3 = tmp3_2*tmp1_6;
    auto tmp3_4 = x1*x0;
    auto tmp3_5 = -tmp3_1*tmp3_4;
    auto tmp1_7 = tmp1_1*tmp3_4;
    auto tmp1_8 = tmp1_7 + tmp1_2;
    auto tmp1_9 = -x4*tmp1_8;
    auto tmp3_6 = tmp1_9-tmp1_5 + tmp3_5 + tmp3_3;
    auto tmp3_7 = -2*tmp1_2-tmp1_7;
    auto tmp3_8 = x1*tmp3_7;
    auto tmp3_9 = tmp1_2*x3;
    auto tmp3_10 = -2*tmp1_8-tmp3_9;
    auto tmp3_11 = x3*tmp3_10;
    auto tmp3_12 = -tmp3_9-tmp1_8;
    auto tmp3_13 = -x2*tmp1_2;
    auto tmp3_14 = 3*tmp3_12 + tmp3_13;
    auto tmp3_15 = x2*tmp3_14;
    auto tmp3_16 = tmp3_15 + tmp3_11-tmp1_2 + tmp3_8;
    auto tmp3_17 = x5*tmp3_16;
    auto tmp3_18 = 2*tmp3_6 + tmp3_17;
    auto tmp3_19 = msq*tmp3_18;
    auto tmp3_20 = x2*s*tmp1_7;
    auto tmp3_21 = x0*t;
    auto tmp3_22 = -t + tmp3_21;
    auto tmp3_23 = x3*x0*tmp3_22;
    auto tmp3_24 = tmp3_23 + tmp3_20;
    auto tmp3_25 = x5*tmp3_24;
    auto tmp3_26 = tmp3_25 + tmp3_19;
    auto tmp3_27 = x0 + 1;
    auto tmp3_28 = tmp3_27*x1;
    auto tmp3_29 = tmp3_28-tmp3_27;
    auto tmp3_30 = tmp3_29*x1;
    auto tmp3_31 = x1-1;
    auto tmp1_10 = x4*x1;
    auto tmp1_11 = tmp3_31*tmp1_10;
    auto tmp3_32 = tmp3_30 + tmp1_11;
    auto tmp1_12 = -x3*tmp3_32;
    auto tmp1_13 = SecDecInternalSqr(x1);
    auto tmp3_33 = tmp1_13-1;
    auto tmp1_14 = tmp3_33*x1;
    auto tmp1_15 = -tmp3_27*tmp1_14;
    auto tmp1_16 = -tmp3_33*tmp1_10;
    auto tmp3_34 = tmp1_12 + tmp1_15 + tmp1_16;
    auto tmp3_35 = x2*tmp3_32;
    auto tmp3_36 = tmp3_31*x1;
    auto tmp3_37 = -x3*tmp3_36;
    auto tmp3_38 = -tmp1_14 + tmp3_37;
    auto tmp3_39 = -x2*tmp3_36;
    auto tmp3_40 = 2*tmp3_38 + tmp3_39;
    auto tmp3_41 = x5*x2;
    auto tmp3_42 = tmp3_40*tmp3_41;
    auto tmp3_43 = tmp3_42 + 2*tmp3_34-3*tmp3_35;
    auto tmp3_44 = x5*tmp3_43;
    auto tmp3_45 = 2*x1;
    auto tmp3_46 = -tmp3_29*tmp3_45;
    auto tmp3_47 = tmp3_46-tmp1_11;
    auto tmp3_48 = x4*tmp3_47;
    auto tmp3_49 = x0 + 2;
    auto tmp3_50 = tmp3_49*x0;
    auto tmp3_51 = tmp3_50 + 1;
    auto tmp3_52 = -tmp3_51*tmp3_36;
    auto tmp3_53 = tmp3_44 + tmp3_52 + tmp3_48;
    auto tmp3_54 = msq*tmp3_53;
    auto tmp3_55 = x1*t;
    auto tmp3_56 = -t + tmp3_55;
    auto tmp3_57 = tmp3_56*tmp1_10;
    auto tmp3_58 = tmp3_4*s;
    auto tmp3_59 = -x0*s;
    auto tmp3_60 = tmp3_59 + tmp3_58;
    auto tmp3_61 = x1*tmp3_60*tmp3_41;
    auto tmp3_62 = tmp3_54 + tmp3_57 + tmp3_61;
    auto tmp3_63 = tmp3_27 + x4;
    auto tmp3_64 = tmp3_63*x3;
    auto tmp1_17 = tmp3_64 + tmp3_28;
    auto tmp1_18 = tmp3_63*x2;
    auto tmp1_19 = -1-3*x1;
    auto tmp3_65 = x4*tmp1_19;
    auto tmp3_66 = -2*tmp1_18 + tmp3_65-tmp3_27-3*tmp1_17;
    auto tmp3_67 = x2*tmp3_66;
    auto tmp1_20 = tmp3_28 + tmp3_27;
    auto tmp1_21 = x1 + 1;
    auto tmp1_22 = tmp1_21*x4;
    auto tmp1_23 = tmp1_20 + tmp1_22;
    auto tmp1_24 = tmp1_23 + tmp3_64;
    auto tmp3_68 = 3*tmp1_24;
    auto tmp3_69 = tmp3_68 + tmp3_67;
    auto tmp3_70 = x2*tmp3_69;
    auto tmp1_25 = tmp1_21 + x3;
    auto tmp3_71 = tmp1_25*x2;
    auto tmp1_26 = -tmp3_45-x3;
    auto tmp3_72 = x3*tmp1_26;
    auto tmp3_73 = -2*tmp3_71 + tmp3_72-tmp3_33;
    auto tmp3_74 = x2*tmp3_73;
    auto tmp3_75 = x3 + 2*tmp1_21;
    auto tmp3_76 = tmp3_75*x3;
    auto tmp1_27 = x1 + 2;
    auto tmp3_77 = tmp1_27*x1;
    auto tmp3_78 = tmp3_77 + 1;
    auto tmp3_79 = tmp3_76 + tmp3_78;
    auto tmp3_80 = tmp3_74 + tmp3_79;
    auto tmp3_81 = tmp3_80*tmp3_41;
    auto tmp3_82 = tmp3_70 + tmp3_81;
    auto tmp3_83 = x5*tmp3_82;
    auto tmp3_84 = 2*tmp3_27;
    auto tmp1_28 = tmp3_84 + x4;
    auto tmp3_85 = tmp1_28*x4;
    auto tmp3_86 = tmp3_85 + tmp3_51;
    auto tmp3_87 = x2-1;
    auto tmp1_29 = tmp3_87*x2;
    auto tmp1_30 = -tmp3_86*tmp1_29;
    auto tmp3_88 = tmp1_30 + tmp3_83;
    auto tmp3_89 = msq*tmp3_88;
    auto tmp3_90 = x3*t;
    auto tmp3_91 = tmp3_41*tmp3_90*tmp3_87;
    auto tmp3_92 = tmp3_58 + t;
    auto tmp1_31 = x4*t;
    auto tmp1_32 = tmp1_31*x3;
    auto tmp1_33 = tmp3_92 + tmp1_32;
    auto tmp1_34 = tmp1_33*tmp1_29;
    auto tmp3_93 = tmp1_34 + tmp3_91;
    auto tmp3_94 = x5*tmp3_93;
    auto tmp3_95 = tmp1_31*tmp1_29;
    auto tmp3_96 = tmp3_89 + tmp3_95 + tmp3_94;
    auto tmp3_97 = t + tmp3_21 + tmp1_31;
    auto tmp3_98 = tmp3_97*x3;
    auto tmp3_99 = -t + tmp3_90;
    auto tmp3_100 = tmp3_99*tmp3_41;
    auto tmp3_101 = tmp3_100 + tmp3_98-tmp3_97;
    auto tmp3_102 = x3*tmp3_101;
    auto tmp3_103 = tmp1_32-tmp1_31;
    auto tmp3_104 = x2*x3;
    auto tmp3_105 = tmp3_103*tmp3_104;
    auto tmp3_106 = tmp3_105 + tmp3_102;
    auto tmp3_107 = x5*tmp3_106;
    auto tmp3_108 = -tmp1_10-tmp1_17;
    auto tmp3_109 = x3*tmp3_108;
    auto tmp3_110 = tmp3_109 + tmp1_23;
    auto tmp3_111 = 2*x3;
    auto tmp3_112 = tmp3_110*tmp3_111;
    auto tmp3_113 = -x1-x3;
    auto tmp3_114 = x3*tmp3_113;
    auto tmp3_115 = tmp3_114 + tmp1_21;
    auto tmp3_116 = tmp3_115*tmp3_111;
    auto tmp1_35 = x3-1;
    auto tmp1_36 = -tmp1_35*tmp3_104;
    auto tmp3_117 = tmp3_116 + tmp1_36;
    auto tmp3_118 = tmp3_117*tmp3_41;
    auto tmp3_119 = -tmp3_64 + tmp3_63;
    auto tmp3_120 = tmp3_119*tmp3_104;
    auto tmp3_121 = tmp3_118 + tmp3_112 + 3*tmp3_120;
    auto tmp3_122 = x5*tmp3_121;
    auto tmp3_123 = -x3*tmp3_86*tmp1_35;
    auto tmp3_124 = tmp3_123 + tmp3_122;
    auto tmp3_125 = msq*tmp3_124;
    auto tmp3_126 = x3*tmp3_103;
    auto tmp3_127 = tmp3_125 + tmp3_126 + tmp3_107;
    auto tmp3_128 = x2*x4;
    auto tmp3_129 = x3*x4;
    auto tmp3_130 = -tmp3_128-tmp3_129;
    auto tmp3_131 = x4 + x0;
    auto tmp3_132 = tmp3_131*x4;
    auto tmp3_133 = tmp3_132-tmp3_27;
    auto tmp3_134 = tmp3_133*tmp3_130;
    auto tmp3_135 = -tmp1_22-x0-tmp3_4;
    auto tmp3_136 = x4*tmp3_135;
    auto tmp3_137 = tmp3_136 + tmp1_20;
    auto tmp3_138 = x4*tmp3_137;
    auto tmp3_139 = tmp3_138 + tmp3_134;
    auto tmp3_140 = tmp1_22-tmp1_21;
    auto tmp3_141 = tmp3_140*x4;
    auto tmp3_142 = x4-1;
    auto tmp3_143 = tmp3_142*tmp3_129;
    auto tmp3_144 = -2*tmp3_141-tmp3_143;
    auto tmp3_145 = x3*tmp3_144;
    auto tmp3_146 = -tmp3_141-tmp3_143;
    auto tmp3_147 = -tmp3_142*tmp3_128;
    auto tmp3_148 = 3*tmp3_146 + tmp3_147;
    auto tmp3_149 = x2*tmp3_148;
    auto tmp3_150 = tmp3_78*x4;
    auto tmp3_151 = -tmp3_150 + tmp3_78;
    auto tmp3_152 = x4*tmp3_151;
    auto tmp3_153 = tmp3_149 + tmp3_152 + tmp3_145;
    auto tmp3_154 = x5*tmp3_153;
    auto tmp3_155 = 2*tmp3_139 + tmp3_154;
    auto tmp3_156 = msq*tmp3_155;
    auto tmp3_157 = 1 + x2;
    auto tmp3_158 = x5*tmp3_157;
    auto tmp3_159 = tmp3_158 + 1;
    auto tmp3_160 = tmp1_31-t;
    auto tmp3_161 = tmp3_159*tmp3_160*tmp3_129;
    auto tmp3_162 = tmp3_55 + t;
    auto tmp3_163 = x4*tmp3_162*tmp3_142;
    auto tmp3_164 = tmp3_160*tmp3_128;
    auto tmp3_165 = tmp3_156 + tmp3_164 + tmp3_163 + tmp3_161;
    auto tmp3_166 = tmp3_111-x4 + tmp3_45-tmp1_1;
    auto tmp3_167 = x2*tmp3_166;
    auto tmp3_168 = 3*x0;
    auto tmp3_169 = tmp3_168-1;
    auto tmp3_170 = tmp3_45-tmp3_169;
    auto tmp3_171 = x1*tmp3_170;
    auto tmp3_172 = tmp3_111-3*x4 + 4*x1-tmp3_169;
    auto tmp3_173 = x3*tmp3_172;
    auto tmp3_174 = tmp3_167 + tmp3_173-3*tmp1_22 + tmp3_171-1-tmp3_168;
    auto tmp3_175 = x2*tmp3_174;
    auto tmp3_176 = tmp3_64 + 2*tmp1_23;
    auto tmp3_177 = tmp3_176*x3;
    auto tmp3_178 = tmp3_84 + tmp3_28;
    auto tmp3_179 = tmp3_178*x1;
    auto tmp3_180 = tmp3_150 + tmp3_27 + tmp3_177 + tmp3_179;
    auto tmp3_181 = -tmp3_71-tmp3_79;
    auto tmp3_182 = 2*tmp3_41;
    auto tmp3_183 = tmp3_181*tmp3_182;
    auto tmp3_184 = tmp3_183 + tmp3_175-tmp3_180;
    auto tmp3_185 = x5*tmp3_184;
    auto tmp3_186 = tmp3_68 + tmp1_18;
    auto tmp3_187 = x2*tmp3_186;
    auto tmp3_188 = tmp3_185 + tmp3_187 + tmp3_180;
    auto tmp3_189 = msq*tmp3_188;
    auto tmp3_190 = -2*t + tmp1_31;
    auto tmp3_191 = x3*tmp3_190;
    auto tmp3_192 = tmp3_191 + tmp3_92;
    auto tmp3_193 = x2*tmp3_192;
    auto tmp3_194 = tmp3_90*tmp3_182;
    auto tmp3_195 = tmp3_194 + tmp3_98 + tmp3_193;
    auto tmp3_196 = x5*tmp3_195;
    auto tmp3_197 = tmp1_33*x2;
    auto tmp3_198 = tmp3_189 + tmp3_196-tmp3_98-tmp3_197;
    auto tmp3_199 = x5*tmp3_198;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_26))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_62))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_96))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_127))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_165))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_199))));
}
}
