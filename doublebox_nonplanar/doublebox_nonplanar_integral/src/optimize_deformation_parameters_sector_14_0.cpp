#include "optimize_deformation_parameters_sector_14_0.hpp"
namespace doublebox_nonplanar_integral
{
void sector_14_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x5*t;
    auto tmp1_2 = x2*t;
    auto tmp1_3 = t + tmp1_1 + tmp1_2;
    auto tmp1_4 = x4*x3;
    auto tmp1_5 = tmp1_3*tmp1_4;
    auto tmp1_6 = x3*t;
    auto tmp1_7 = tmp1_2-2*tmp1_6;
    auto tmp3_1 = x4*tmp1_7;
    auto tmp1_8 = tmp1_1*x3;
    auto tmp1_9 = tmp1_8 + s;
    auto tmp3_2 = tmp3_1 + tmp1_9;
    auto tmp3_3 = x1*tmp3_2;
    auto tmp1_10 = x0*x1;
    auto tmp1_11 = 2*tmp1_10;
    auto tmp1_12 = tmp1_4*t;
    auto tmp1_13 = tmp1_12*tmp1_11;
    auto tmp3_4 = tmp1_13 + tmp1_5 + tmp3_3;
    auto tmp3_5 = x0*tmp3_4;
    auto tmp3_6 = x5 + x2;
    auto tmp1_14 = 2*x3;
    auto tmp1_15 = 2*x4;
    auto tmp1_16 = tmp1_15-tmp3_6 + tmp1_14 + 1;
    auto tmp3_7 = x1*tmp1_16;
    auto tmp1_17 = 3*tmp3_6;
    auto tmp1_18 = tmp1_17-1;
    auto tmp1_19 = tmp1_14-tmp1_18;
    auto tmp3_8 = x3*tmp1_19;
    auto tmp3_9 = tmp1_15 + 4*x3-tmp1_18;
    auto tmp3_10 = x4*tmp3_9;
    auto tmp3_11 = tmp3_7 + tmp3_10 + tmp3_8-1-tmp1_17;
    auto tmp3_12 = x1*tmp3_11;
    auto tmp3_13 = x2 + 1;
    auto tmp3_14 = tmp3_13 + x5;
    auto tmp3_15 = tmp3_14*x3;
    auto tmp1_20 = tmp3_15 + tmp3_14;
    auto tmp1_21 = tmp3_14*x4;
    auto tmp1_22 = tmp1_21 + 2*tmp1_20;
    auto tmp3_16 = tmp1_22*x4;
    auto tmp1_23 = 2*tmp3_14;
    auto tmp1_24 = tmp1_23 + tmp3_15;
    auto tmp3_17 = tmp1_24*x3;
    auto tmp3_18 = tmp3_14 + tmp3_16 + tmp3_17;
    auto tmp3_19 = x3 + 2;
    auto tmp3_20 = tmp3_19*x3;
    auto tmp1_25 = x3 + 1;
    auto tmp1_26 = x4 + 2*tmp1_25;
    auto tmp3_21 = tmp1_26*x4;
    auto tmp3_22 = tmp3_21 + tmp3_20 + 1;
    auto tmp3_23 = tmp1_25 + x4;
    auto tmp3_24 = tmp3_23*x1;
    auto tmp1_27 = -tmp3_24-tmp3_22;
    auto tmp3_25 = tmp1_27*tmp1_11;
    auto tmp3_26 = tmp3_25 + tmp3_12-tmp3_18;
    auto tmp3_27 = x0*tmp3_26;
    auto tmp3_28 = tmp1_20 + tmp1_21;
    auto tmp3_29 = 3*tmp3_28;
    auto tmp3_30 = x1*tmp3_14;
    auto tmp3_31 = tmp3_29 + tmp3_30;
    auto tmp3_32 = x1*tmp3_31;
    auto tmp3_33 = tmp3_27 + tmp3_32 + tmp3_18;
    auto tmp3_34 = msq*tmp3_33;
    auto tmp3_35 = tmp1_2*x4;
    auto tmp3_36 = tmp1_9 + tmp3_35;
    auto tmp3_37 = tmp3_36*x1;
    auto tmp3_38 = tmp3_34 + tmp3_5-tmp1_5-tmp3_37;
    auto tmp3_39 = x0*tmp3_38;
    auto tmp3_40 = tmp1_21 + tmp3_15;
    auto tmp3_41 = -x1*tmp1_23;
    auto tmp3_42 = tmp3_41-tmp3_14-3*tmp3_40;
    auto tmp3_43 = x1*tmp3_42;
    auto tmp3_44 = tmp3_29 + tmp3_43;
    auto tmp3_45 = x1*tmp3_44;
    auto tmp3_46 = SecDecInternalSqr(x3);
    auto tmp3_47 = tmp3_46-1;
    auto tmp3_48 = -tmp1_14-x4;
    auto tmp3_49 = x4*tmp3_48;
    auto tmp3_50 = -2*tmp3_24 + tmp3_49-tmp3_47;
    auto tmp3_51 = x1*tmp3_50;
    auto tmp3_52 = tmp3_51 + tmp3_22;
    auto tmp3_53 = tmp3_52*tmp1_10;
    auto tmp3_54 = tmp3_45 + tmp3_53;
    auto tmp3_55 = x0*tmp3_54;
    auto tmp3_56 = x5 + 2*tmp3_13;
    auto tmp3_57 = tmp3_56*x5;
    auto tmp3_58 = x2 + 2;
    auto tmp3_59 = tmp3_58*x2;
    auto tmp3_60 = tmp3_57 + tmp3_59 + 1;
    auto tmp3_61 = x1-1;
    auto tmp3_62 = tmp3_61*x1;
    auto tmp3_63 = -tmp3_60*tmp3_62;
    auto tmp3_64 = tmp3_63 + tmp3_55;
    auto tmp3_65 = msq*tmp3_64;
    auto tmp3_66 = tmp1_10*tmp1_12*tmp3_61;
    auto tmp3_67 = tmp3_36*tmp3_62;
    auto tmp3_68 = tmp3_67 + tmp3_66;
    auto tmp3_69 = x0*tmp3_68;
    auto tmp3_70 = tmp1_2*x5;
    auto tmp3_71 = tmp3_70*tmp3_62;
    auto tmp3_72 = tmp3_65 + tmp3_71 + tmp3_69;
    auto tmp3_73 = x2-1;
    auto tmp3_74 = tmp3_73*x2;
    auto tmp3_75 = tmp3_74*x3;
    auto tmp1_28 = -2*tmp3_74-tmp3_75;
    auto tmp3_76 = x3*tmp1_28;
    auto tmp1_29 = -tmp3_74-tmp3_75;
    auto tmp1_30 = -x4*tmp3_74;
    auto tmp3_77 = 2*tmp1_29 + tmp1_30;
    auto tmp3_78 = x4*tmp3_77;
    auto tmp3_79 = x4 + 1;
    auto tmp1_31 = -tmp3_74*tmp3_79;
    auto tmp3_80 = -tmp3_75 + tmp1_31;
    auto tmp3_81 = -x1*tmp3_74;
    auto tmp3_82 = 3*tmp3_80 + tmp3_81;
    auto tmp3_83 = x1*tmp3_82;
    auto tmp3_84 = tmp3_83 + tmp3_78-tmp3_74 + tmp3_76;
    auto tmp3_85 = x0*tmp3_84;
    auto tmp3_86 = x5*x2;
    auto tmp3_87 = tmp3_73*tmp3_86;
    auto tmp3_88 = SecDecInternalSqr(x2);
    auto tmp3_89 = tmp3_88-1;
    auto tmp3_90 = tmp3_89*x2;
    auto tmp3_91 = tmp3_90 + tmp3_87;
    auto tmp3_92 = tmp3_79 + x1;
    auto tmp3_93 = tmp3_92 + x3;
    auto tmp3_94 = -tmp3_91*tmp3_93;
    auto tmp3_95 = 2*tmp3_94 + tmp3_85;
    auto tmp3_96 = msq*tmp3_95;
    auto tmp3_97 = tmp3_86*tmp3_93;
    auto tmp3_98 = x1*x4;
    auto tmp3_99 = tmp1_4 + tmp3_98;
    auto tmp3_100 = x0*tmp3_99*x2;
    auto tmp3_101 = tmp3_100 + tmp3_97;
    auto tmp3_102 = tmp1_2-t;
    auto tmp3_103 = tmp3_102*tmp3_101;
    auto tmp3_104 = tmp3_96 + tmp3_103;
    auto tmp3_105 = tmp3_47*x3;
    auto tmp3_106 = -tmp3_14*tmp3_105;
    auto tmp3_107 = tmp3_15-tmp3_14;
    auto tmp3_108 = -tmp3_107*tmp1_4;
    auto tmp3_109 = tmp3_106 + tmp3_108;
    auto tmp3_110 = x3-1;
    auto tmp3_111 = -tmp3_110*tmp1_4;
    auto tmp3_112 = -tmp3_105 + tmp3_111;
    auto tmp3_113 = x1*x3;
    auto tmp1_32 = -tmp3_110*tmp3_113;
    auto tmp3_114 = 2*tmp3_112 + tmp1_32;
    auto tmp3_115 = tmp3_114*tmp1_10;
    auto tmp3_116 = tmp3_107*tmp3_113;
    auto tmp3_117 = tmp3_115 + 2*tmp3_109-3*tmp3_116;
    auto tmp3_118 = x0*tmp3_117;
    auto tmp3_119 = -x3*tmp3_60*tmp3_110;
    auto tmp3_120 = tmp3_119 + tmp3_118;
    auto tmp3_121 = msq*tmp3_120;
    auto tmp3_122 = tmp1_3*tmp3_110;
    auto tmp3_123 = -t + tmp1_6;
    auto tmp3_124 = tmp3_123*tmp1_10;
    auto tmp3_125 = tmp3_124 + tmp3_122;
    auto tmp3_126 = tmp1_4*tmp3_125;
    auto tmp3_127 = -tmp1_1 + tmp1_8;
    auto tmp3_128 = tmp3_127*tmp3_113;
    auto tmp3_129 = tmp3_128 + tmp3_126;
    auto tmp3_130 = x0*tmp3_129;
    auto tmp3_131 = x3*x5;
    auto tmp3_132 = tmp1_2*tmp3_131;
    auto tmp3_133 = -tmp3_70 + tmp3_132;
    auto tmp3_134 = x3*tmp3_133;
    auto tmp3_135 = tmp3_121 + tmp3_134 + tmp3_130;
    auto tmp3_136 = -x3*tmp1_3;
    auto tmp3_137 = -tmp1_6 + tmp1_12;
    auto tmp3_138 = tmp3_137*tmp1_10;
    auto tmp3_139 = tmp3_138 + tmp3_136 + tmp1_5;
    auto tmp3_140 = x4*tmp3_139;
    auto tmp3_141 = -tmp1_2 + tmp3_35;
    auto tmp3_142 = tmp3_141*tmp3_98;
    auto tmp3_143 = tmp3_142 + tmp3_140;
    auto tmp3_144 = x0*tmp3_143;
    auto tmp3_145 = -x4*tmp3_40;
    auto tmp3_146 = tmp3_145 + tmp1_20;
    auto tmp3_147 = tmp3_146*tmp1_15;
    auto tmp3_148 = x4 + x3;
    auto tmp3_149 = -x4*tmp3_148;
    auto tmp3_150 = tmp3_149 + tmp1_25;
    auto tmp3_151 = tmp3_150*tmp1_15;
    auto tmp3_152 = x4-1;
    auto tmp3_153 = -tmp3_152*tmp3_98;
    auto tmp3_154 = tmp3_151 + tmp3_153;
    auto tmp3_155 = tmp3_154*tmp1_10;
    auto tmp3_156 = -tmp1_21 + tmp3_14;
    auto tmp3_157 = tmp3_156*tmp3_98;
    auto tmp3_158 = tmp3_155 + tmp3_147 + 3*tmp3_157;
    auto tmp3_159 = x0*tmp3_158;
    auto tmp3_160 = tmp3_152*x4;
    auto tmp3_161 = -tmp3_60*tmp3_160;
    auto tmp3_162 = tmp3_161 + tmp3_159;
    auto tmp3_163 = msq*tmp3_162;
    auto tmp3_164 = tmp3_70*tmp3_160;
    auto tmp3_165 = tmp3_163 + tmp3_164 + tmp3_144;
    auto tmp3_166 = x5-1;
    auto tmp3_167 = tmp3_166*x5;
    auto tmp3_168 = -tmp3_167*tmp3_79;
    auto tmp3_169 = tmp3_166*tmp3_131;
    auto tmp3_170 = -tmp3_169 + tmp3_168;
    auto tmp3_171 = -x1*tmp3_167;
    auto tmp3_172 = 3*tmp3_170 + tmp3_171;
    auto tmp3_173 = x1*tmp3_172;
    auto tmp3_174 = -2*tmp3_167-tmp3_169;
    auto tmp3_175 = x3*tmp3_174;
    auto tmp3_176 = -tmp3_167-tmp3_169;
    auto tmp3_177 = -x4*tmp3_167;
    auto tmp3_178 = 2*tmp3_176 + tmp3_177;
    auto tmp3_179 = x4*tmp3_178;
    auto tmp3_180 = tmp3_173 + tmp3_179-tmp3_167 + tmp3_175;
    auto tmp3_181 = x0*tmp3_180;
    auto tmp3_182 = tmp3_92*x5;
    auto tmp3_183 = tmp3_182 + tmp3_131;
    auto tmp3_184 = tmp3_6*x5;
    auto tmp3_185 = tmp3_184-tmp3_13;
    auto tmp3_186 = -tmp3_185*tmp3_183;
    auto tmp3_187 = 2*tmp3_186 + tmp3_181;
    auto tmp3_188 = msq*tmp3_187;
    auto tmp3_189 = tmp3_70-tmp1_2;
    auto tmp3_190 = tmp3_189*tmp3_183;
    auto tmp3_191 = x1 + x4;
    auto tmp3_192 = tmp1_1-t;
    auto tmp3_193 = x0*tmp3_131*tmp3_192*tmp3_191;
    auto tmp3_194 = tmp3_188 + tmp3_193 + tmp3_190;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_39))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_72))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_104))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_135))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_165))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_194))));
}
}
