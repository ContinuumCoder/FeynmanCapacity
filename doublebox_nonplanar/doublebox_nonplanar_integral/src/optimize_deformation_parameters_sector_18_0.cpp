#include "optimize_deformation_parameters_sector_18_0.hpp"
namespace doublebox_nonplanar_integral
{
void sector_18_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x4 + 1;
    auto tmp1_2 = SecDecInternalSqr(x0);
    auto tmp3_1 = tmp1_2-1;
    auto tmp1_3 = tmp3_1*x0;
    auto tmp1_4 = -tmp1_3*tmp1_1;
    auto tmp1_5 = x3*x0;
    auto tmp1_6 = -tmp3_1*tmp1_5;
    auto tmp1_7 = x0-1;
    auto tmp3_2 = tmp1_7*x0;
    auto tmp1_8 = tmp3_2*x3;
    auto tmp1_9 = tmp1_8 + tmp3_2;
    auto tmp1_10 = tmp3_2*x4;
    auto tmp1_11 = tmp1_9 + tmp1_10;
    auto tmp1_12 = -x2*tmp1_11;
    auto tmp3_3 = tmp1_12 + tmp1_6 + tmp1_4;
    auto tmp3_4 = x1*tmp1_11;
    auto tmp3_5 = -x2*tmp3_2;
    auto tmp3_6 = -tmp1_3 + tmp3_5;
    auto tmp3_7 = -x1*tmp3_2;
    auto tmp3_8 = 2*tmp3_6 + tmp3_7;
    auto tmp3_9 = x5*x1;
    auto tmp3_10 = tmp3_8*tmp3_9;
    auto tmp3_11 = tmp3_10 + 2*tmp3_3-3*tmp3_4;
    auto tmp3_12 = x5*tmp3_11;
    auto tmp3_13 = -2*tmp3_2-tmp1_8;
    auto tmp3_14 = x3*tmp3_13;
    auto tmp3_15 = -2*tmp1_9-tmp1_10;
    auto tmp3_16 = x4*tmp3_15;
    auto tmp3_17 = tmp3_12 + tmp3_16-tmp3_2 + tmp3_14;
    auto tmp3_18 = msq*tmp3_17;
    auto tmp3_19 = x4*x3;
    auto tmp3_20 = x0*t;
    auto tmp3_21 = -t + tmp3_20;
    auto tmp3_22 = tmp3_21*tmp3_19;
    auto tmp3_23 = x0*s;
    auto tmp3_24 = -s + tmp3_23;
    auto tmp3_25 = tmp3_24*tmp3_9;
    auto tmp3_26 = tmp3_22 + tmp3_25;
    auto tmp3_27 = x0*tmp3_26;
    auto tmp3_28 = tmp3_18 + tmp3_27;
    auto tmp3_29 = -x3-tmp1_1;
    auto tmp3_30 = 1 + 3*x0;
    auto tmp3_31 = tmp3_30*tmp3_29;
    auto tmp3_32 = x3 + 1;
    auto tmp3_33 = tmp3_32 + x4;
    auto tmp3_34 = tmp3_33*x1;
    auto tmp1_13 = tmp3_33*x2;
    auto tmp3_35 = -2*tmp3_34-3*tmp1_13 + tmp3_31;
    auto tmp3_36 = x1*tmp3_35;
    auto tmp1_14 = x0 + 1;
    auto tmp1_15 = tmp1_14*x3;
    auto tmp1_16 = tmp1_14*x4;
    auto tmp1_17 = tmp1_16 + tmp1_15;
    auto tmp1_18 = tmp1_17 + tmp1_14;
    auto tmp1_19 = tmp1_18 + tmp1_13;
    auto tmp3_37 = 3*tmp1_19;
    auto tmp3_38 = tmp3_37 + tmp3_36;
    auto tmp3_39 = x1*tmp3_38;
    auto tmp1_20 = tmp1_14 + x2;
    auto tmp1_21 = 2*x1;
    auto tmp3_40 = -tmp1_20*tmp1_21;
    auto tmp1_22 = 2*x0;
    auto tmp1_23 = -tmp1_22-x2;
    auto tmp3_41 = x2*tmp1_23;
    auto tmp3_42 = tmp3_40 + tmp3_41-tmp3_1;
    auto tmp3_43 = x1*tmp3_42;
    auto tmp3_44 = x2 + 2*tmp1_14;
    auto tmp3_45 = tmp3_44*x2;
    auto tmp3_46 = x0 + 2;
    auto tmp3_47 = tmp3_46*x0;
    auto tmp3_48 = tmp3_47 + 1;
    auto tmp3_49 = tmp3_45 + tmp3_48;
    auto tmp3_50 = tmp3_43 + tmp3_49;
    auto tmp3_51 = tmp3_50*tmp3_9;
    auto tmp3_52 = tmp3_39 + tmp3_51;
    auto tmp3_53 = x5*tmp3_52;
    auto tmp3_54 = x4 + 2*tmp3_32;
    auto tmp3_55 = tmp3_54*x4;
    auto tmp1_24 = x3 + 2;
    auto tmp3_56 = tmp1_24*x3;
    auto tmp3_57 = tmp3_55 + tmp3_56 + 1;
    auto tmp3_58 = x1-1;
    auto tmp3_59 = tmp3_58*x1;
    auto tmp1_25 = -tmp3_57*tmp3_59;
    auto tmp3_60 = tmp1_25 + tmp3_53;
    auto tmp3_61 = msq*tmp3_60;
    auto tmp3_62 = x3*t;
    auto tmp3_63 = tmp3_23 + tmp3_62;
    auto tmp1_26 = x4*t;
    auto tmp1_27 = tmp1_26*x2;
    auto tmp1_28 = tmp3_63 + tmp1_27;
    auto tmp1_29 = tmp1_28*x1;
    auto tmp3_64 = tmp1_29-tmp1_28;
    auto tmp3_65 = x1*tmp3_64;
    auto tmp1_30 = tmp3_9*t;
    auto tmp1_31 = x1*x2;
    auto tmp1_32 = -x2 + tmp1_31;
    auto tmp3_66 = tmp1_32*tmp1_30;
    auto tmp3_67 = tmp3_65 + tmp3_66;
    auto tmp3_68 = x5*tmp3_67;
    auto tmp3_69 = tmp3_62*x4;
    auto tmp3_70 = tmp3_69*tmp3_59;
    auto tmp3_71 = tmp3_61 + tmp3_70 + tmp3_68;
    auto tmp3_72 = t + tmp1_26 + tmp3_62;
    auto tmp3_73 = tmp3_72*x2;
    auto tmp1_33 = x2-1;
    auto tmp1_34 = tmp1_33*tmp1_30;
    auto tmp3_74 = tmp1_34 + tmp3_73-tmp3_72;
    auto tmp3_75 = x2*tmp3_74;
    auto tmp3_76 = -tmp1_26 + tmp1_27;
    auto tmp3_77 = tmp3_76*tmp1_31;
    auto tmp3_78 = tmp3_77 + tmp3_75;
    auto tmp3_79 = x5*tmp3_78;
    auto tmp3_80 = -x0*tmp1_1;
    auto tmp3_81 = -tmp1_13-tmp1_5 + tmp3_80;
    auto tmp3_82 = x2*tmp3_81;
    auto tmp3_83 = tmp3_82 + tmp1_18;
    auto tmp3_84 = 2*x2;
    auto tmp3_85 = tmp3_83*tmp3_84;
    auto tmp3_86 = -x0-x2;
    auto tmp3_87 = x2*tmp3_86;
    auto tmp3_88 = tmp3_87 + tmp1_14;
    auto tmp3_89 = tmp3_88*tmp3_84;
    auto tmp3_90 = -tmp1_33*tmp1_31;
    auto tmp3_91 = tmp3_89 + tmp3_90;
    auto tmp3_92 = tmp3_91*tmp3_9;
    auto tmp3_93 = -tmp1_13 + tmp3_33;
    auto tmp3_94 = tmp3_93*tmp1_31;
    auto tmp3_95 = tmp3_92 + tmp3_85 + 3*tmp3_94;
    auto tmp3_96 = x5*tmp3_95;
    auto tmp3_97 = -x2*tmp3_57*tmp1_33;
    auto tmp3_98 = tmp3_97 + tmp3_96;
    auto tmp3_99 = msq*tmp3_98;
    auto tmp3_100 = x2*x4;
    auto tmp3_101 = tmp3_62*tmp3_100;
    auto tmp3_102 = -tmp3_69 + tmp3_101;
    auto tmp3_103 = x2*tmp3_102;
    auto tmp3_104 = tmp3_99 + tmp3_103 + tmp3_79;
    auto tmp3_105 = x3-1;
    auto tmp3_106 = tmp3_105*tmp3_19;
    auto tmp3_107 = SecDecInternalSqr(x3);
    auto tmp3_108 = tmp3_107-1;
    auto tmp3_109 = tmp3_108*x3;
    auto tmp3_110 = tmp3_109 + tmp3_106;
    auto tmp3_111 = x1 + x2;
    auto tmp3_112 = -tmp3_110*tmp3_111;
    auto tmp3_113 = -tmp1_14*tmp3_109;
    auto tmp3_114 = tmp1_15-tmp1_14;
    auto tmp3_115 = -tmp3_114*tmp3_19;
    auto tmp3_116 = tmp3_113 + tmp3_115 + tmp3_112;
    auto tmp3_117 = tmp3_48*x3;
    auto tmp3_118 = -tmp3_117 + tmp3_48;
    auto tmp3_119 = x3*tmp3_118;
    auto tmp3_120 = tmp3_114*x3;
    auto tmp3_121 = tmp3_105*x3;
    auto tmp1_35 = tmp3_121*x2;
    auto tmp1_36 = -2*tmp3_120-tmp1_35;
    auto tmp3_122 = x2*tmp1_36;
    auto tmp3_123 = -tmp3_120-tmp1_35;
    auto tmp3_124 = -x1*tmp3_121;
    auto tmp3_125 = 3*tmp3_123 + tmp3_124;
    auto tmp3_126 = x1*tmp3_125;
    auto tmp3_127 = tmp3_126 + tmp3_119 + tmp3_122;
    auto tmp3_128 = x5*tmp3_127;
    auto tmp3_129 = 2*tmp3_116 + tmp3_128;
    auto tmp3_130 = msq*tmp3_129;
    auto tmp3_131 = tmp3_62-t;
    auto tmp3_132 = tmp3_131*tmp3_111;
    auto tmp3_133 = tmp3_20 + t;
    auto tmp3_134 = tmp3_133*x3;
    auto tmp3_135 = tmp3_132 + tmp3_134-tmp3_133;
    auto tmp3_136 = tmp3_19*tmp3_135;
    auto tmp3_137 = x5*x3*tmp3_132;
    auto tmp3_138 = tmp3_130 + tmp3_137 + tmp3_136;
    auto tmp3_139 = x1*x4;
    auto tmp3_140 = tmp3_139 + tmp3_100;
    auto tmp3_141 = x4 + x3;
    auto tmp3_142 = tmp3_141*x4;
    auto tmp3_143 = tmp3_142-tmp3_32;
    auto tmp3_144 = -tmp3_143*tmp3_140;
    auto tmp3_145 = -x4*tmp1_17;
    auto tmp3_146 = tmp3_145 + tmp1_15 + tmp1_14;
    auto tmp3_147 = x4*tmp3_146;
    auto tmp3_148 = tmp3_147 + tmp3_144;
    auto tmp3_149 = tmp1_16-tmp1_14;
    auto tmp3_150 = tmp3_149*x4;
    auto tmp3_151 = x4-1;
    auto tmp3_152 = tmp3_151*tmp3_100;
    auto tmp3_153 = -2*tmp3_150-tmp3_152;
    auto tmp3_154 = x2*tmp3_153;
    auto tmp3_155 = -tmp3_150-tmp3_152;
    auto tmp3_156 = -tmp3_151*tmp3_139;
    auto tmp3_157 = 3*tmp3_155 + tmp3_156;
    auto tmp3_158 = x1*tmp3_157;
    auto tmp3_159 = tmp3_48*x4;
    auto tmp3_160 = -tmp3_159 + tmp3_48;
    auto tmp3_161 = x4*tmp3_160;
    auto tmp3_162 = tmp3_158 + tmp3_161 + tmp3_154;
    auto tmp3_163 = x5*tmp3_162;
    auto tmp3_164 = 2*tmp3_148 + tmp3_163;
    auto tmp3_165 = msq*tmp3_164;
    auto tmp3_166 = tmp3_69-tmp3_62;
    auto tmp3_167 = tmp3_166*tmp3_140;
    auto tmp3_168 = 1 + x1;
    auto tmp3_169 = tmp1_26-t;
    auto tmp3_170 = x5*tmp3_100*tmp3_169*tmp3_168;
    auto tmp3_171 = tmp3_133*tmp3_19;
    auto tmp3_172 = -tmp3_134 + tmp3_171;
    auto tmp3_173 = x4*tmp3_172;
    auto tmp3_174 = tmp3_165 + tmp3_170 + tmp3_173 + tmp3_167;
    auto tmp3_175 = tmp1_13 + 2*tmp1_18;
    auto tmp3_176 = tmp3_175*x2;
    auto tmp3_177 = tmp3_176 + tmp3_48 + tmp3_117 + tmp3_159;
    auto tmp3_178 = tmp1_22 + 1;
    auto tmp3_179 = tmp3_84-tmp3_141 + tmp3_178;
    auto tmp3_180 = x1*tmp3_179;
    auto tmp3_181 = tmp3_84 + 1 + 4*x0-3*tmp3_141;
    auto tmp3_182 = x2*tmp3_181;
    auto tmp3_183 = x0*tmp3_178;
    auto tmp3_184 = tmp3_180 + tmp3_182-1 + tmp3_183-3*tmp1_17;
    auto tmp3_185 = x1*tmp3_184;
    auto tmp3_186 = -x1*tmp1_20;
    auto tmp3_187 = tmp3_186-tmp3_49;
    auto tmp3_188 = tmp3_187*tmp3_9;
    auto tmp3_189 = 2*tmp3_188 + tmp3_185-tmp3_177;
    auto tmp3_190 = x5*tmp3_189;
    auto tmp3_191 = tmp3_37 + tmp3_34;
    auto tmp3_192 = x1*tmp3_191;
    auto tmp3_193 = tmp3_190 + tmp3_192 + tmp3_177;
    auto tmp3_194 = msq*tmp3_193;
    auto tmp3_195 = -2*t + tmp1_26;
    auto tmp3_196 = x2*tmp3_195;
    auto tmp3_197 = tmp3_196 + tmp3_63;
    auto tmp3_198 = x1*tmp3_197;
    auto tmp3_199 = tmp3_84*tmp1_30;
    auto tmp3_200 = tmp3_199 + tmp3_73 + tmp3_198;
    auto tmp3_201 = x5*tmp3_200;
    auto tmp3_202 = tmp3_194 + tmp3_201-tmp3_73-tmp1_29;
    auto tmp3_203 = x5*tmp3_202;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_28))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_71))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_104))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_138))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_174))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_203))));
}
}
