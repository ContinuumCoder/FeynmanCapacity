#include "optimize_deformation_parameters_sector_4_0.hpp"
namespace doublebox_nonplanar_integral
{
void sector_4_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x3 + 1;
    auto tmp1_2 = SecDecInternalSqr(x0);
    auto tmp3_1 = tmp1_2-1;
    auto tmp1_3 = tmp3_1*x0;
    auto tmp1_4 = -tmp1_3*tmp1_1;
    auto tmp1_5 = x5*x0;
    auto tmp1_6 = -tmp3_1*tmp1_5;
    auto tmp1_7 = x0-1;
    auto tmp3_2 = tmp1_7*x0;
    auto tmp1_8 = tmp3_2*x5;
    auto tmp1_9 = tmp1_8 + tmp3_2;
    auto tmp1_10 = tmp3_2*x3;
    auto tmp1_11 = tmp1_9 + tmp1_10;
    auto tmp1_12 = -x4*tmp1_11;
    auto tmp3_3 = tmp1_12 + tmp1_6 + tmp1_4;
    auto tmp3_4 = x2*tmp1_11;
    auto tmp3_5 = -x4*tmp3_2;
    auto tmp3_6 = -tmp1_3 + tmp3_5;
    auto tmp3_7 = -x2*tmp3_2;
    auto tmp3_8 = 2*tmp3_6 + tmp3_7;
    auto tmp3_9 = x1*x2;
    auto tmp3_10 = tmp3_8*tmp3_9;
    auto tmp3_11 = tmp3_10 + 2*tmp3_3-3*tmp3_4;
    auto tmp3_12 = x1*tmp3_11;
    auto tmp3_13 = -2*tmp3_2-tmp1_8;
    auto tmp3_14 = x5*tmp3_13;
    auto tmp3_15 = -2*tmp1_9-tmp1_10;
    auto tmp3_16 = x3*tmp3_15;
    auto tmp3_17 = tmp3_12 + tmp3_16-tmp3_2 + tmp3_14;
    auto tmp3_18 = msq*tmp3_17;
    auto tmp3_19 = x3*x5;
    auto tmp3_20 = x0*t;
    auto tmp3_21 = -t + tmp3_20;
    auto tmp3_22 = tmp3_21*tmp3_19;
    auto tmp3_23 = x0*s;
    auto tmp3_24 = -s + tmp3_23;
    auto tmp3_25 = tmp3_24*tmp3_9;
    auto tmp3_26 = tmp3_22 + tmp3_25;
    auto tmp3_27 = x0*tmp3_26;
    auto tmp3_28 = tmp3_18 + tmp3_27;
    auto tmp3_29 = x0 + 1;
    auto tmp3_30 = tmp3_29*x5;
    auto tmp3_31 = tmp3_29*x3;
    auto tmp3_32 = tmp3_31 + tmp3_30;
    auto tmp1_13 = tmp3_32 + tmp3_29;
    auto tmp1_14 = x5 + 1;
    auto tmp1_15 = tmp1_14 + x3;
    auto tmp1_16 = tmp1_15*x4;
    auto tmp1_17 = tmp1_16 + 2*tmp1_13;
    auto tmp3_33 = tmp1_17*x4;
    auto tmp1_18 = x0 + 2;
    auto tmp3_34 = tmp1_18*x0;
    auto tmp3_35 = tmp3_34 + 1;
    auto tmp1_19 = tmp3_35*x5;
    auto tmp1_20 = tmp3_35*x3;
    auto tmp3_36 = tmp3_33 + tmp3_35 + tmp1_19 + tmp1_20;
    auto tmp1_21 = x3 + x5;
    auto tmp1_22 = 2*x0;
    auto tmp1_23 = tmp1_22 + 1;
    auto tmp1_24 = 2*x4;
    auto tmp1_25 = tmp1_24-tmp1_21 + tmp1_23;
    auto tmp3_37 = x2*tmp1_25;
    auto tmp1_26 = tmp1_24 + 1 + 4*x0-3*tmp1_21;
    auto tmp3_38 = x4*tmp1_26;
    auto tmp3_39 = x0*tmp1_23;
    auto tmp3_40 = tmp3_37 + tmp3_38-1 + tmp3_39-3*tmp3_32;
    auto tmp3_41 = x2*tmp3_40;
    auto tmp3_42 = x4 + 2*tmp3_29;
    auto tmp3_43 = tmp3_42*x4;
    auto tmp3_44 = tmp3_43 + tmp3_35;
    auto tmp3_45 = tmp3_29 + x4;
    auto tmp1_27 = -x2*tmp3_45;
    auto tmp3_46 = tmp1_27-tmp3_44;
    auto tmp3_47 = tmp3_46*tmp3_9;
    auto tmp3_48 = 2*tmp3_47 + tmp3_41-tmp3_36;
    auto tmp3_49 = x1*tmp3_48;
    auto tmp3_50 = tmp1_13 + tmp1_16;
    auto tmp3_51 = 3*tmp3_50;
    auto tmp1_28 = tmp1_15*x2;
    auto tmp1_29 = tmp3_51 + tmp1_28;
    auto tmp3_52 = x2*tmp1_29;
    auto tmp3_53 = tmp3_49 + tmp3_52 + tmp3_36;
    auto tmp3_54 = msq*tmp3_53;
    auto tmp3_55 = x3*t;
    auto tmp3_56 = x5*t;
    auto tmp1_30 = t + tmp3_55 + tmp3_56;
    auto tmp1_31 = tmp1_30*x4;
    auto tmp3_57 = tmp3_23 + tmp3_56;
    auto tmp1_32 = -2*t + tmp3_55;
    auto tmp3_58 = x4*tmp1_32;
    auto tmp3_59 = tmp3_58 + tmp3_57;
    auto tmp3_60 = x2*tmp3_59;
    auto tmp1_33 = tmp3_9*t;
    auto tmp1_34 = tmp1_24*tmp1_33;
    auto tmp3_61 = tmp1_34 + tmp1_31 + tmp3_60;
    auto tmp3_62 = x1*tmp3_61;
    auto tmp3_63 = tmp3_55*x4;
    auto tmp3_64 = tmp3_57 + tmp3_63;
    auto tmp1_35 = tmp3_64*x2;
    auto tmp3_65 = tmp3_54 + tmp3_62-tmp1_31-tmp1_35;
    auto tmp3_66 = x1*tmp3_65;
    auto tmp3_67 = -x5-tmp1_1;
    auto tmp1_36 = 1 + 3*x0;
    auto tmp3_68 = tmp1_36*tmp3_67;
    auto tmp3_69 = -2*tmp1_28-3*tmp1_16 + tmp3_68;
    auto tmp3_70 = x2*tmp3_69;
    auto tmp3_71 = tmp3_51 + tmp3_70;
    auto tmp3_72 = x2*tmp3_71;
    auto tmp3_73 = 2*x2;
    auto tmp3_74 = -tmp3_45*tmp3_73;
    auto tmp3_75 = -tmp1_22-x4;
    auto tmp3_76 = x4*tmp3_75;
    auto tmp3_77 = tmp3_74 + tmp3_76-tmp3_1;
    auto tmp3_78 = x2*tmp3_77;
    auto tmp3_79 = tmp3_78 + tmp3_44;
    auto tmp3_80 = tmp3_79*tmp3_9;
    auto tmp3_81 = tmp3_72 + tmp3_80;
    auto tmp3_82 = x1*tmp3_81;
    auto tmp3_83 = x3 + 2*tmp1_14;
    auto tmp3_84 = tmp3_83*x3;
    auto tmp3_85 = x5 + 2;
    auto tmp3_86 = tmp3_85*x5;
    auto tmp3_87 = tmp3_84 + tmp3_86 + 1;
    auto tmp3_88 = x2-1;
    auto tmp3_89 = tmp3_88*x2;
    auto tmp3_90 = -tmp3_87*tmp3_89;
    auto tmp3_91 = tmp3_90 + tmp3_82;
    auto tmp3_92 = msq*tmp3_91;
    auto tmp3_93 = tmp1_35-tmp3_64;
    auto tmp3_94 = x2*tmp3_93;
    auto tmp3_95 = x2*x4;
    auto tmp3_96 = -x4 + tmp3_95;
    auto tmp3_97 = tmp3_96*tmp1_33;
    auto tmp3_98 = tmp3_94 + tmp3_97;
    auto tmp3_99 = x1*tmp3_98;
    auto tmp3_100 = tmp3_56*x3;
    auto tmp3_101 = tmp3_100*tmp3_89;
    auto tmp3_102 = tmp3_92 + tmp3_101 + tmp3_99;
    auto tmp3_103 = x2*x3;
    auto tmp3_104 = x4*x3;
    auto tmp3_105 = tmp3_103 + tmp3_104;
    auto tmp3_106 = tmp1_21*x3;
    auto tmp3_107 = tmp3_106-tmp1_14;
    auto tmp3_108 = -tmp3_107*tmp3_105;
    auto tmp3_109 = -x3*tmp3_32;
    auto tmp3_110 = tmp3_109 + tmp3_30 + tmp3_29;
    auto tmp3_111 = x3*tmp3_110;
    auto tmp3_112 = tmp3_111 + tmp3_108;
    auto tmp3_113 = tmp3_31-tmp3_29;
    auto tmp3_114 = tmp3_113*x3;
    auto tmp3_115 = x3-1;
    auto tmp3_116 = tmp3_115*tmp3_104;
    auto tmp3_117 = -2*tmp3_114-tmp3_116;
    auto tmp3_118 = x4*tmp3_117;
    auto tmp3_119 = -tmp3_114-tmp3_116;
    auto tmp3_120 = -tmp3_115*tmp3_103;
    auto tmp3_121 = 3*tmp3_119 + tmp3_120;
    auto tmp3_122 = x2*tmp3_121;
    auto tmp3_123 = -tmp1_20 + tmp3_35;
    auto tmp3_124 = x3*tmp3_123;
    auto tmp3_125 = tmp3_122 + tmp3_124 + tmp3_118;
    auto tmp3_126 = x1*tmp3_125;
    auto tmp3_127 = 2*tmp3_112 + tmp3_126;
    auto tmp3_128 = msq*tmp3_127;
    auto tmp3_129 = tmp3_100-tmp3_56;
    auto tmp3_130 = tmp3_129*tmp3_105;
    auto tmp3_131 = 1 + x2;
    auto tmp3_132 = tmp3_55-t;
    auto tmp3_133 = x1*tmp3_104*tmp3_132*tmp3_131;
    auto tmp3_134 = tmp3_20 + t;
    auto tmp3_135 = tmp3_134*tmp3_19;
    auto tmp3_136 = tmp3_134*x5;
    auto tmp3_137 = -tmp3_136 + tmp3_135;
    auto tmp3_138 = x3*tmp3_137;
    auto tmp3_139 = tmp3_128 + tmp3_133 + tmp3_138 + tmp3_130;
    auto tmp3_140 = x4-1;
    auto tmp3_141 = tmp3_140*tmp1_33;
    auto tmp3_142 = tmp3_141 + tmp1_31-tmp1_30;
    auto tmp3_143 = x4*tmp3_142;
    auto tmp3_144 = -tmp3_55 + tmp3_63;
    auto tmp3_145 = tmp3_144*tmp3_95;
    auto tmp3_146 = tmp3_145 + tmp3_143;
    auto tmp3_147 = x1*tmp3_146;
    auto tmp3_148 = -x0*tmp1_1;
    auto tmp3_149 = -tmp1_16-tmp1_5 + tmp3_148;
    auto tmp3_150 = x4*tmp3_149;
    auto tmp3_151 = tmp3_150 + tmp1_13;
    auto tmp3_152 = tmp3_151*tmp1_24;
    auto tmp3_153 = -x0-x4;
    auto tmp3_154 = x4*tmp3_153;
    auto tmp3_155 = tmp3_154 + tmp3_29;
    auto tmp3_156 = tmp3_155*tmp1_24;
    auto tmp3_157 = -tmp3_140*tmp3_95;
    auto tmp3_158 = tmp3_156 + tmp3_157;
    auto tmp3_159 = tmp3_158*tmp3_9;
    auto tmp3_160 = -tmp1_16 + tmp1_15;
    auto tmp3_161 = tmp3_160*tmp3_95;
    auto tmp3_162 = tmp3_159 + tmp3_152 + 3*tmp3_161;
    auto tmp3_163 = x1*tmp3_162;
    auto tmp3_164 = -x4*tmp3_87*tmp3_140;
    auto tmp3_165 = tmp3_164 + tmp3_163;
    auto tmp3_166 = msq*tmp3_165;
    auto tmp3_167 = tmp3_56*tmp3_104;
    auto tmp3_168 = -tmp3_100 + tmp3_167;
    auto tmp3_169 = x4*tmp3_168;
    auto tmp3_170 = tmp3_166 + tmp3_169 + tmp3_147;
    auto tmp3_171 = x5-1;
    auto tmp3_172 = tmp3_171*tmp3_19;
    auto tmp3_173 = SecDecInternalSqr(x5);
    auto tmp3_174 = tmp3_173-1;
    auto tmp3_175 = tmp3_174*x5;
    auto tmp3_176 = tmp3_175 + tmp3_172;
    auto tmp3_177 = x2 + x4;
    auto tmp3_178 = -tmp3_176*tmp3_177;
    auto tmp3_179 = -tmp3_29*tmp3_175;
    auto tmp3_180 = tmp3_30-tmp3_29;
    auto tmp3_181 = -tmp3_180*tmp3_19;
    auto tmp3_182 = tmp3_179 + tmp3_181 + tmp3_178;
    auto tmp3_183 = -tmp1_19 + tmp3_35;
    auto tmp3_184 = x5*tmp3_183;
    auto tmp3_185 = tmp3_180*x5;
    auto tmp3_186 = tmp3_171*x5;
    auto tmp3_187 = tmp3_186*x4;
    auto tmp3_188 = -2*tmp3_185-tmp3_187;
    auto tmp3_189 = x4*tmp3_188;
    auto tmp3_190 = -tmp3_185-tmp3_187;
    auto tmp3_191 = -x2*tmp3_186;
    auto tmp3_192 = 3*tmp3_190 + tmp3_191;
    auto tmp3_193 = x2*tmp3_192;
    auto tmp3_194 = tmp3_193 + tmp3_184 + tmp3_189;
    auto tmp3_195 = x1*tmp3_194;
    auto tmp3_196 = 2*tmp3_182 + tmp3_195;
    auto tmp3_197 = msq*tmp3_196;
    auto tmp3_198 = tmp3_56-t;
    auto tmp3_199 = tmp3_198*tmp3_177;
    auto tmp3_200 = tmp3_199 + tmp3_136-tmp3_134;
    auto tmp3_201 = tmp3_19*tmp3_200;
    auto tmp3_202 = x1*x5*tmp3_199;
    auto tmp3_203 = tmp3_197 + tmp3_202 + tmp3_201;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_28))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_66))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_102))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_139))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_170))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_203))));
}
}
