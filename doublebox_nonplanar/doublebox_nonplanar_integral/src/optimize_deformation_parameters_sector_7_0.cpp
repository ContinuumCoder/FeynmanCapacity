#include "optimize_deformation_parameters_sector_7_0.hpp"
namespace doublebox_nonplanar_integral
{
void sector_7_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x2 + 1;
    auto tmp1_2 = tmp1_1*x0;
    auto tmp1_3 = tmp1_2-tmp1_1;
    auto tmp1_4 = tmp1_3*x0;
    auto tmp1_5 = x0-1;
    auto tmp1_6 = x5*x0;
    auto tmp1_7 = tmp1_5*tmp1_6;
    auto tmp3_1 = tmp1_4 + tmp1_7;
    auto tmp1_8 = -x4*tmp3_1;
    auto tmp1_9 = SecDecInternalSqr(x0);
    auto tmp3_2 = tmp1_9-1;
    auto tmp1_10 = tmp3_2*x0;
    auto tmp1_11 = -tmp1_1*tmp1_10;
    auto tmp1_12 = -tmp3_2*tmp1_6;
    auto tmp3_3 = tmp1_8 + tmp1_11 + tmp1_12;
    auto tmp3_4 = x3*tmp3_1;
    auto tmp3_5 = tmp1_5*x0;
    auto tmp3_6 = -x4*tmp3_5;
    auto tmp3_7 = -tmp1_10 + tmp3_6;
    auto tmp3_8 = -x3*tmp3_5;
    auto tmp3_9 = 2*tmp3_7 + tmp3_8;
    auto tmp3_10 = x1*x3;
    auto tmp3_11 = tmp3_9*tmp3_10;
    auto tmp3_12 = tmp3_11 + 2*tmp3_3-3*tmp3_4;
    auto tmp3_13 = x1*tmp3_12;
    auto tmp3_14 = 2*x0;
    auto tmp3_15 = -tmp1_3*tmp3_14;
    auto tmp3_16 = tmp3_15-tmp1_7;
    auto tmp3_17 = x5*tmp3_16;
    auto tmp3_18 = x2 + 2;
    auto tmp3_19 = tmp3_18*x2;
    auto tmp3_20 = tmp3_19 + 1;
    auto tmp3_21 = -tmp3_20*tmp3_5;
    auto tmp3_22 = tmp3_13 + tmp3_21 + tmp3_17;
    auto tmp3_23 = msq*tmp3_22;
    auto tmp3_24 = x0*t;
    auto tmp3_25 = -t + tmp3_24;
    auto tmp3_26 = tmp3_25*tmp1_6;
    auto tmp3_27 = x0*x2;
    auto tmp3_28 = tmp3_27*s;
    auto tmp1_13 = x2*s;
    auto tmp1_14 = -tmp1_13 + tmp3_28;
    auto tmp3_29 = x0*tmp1_14*tmp3_10;
    auto tmp3_30 = tmp3_23 + tmp3_26 + tmp3_29;
    auto tmp3_31 = 2*x4;
    auto tmp3_32 = x2-1;
    auto tmp1_15 = tmp3_31-x5 + tmp3_14-tmp3_32;
    auto tmp3_33 = x3*tmp1_15;
    auto tmp1_16 = 3*x2;
    auto tmp1_17 = tmp1_16-1;
    auto tmp1_18 = tmp3_14-tmp1_17;
    auto tmp3_34 = x0*tmp1_18;
    auto tmp3_35 = tmp3_31-3*x5 + 4*x0-tmp1_17;
    auto tmp3_36 = x4*tmp3_35;
    auto tmp1_19 = x0 + 1;
    auto tmp1_20 = tmp1_19*x5;
    auto tmp3_37 = tmp3_33 + tmp3_36-3*tmp1_20 + tmp3_34-1-tmp1_16;
    auto tmp3_38 = x3*tmp3_37;
    auto tmp3_39 = 2*tmp1_1;
    auto tmp3_40 = tmp3_39 + tmp1_2;
    auto tmp3_41 = tmp3_40*x0;
    auto tmp3_42 = tmp1_2 + tmp1_1;
    auto tmp1_21 = tmp3_42 + tmp1_20;
    auto tmp1_22 = tmp1_1 + x5;
    auto tmp1_23 = tmp1_22*x4;
    auto tmp1_24 = tmp1_23 + 2*tmp1_21;
    auto tmp3_43 = tmp1_24*x4;
    auto tmp1_25 = x0 + 2;
    auto tmp3_44 = tmp1_25*x0;
    auto tmp3_45 = tmp3_44 + 1;
    auto tmp1_26 = tmp3_45*x5;
    auto tmp3_46 = tmp3_41 + tmp3_43 + tmp1_26 + tmp1_1;
    auto tmp3_47 = x4 + 2*tmp1_19;
    auto tmp3_48 = tmp3_47*x4;
    auto tmp3_49 = tmp3_48 + tmp3_45;
    auto tmp1_27 = tmp1_19 + x4;
    auto tmp3_50 = tmp1_27*x3;
    auto tmp1_28 = -tmp3_50-tmp3_49;
    auto tmp1_29 = 2*tmp3_10;
    auto tmp3_51 = tmp1_28*tmp1_29;
    auto tmp3_52 = tmp3_51 + tmp3_38-tmp3_46;
    auto tmp3_53 = x1*tmp3_52;
    auto tmp3_54 = tmp1_21 + tmp1_23;
    auto tmp3_55 = 3*tmp3_54;
    auto tmp1_30 = tmp1_22*x3;
    auto tmp1_31 = tmp3_55 + tmp1_30;
    auto tmp3_56 = x3*tmp1_31;
    auto tmp3_57 = tmp3_53 + tmp3_56 + tmp3_46;
    auto tmp3_58 = msq*tmp3_57;
    auto tmp3_59 = x2*t;
    auto tmp3_60 = x5*t;
    auto tmp1_32 = t + tmp3_59 + tmp3_60;
    auto tmp1_33 = tmp1_32*x4;
    auto tmp3_61 = tmp3_28 + tmp3_60;
    auto tmp1_34 = x4*t;
    auto tmp1_35 = -tmp1_34 + tmp3_61;
    auto tmp3_62 = x3*tmp1_35;
    auto tmp3_63 = tmp1_34*tmp1_29;
    auto tmp3_64 = tmp3_63 + tmp1_33 + tmp3_62;
    auto tmp3_65 = x1*tmp3_64;
    auto tmp3_66 = tmp3_61 + tmp1_34;
    auto tmp3_67 = tmp3_66*x3;
    auto tmp3_68 = tmp3_58 + tmp3_65-tmp1_33-tmp3_67;
    auto tmp3_69 = x1*tmp3_68;
    auto tmp3_70 = tmp3_32*x2;
    auto tmp3_71 = tmp3_70*x5;
    auto tmp1_36 = SecDecInternalSqr(x2);
    auto tmp3_72 = tmp1_36-1;
    auto tmp1_37 = tmp3_72*x2;
    auto tmp3_73 = tmp3_71 + tmp1_37;
    auto tmp1_38 = -x3-x4;
    auto tmp3_74 = tmp3_73*tmp1_38;
    auto tmp3_75 = -tmp3_72*tmp3_27;
    auto tmp3_76 = tmp3_27*tmp3_32;
    auto tmp3_77 = tmp3_76 + tmp3_70;
    auto tmp1_39 = -x5*tmp3_77;
    auto tmp3_78 = tmp1_39-tmp1_37 + tmp3_75 + tmp3_74;
    auto tmp3_79 = -2*tmp3_70-tmp3_76;
    auto tmp3_80 = x0*tmp3_79;
    auto tmp3_81 = tmp3_70*x4;
    auto tmp3_82 = -2*tmp3_77-tmp3_81;
    auto tmp3_83 = x4*tmp3_82;
    auto tmp3_84 = -tmp3_81-tmp3_77;
    auto tmp3_85 = -x3*tmp3_70;
    auto tmp3_86 = 3*tmp3_84 + tmp3_85;
    auto tmp3_87 = x3*tmp3_86;
    auto tmp3_88 = tmp3_87 + tmp3_83-tmp3_70 + tmp3_80;
    auto tmp3_89 = x1*tmp3_88;
    auto tmp3_90 = 2*tmp3_78 + tmp3_89;
    auto tmp3_91 = msq*tmp3_90;
    auto tmp3_92 = -s + tmp1_13;
    auto tmp3_93 = x3*tmp3_92*tmp3_27;
    auto tmp3_94 = -t + tmp3_59;
    auto tmp3_95 = x4*x2*tmp3_94;
    auto tmp3_96 = tmp3_95 + tmp3_93;
    auto tmp3_97 = x1*tmp3_96;
    auto tmp3_98 = tmp3_97 + tmp3_91;
    auto tmp3_99 = tmp1_23 + tmp1_2;
    auto tmp3_100 = -1-3*x0;
    auto tmp3_101 = x5*tmp3_100;
    auto tmp3_102 = -2*tmp1_30 + tmp3_101-tmp1_1-3*tmp3_99;
    auto tmp3_103 = x3*tmp3_102;
    auto tmp3_104 = tmp3_55 + tmp3_103;
    auto tmp3_105 = x3*tmp3_104;
    auto tmp3_106 = -tmp3_14-x4;
    auto tmp3_107 = x4*tmp3_106;
    auto tmp3_108 = -2*tmp3_50 + tmp3_107-tmp3_2;
    auto tmp3_109 = x3*tmp3_108;
    auto tmp3_110 = tmp3_109 + tmp3_49;
    auto tmp3_111 = tmp3_110*tmp3_10;
    auto tmp3_112 = tmp3_105 + tmp3_111;
    auto tmp3_113 = x1*tmp3_112;
    auto tmp3_114 = tmp3_39 + x5;
    auto tmp3_115 = tmp3_114*x5;
    auto tmp3_116 = tmp3_115 + tmp3_20;
    auto tmp3_117 = x3-1;
    auto tmp3_118 = tmp3_117*x3;
    auto tmp3_119 = -tmp3_116*tmp3_118;
    auto tmp3_120 = tmp3_119 + tmp3_113;
    auto tmp3_121 = msq*tmp3_120;
    auto tmp3_122 = tmp3_10*tmp1_34*tmp3_117;
    auto tmp3_123 = tmp3_66*tmp3_118;
    auto tmp3_124 = tmp3_123 + tmp3_122;
    auto tmp3_125 = x1*tmp3_124;
    auto tmp3_126 = tmp3_60*tmp3_118;
    auto tmp3_127 = tmp3_121 + tmp3_126 + tmp3_125;
    auto tmp3_128 = tmp1_34-t;
    auto tmp3_129 = tmp3_128*tmp3_10;
    auto tmp3_130 = tmp3_129 + tmp1_33-tmp1_32;
    auto tmp3_131 = x4*tmp3_130;
    auto tmp3_132 = x3*x4;
    auto tmp3_133 = tmp3_128*tmp3_132;
    auto tmp3_134 = tmp3_133 + tmp3_131;
    auto tmp3_135 = x1*tmp3_134;
    auto tmp3_136 = -tmp1_6-tmp3_99;
    auto tmp3_137 = x4*tmp3_136;
    auto tmp3_138 = tmp3_137 + tmp1_21;
    auto tmp3_139 = tmp3_138*tmp3_31;
    auto tmp3_140 = -x0-x4;
    auto tmp3_141 = x4*tmp3_140;
    auto tmp3_142 = tmp3_141 + tmp1_19;
    auto tmp3_143 = tmp3_142*tmp3_31;
    auto tmp3_144 = x4-1;
    auto tmp3_145 = -tmp3_144*tmp3_132;
    auto tmp3_146 = tmp3_143 + tmp3_145;
    auto tmp3_147 = tmp3_146*tmp3_10;
    auto tmp3_148 = -tmp1_23 + tmp1_22;
    auto tmp3_149 = tmp3_148*tmp3_132;
    auto tmp3_150 = tmp3_147 + tmp3_139 + 3*tmp3_149;
    auto tmp3_151 = x1*tmp3_150;
    auto tmp3_152 = tmp3_144*x4;
    auto tmp3_153 = -tmp3_116*tmp3_152;
    auto tmp3_154 = tmp3_153 + tmp3_151;
    auto tmp3_155 = msq*tmp3_154;
    auto tmp3_156 = tmp3_60*tmp3_152;
    auto tmp3_157 = tmp3_155 + tmp3_156 + tmp3_135;
    auto tmp3_158 = x3*x5;
    auto tmp3_159 = x4*x5;
    auto tmp3_160 = tmp3_158 + tmp3_159;
    auto tmp3_161 = x5 + x2;
    auto tmp3_162 = tmp3_161*x5;
    auto tmp3_163 = tmp3_162-tmp1_1;
    auto tmp3_164 = -tmp3_163*tmp3_160;
    auto tmp3_165 = -tmp1_20-x2-tmp3_27;
    auto tmp3_166 = x5*tmp3_165;
    auto tmp3_167 = tmp3_166 + tmp3_42;
    auto tmp3_168 = x5*tmp3_167;
    auto tmp3_169 = tmp3_168 + tmp3_164;
    auto tmp3_170 = tmp1_20-tmp1_19;
    auto tmp3_171 = tmp3_170*x5;
    auto tmp3_172 = x5-1;
    auto tmp3_173 = tmp3_172*tmp3_159;
    auto tmp3_174 = -2*tmp3_171-tmp3_173;
    auto tmp3_175 = x4*tmp3_174;
    auto tmp3_176 = -tmp3_171-tmp3_173;
    auto tmp3_177 = -tmp3_172*tmp3_158;
    auto tmp3_178 = 3*tmp3_176 + tmp3_177;
    auto tmp3_179 = x3*tmp3_178;
    auto tmp3_180 = -tmp1_26 + tmp3_45;
    auto tmp3_181 = x5*tmp3_180;
    auto tmp3_182 = tmp3_179 + tmp3_181 + tmp3_175;
    auto tmp3_183 = x1*tmp3_182;
    auto tmp3_184 = 2*tmp3_169 + tmp3_183;
    auto tmp3_185 = msq*tmp3_184;
    auto tmp3_186 = x1 + 1;
    auto tmp3_187 = tmp3_60-t;
    auto tmp3_188 = tmp3_186*tmp3_187*tmp3_160;
    auto tmp3_189 = tmp3_24 + t;
    auto tmp3_190 = x5*tmp3_189*tmp3_172;
    auto tmp3_191 = tmp3_185 + tmp3_190 + tmp3_188;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_30))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_69))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_98))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_127))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_157))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_191))));
}
}
