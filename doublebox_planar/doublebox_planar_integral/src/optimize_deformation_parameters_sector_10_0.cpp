#include "optimize_deformation_parameters_sector_10_0.hpp"
namespace doublebox_planar_integral
{
void sector_10_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x3*x0;
    auto tmp1_2 = x0-1;
    auto tmp1_3 = tmp1_1*tmp1_2;
    auto tmp3_1 = tmp1_2*x0;
    auto tmp1_4 = -2*tmp3_1-tmp1_3;
    auto tmp3_2 = x3*tmp1_4;
    auto tmp3_3 = tmp1_3 + tmp3_1;
    auto tmp1_5 = tmp3_1*x4;
    auto tmp1_6 = -2*tmp3_3-tmp1_5;
    auto tmp3_4 = x4*tmp1_6;
    auto tmp3_5 = -tmp1_5-tmp3_3;
    auto tmp3_6 = -x2*tmp3_1;
    auto tmp3_7 = 3*tmp3_5 + tmp3_6;
    auto tmp3_8 = x2*tmp3_7;
    auto tmp3_9 = tmp3_8 + tmp3_4-tmp3_1 + tmp3_2;
    auto tmp3_10 = x5*tmp3_9;
    auto tmp3_11 = x4 + x3;
    auto tmp3_12 = x2 + 1;
    auto tmp3_13 = -tmp3_12-tmp3_11;
    auto tmp1_7 = SecDecInternalSqr(x0);
    auto tmp3_14 = tmp1_7-1;
    auto tmp3_15 = tmp3_14*x0;
    auto tmp3_16 = tmp3_1*x1;
    auto tmp3_17 = tmp3_15 + tmp3_16;
    auto tmp3_18 = tmp3_17*tmp3_13;
    auto tmp3_19 = 2*tmp3_18 + tmp3_10;
    auto tmp3_20 = msq*tmp3_19;
    auto tmp3_21 = s + t;
    auto tmp3_22 = tmp3_21*x0;
    auto tmp3_23 = -tmp3_22 + tmp3_21;
    auto tmp3_24 = x2*tmp3_23*tmp1_1;
    auto tmp1_8 = x0*s;
    auto tmp1_9 = -s + tmp1_8;
    auto tmp3_25 = x4*x0*tmp1_9;
    auto tmp3_26 = tmp3_25 + tmp3_24;
    auto tmp3_27 = x5*tmp3_26;
    auto tmp3_28 = tmp3_27 + tmp3_20;
    auto tmp3_29 = x1-1;
    auto tmp3_30 = tmp3_29*x1;
    auto tmp1_10 = tmp3_30*x3;
    auto tmp1_11 = tmp1_10 + tmp3_30;
    auto tmp1_12 = x4*x1;
    auto tmp3_31 = tmp3_29*tmp1_12;
    auto tmp1_13 = -2*tmp1_11-tmp3_31;
    auto tmp3_32 = x4*tmp1_13;
    auto tmp3_33 = -tmp3_31-tmp1_11;
    auto tmp3_34 = -x2*tmp3_30;
    auto tmp3_35 = 3*tmp3_33 + tmp3_34;
    auto tmp3_36 = x2*tmp3_35;
    auto tmp3_37 = -2*tmp3_30-tmp1_10;
    auto tmp3_38 = x3*tmp3_37;
    auto tmp3_39 = tmp3_36 + tmp3_32-tmp3_30 + tmp3_38;
    auto tmp3_40 = x5*tmp3_39;
    auto tmp3_41 = tmp3_12 + x3;
    auto tmp3_42 = x1*tmp3_41;
    auto tmp3_43 = tmp1_12 + tmp3_42;
    auto tmp3_44 = x1 + x0;
    auto tmp3_45 = tmp3_44*x1;
    auto tmp3_46 = x0 + 1;
    auto tmp3_47 = tmp3_45-tmp3_46;
    auto tmp3_48 = -tmp3_47*tmp3_43;
    auto tmp3_49 = 2*tmp3_48 + tmp3_40;
    auto tmp3_50 = msq*tmp3_49;
    auto tmp3_51 = x5*tmp3_12*tmp1_12;
    auto tmp3_52 = tmp3_51 + tmp3_43;
    auto tmp3_53 = x1*s;
    auto tmp3_54 = tmp3_53-s;
    auto tmp3_55 = tmp3_54*tmp3_52;
    auto tmp3_56 = tmp3_50 + tmp3_55;
    auto tmp3_57 = tmp3_21*tmp1_1;
    auto tmp3_58 = tmp3_57-s;
    auto tmp3_59 = tmp3_53*x4;
    auto tmp3_60 = tmp3_58-tmp3_59;
    auto tmp3_61 = tmp3_60*x2;
    auto tmp3_62 = -tmp3_61 + tmp3_60;
    auto tmp3_63 = x2*tmp3_62;
    auto tmp1_14 = x2-1;
    auto tmp1_15 = x5*x2;
    auto tmp1_16 = x4*s;
    auto tmp1_17 = tmp1_15*tmp1_16*tmp1_14;
    auto tmp3_64 = tmp3_63 + tmp1_17;
    auto tmp3_65 = x5*tmp3_64;
    auto tmp3_66 = tmp3_46 + x1;
    auto tmp1_18 = tmp3_66*x4;
    auto tmp1_19 = tmp3_66*x3;
    auto tmp1_20 = tmp1_18 + tmp1_19;
    auto tmp1_21 = 2*tmp3_66;
    auto tmp1_22 = -x2*tmp1_21;
    auto tmp3_67 = tmp1_22-tmp3_66-3*tmp1_20;
    auto tmp3_68 = x2*tmp3_67;
    auto tmp1_23 = tmp1_19 + tmp3_66;
    auto tmp1_24 = tmp1_23 + tmp1_18;
    auto tmp3_69 = 3*tmp1_24;
    auto tmp3_70 = tmp3_69 + tmp3_68;
    auto tmp3_71 = x2*tmp3_70;
    auto tmp1_25 = x3 + 1;
    auto tmp1_26 = tmp1_25 + x4;
    auto tmp3_72 = tmp1_26*x2;
    auto tmp1_27 = SecDecInternalSqr(x3);
    auto tmp3_73 = tmp1_27-1;
    auto tmp1_28 = 2*x3;
    auto tmp1_29 = -tmp1_28-x4;
    auto tmp3_74 = x4*tmp1_29;
    auto tmp3_75 = -2*tmp3_72 + tmp3_74-tmp3_73;
    auto tmp3_76 = x2*tmp3_75;
    auto tmp1_30 = x3 + 2;
    auto tmp3_77 = tmp1_30*x3;
    auto tmp1_31 = x4 + 2*tmp1_25;
    auto tmp3_78 = tmp1_31*x4;
    auto tmp3_79 = tmp3_78 + tmp3_77 + 1;
    auto tmp3_80 = tmp3_76 + tmp3_79;
    auto tmp3_81 = tmp3_80*tmp1_15;
    auto tmp3_82 = tmp3_71 + tmp3_81;
    auto tmp3_83 = x5*tmp3_82;
    auto tmp3_84 = x1 + 2*tmp3_46;
    auto tmp3_85 = tmp3_84*x1;
    auto tmp3_86 = x0 + 2;
    auto tmp3_87 = tmp3_86*x0;
    auto tmp3_88 = tmp3_85 + tmp3_87 + 1;
    auto tmp3_89 = tmp1_14*x2;
    auto tmp3_90 = -tmp3_88*tmp3_89;
    auto tmp3_91 = tmp3_90 + tmp3_83;
    auto tmp3_92 = msq*tmp3_91;
    auto tmp3_93 = tmp3_53*tmp3_89;
    auto tmp3_94 = tmp3_92 + tmp3_93 + tmp3_65;
    auto tmp3_95 = -tmp3_66*tmp3_73;
    auto tmp3_96 = tmp1_19-tmp3_66;
    auto tmp3_97 = -x4*tmp3_96;
    auto tmp3_98 = tmp3_95 + tmp3_97;
    auto tmp3_99 = x3*tmp3_98;
    auto tmp3_100 = x3-1;
    auto tmp3_101 = -x4*tmp3_100;
    auto tmp3_102 = -tmp3_73 + tmp3_101;
    auto tmp3_103 = x3*tmp3_102;
    auto tmp3_104 = x2*x3;
    auto tmp1_32 = -tmp3_100*tmp3_104;
    auto tmp3_105 = 2*tmp3_103 + tmp1_32;
    auto tmp3_106 = tmp3_105*tmp1_15;
    auto tmp3_107 = tmp3_96*tmp3_104;
    auto tmp3_108 = tmp3_106 + 2*tmp3_99-3*tmp3_107;
    auto tmp3_109 = x5*tmp3_108;
    auto tmp3_110 = -x3*tmp3_88*tmp3_100;
    auto tmp3_111 = tmp3_110 + tmp3_109;
    auto tmp3_112 = msq*tmp3_111;
    auto tmp3_113 = tmp3_53*tmp3_100;
    auto tmp3_114 = tmp3_22-tmp3_57;
    auto tmp3_115 = tmp3_114*tmp1_15;
    auto tmp3_116 = tmp3_113 + tmp3_115;
    auto tmp3_117 = x3*tmp3_116;
    auto tmp3_118 = tmp3_112 + tmp3_117;
    auto tmp3_119 = s + tmp1_8 + tmp3_53;
    auto tmp3_120 = tmp3_119*x4;
    auto tmp3_121 = tmp3_59-tmp3_53;
    auto tmp3_122 = x2*tmp3_121;
    auto tmp3_123 = -s + tmp1_16;
    auto tmp3_124 = tmp3_123*tmp1_15;
    auto tmp3_125 = tmp3_124 + tmp3_122 + tmp3_120-tmp3_119;
    auto tmp3_126 = x5*tmp3_125;
    auto tmp3_127 = tmp3_121 + tmp3_126;
    auto tmp3_128 = x4*tmp3_127;
    auto tmp3_129 = -x4*tmp1_20;
    auto tmp3_130 = tmp3_129 + tmp1_23;
    auto tmp3_131 = 2*x4;
    auto tmp3_132 = tmp3_130*tmp3_131;
    auto tmp3_133 = -x4*tmp3_11;
    auto tmp3_134 = tmp3_133 + tmp1_25;
    auto tmp3_135 = tmp3_134*tmp3_131;
    auto tmp3_136 = x4-1;
    auto tmp3_137 = x2*x4;
    auto tmp3_138 = -tmp3_136*tmp3_137;
    auto tmp3_139 = tmp3_135 + tmp3_138;
    auto tmp3_140 = tmp3_139*tmp1_15;
    auto tmp3_141 = -tmp1_18 + tmp3_66;
    auto tmp3_142 = tmp3_141*tmp3_137;
    auto tmp3_143 = tmp3_140 + tmp3_132 + 3*tmp3_142;
    auto tmp3_144 = x5*tmp3_143;
    auto tmp3_145 = -x4*tmp3_88*tmp3_136;
    auto tmp3_146 = tmp3_145 + tmp3_144;
    auto tmp3_147 = msq*tmp3_146;
    auto tmp3_148 = tmp3_147 + tmp3_128;
    auto tmp3_149 = -2*s + tmp3_53;
    auto tmp3_150 = x4*tmp3_149;
    auto tmp3_151 = tmp3_150-tmp3_58;
    auto tmp3_152 = x2*tmp3_151;
    auto tmp3_153 = 2*tmp1_15;
    auto tmp3_154 = tmp1_16*tmp3_153;
    auto tmp3_155 = tmp3_154 + tmp3_120 + tmp3_152;
    auto tmp3_156 = x5*tmp3_155;
    auto tmp3_157 = tmp3_131-tmp3_44 + tmp1_28 + 1;
    auto tmp3_158 = x2*tmp3_157;
    auto tmp3_159 = 3*tmp3_44;
    auto tmp3_160 = tmp3_159-1;
    auto tmp3_161 = tmp1_28-tmp3_160;
    auto tmp3_162 = x3*tmp3_161;
    auto tmp3_163 = tmp3_131 + 4*x3-tmp3_160;
    auto tmp3_164 = x4*tmp3_163;
    auto tmp3_165 = tmp3_158 + tmp3_164 + tmp3_162-1-tmp3_159;
    auto tmp3_166 = x2*tmp3_165;
    auto tmp3_167 = tmp1_18 + 2*tmp1_23;
    auto tmp3_168 = tmp3_167*x4;
    auto tmp3_169 = tmp1_21 + tmp1_19;
    auto tmp3_170 = tmp3_169*x3;
    auto tmp3_171 = tmp3_66 + tmp3_168 + tmp3_170;
    auto tmp3_172 = -tmp3_72-tmp3_79;
    auto tmp3_173 = tmp3_172*tmp3_153;
    auto tmp3_174 = tmp3_173 + tmp3_166-tmp3_171;
    auto tmp3_175 = x5*tmp3_174;
    auto tmp3_176 = x2*tmp3_66;
    auto tmp3_177 = tmp3_69 + tmp3_176;
    auto tmp3_178 = x2*tmp3_177;
    auto tmp3_179 = tmp3_175 + tmp3_178 + tmp3_171;
    auto tmp3_180 = msq*tmp3_179;
    auto tmp3_181 = tmp3_180 + tmp3_156-tmp3_120 + tmp3_61;
    auto tmp3_182 = x5*tmp3_181;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_28))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_56))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_94))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_118))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_148))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_182))));
}
}
