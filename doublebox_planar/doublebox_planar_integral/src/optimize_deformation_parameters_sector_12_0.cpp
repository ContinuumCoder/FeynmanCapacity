#include "optimize_deformation_parameters_sector_12_0.hpp"
namespace doublebox_planar_integral
{
void sector_12_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x0-1;
    auto tmp3_1 = tmp1_1*x0;
    auto tmp1_2 = tmp3_1*x3;
    auto tmp1_3 = -2*tmp3_1-tmp1_2;
    auto tmp3_2 = x3*tmp1_3;
    auto tmp3_3 = -tmp3_1-tmp1_2;
    auto tmp1_4 = -x4*tmp3_1;
    auto tmp3_4 = 2*tmp3_3 + tmp1_4;
    auto tmp3_5 = x4*tmp3_4;
    auto tmp3_6 = x3 + 1;
    auto tmp1_5 = tmp3_6 + x4;
    auto tmp1_6 = -3*tmp1_5-x2;
    auto tmp3_7 = x2*tmp3_1*tmp1_6;
    auto tmp3_8 = tmp3_7 + tmp3_5-tmp3_1 + tmp3_2;
    auto tmp3_9 = x5*tmp3_8;
    auto tmp3_10 = SecDecInternalSqr(x0);
    auto tmp3_11 = tmp3_10-1;
    auto tmp3_12 = tmp3_11*x0;
    auto tmp3_13 = tmp3_1*x1;
    auto tmp3_14 = tmp3_12 + tmp3_13;
    auto tmp3_15 = tmp3_6 + x2;
    auto tmp3_16 = -x4-tmp3_15;
    auto tmp3_17 = tmp3_14*tmp3_16;
    auto tmp3_18 = 2*tmp3_17 + tmp3_9;
    auto tmp3_19 = msq*tmp3_18;
    auto tmp3_20 = x4*x3;
    auto tmp3_21 = x0*s;
    auto tmp1_7 = -s + tmp3_21;
    auto tmp3_22 = tmp1_7*tmp3_20;
    auto tmp1_8 = s + t;
    auto tmp1_9 = tmp1_8*x0;
    auto tmp3_23 = -tmp1_9 + tmp1_8;
    auto tmp3_24 = x2*tmp3_23;
    auto tmp3_25 = tmp3_22 + tmp3_24;
    auto tmp3_26 = x5*x0*tmp3_25;
    auto tmp3_27 = tmp3_26 + tmp3_19;
    auto tmp3_28 = x1-1;
    auto tmp3_29 = tmp3_28*x1;
    auto tmp1_10 = tmp3_29*x3;
    auto tmp1_11 = tmp1_10 + tmp3_29;
    auto tmp1_12 = x4*x1;
    auto tmp3_30 = tmp3_28*tmp1_12;
    auto tmp1_13 = -2*tmp1_11-tmp3_30;
    auto tmp3_31 = x4*tmp1_13;
    auto tmp3_32 = -tmp3_30-tmp1_11;
    auto tmp3_33 = -x2*tmp3_29;
    auto tmp3_34 = 3*tmp3_32 + tmp3_33;
    auto tmp3_35 = x2*tmp3_34;
    auto tmp3_36 = -2*tmp3_29-tmp1_10;
    auto tmp3_37 = x3*tmp3_36;
    auto tmp3_38 = tmp3_35 + tmp3_31-tmp3_29 + tmp3_37;
    auto tmp3_39 = x5*tmp3_38;
    auto tmp3_40 = -x1*tmp3_15;
    auto tmp3_41 = -tmp1_12 + tmp3_40;
    auto tmp3_42 = x1 + x0;
    auto tmp3_43 = tmp3_42*x1;
    auto tmp3_44 = x0 + 1;
    auto tmp3_45 = tmp3_43-tmp3_44;
    auto tmp3_46 = tmp3_45*tmp3_41;
    auto tmp3_47 = 2*tmp3_46 + tmp3_39;
    auto tmp3_48 = msq*tmp3_47;
    auto tmp3_49 = x1*s;
    auto tmp3_50 = tmp3_49-s;
    auto tmp1_14 = tmp3_50*x1;
    auto tmp1_15 = tmp3_20*tmp1_14;
    auto tmp3_51 = tmp3_50*tmp1_12;
    auto tmp3_52 = x2*tmp3_51;
    auto tmp3_53 = tmp1_15 + tmp3_52;
    auto tmp3_54 = x5*tmp3_53;
    auto tmp3_55 = tmp1_14*tmp3_15;
    auto tmp3_56 = tmp3_48 + tmp3_54 + tmp3_51 + tmp3_55;
    auto tmp3_57 = tmp3_44 + x1;
    auto tmp3_58 = tmp3_57*x3;
    auto tmp3_59 = tmp3_57*x4;
    auto tmp3_60 = tmp3_59 + tmp3_58;
    auto tmp3_61 = 2*tmp3_57;
    auto tmp1_16 = -x2*tmp3_61;
    auto tmp3_62 = tmp1_16-tmp3_57-3*tmp3_60;
    auto tmp3_63 = x2*tmp3_62;
    auto tmp1_17 = tmp3_58 + tmp3_57;
    auto tmp1_18 = tmp1_17 + tmp3_59;
    auto tmp3_64 = 3*tmp1_18;
    auto tmp3_65 = tmp3_64 + tmp3_63;
    auto tmp3_66 = x2*tmp3_65;
    auto tmp3_67 = tmp1_5*x2;
    auto tmp1_19 = SecDecInternalSqr(x3);
    auto tmp3_68 = tmp1_19-1;
    auto tmp1_20 = 2*x3;
    auto tmp1_21 = -tmp1_20-x4;
    auto tmp3_69 = x4*tmp1_21;
    auto tmp3_70 = -2*tmp3_67 + tmp3_69-tmp3_68;
    auto tmp3_71 = x2*tmp3_70;
    auto tmp1_22 = x3 + 2;
    auto tmp3_72 = tmp1_22*x3;
    auto tmp1_23 = x4 + 2*tmp3_6;
    auto tmp3_73 = tmp1_23*x4;
    auto tmp3_74 = tmp3_73 + tmp3_72 + 1;
    auto tmp3_75 = tmp3_71 + tmp3_74;
    auto tmp3_76 = x5*x2;
    auto tmp3_77 = tmp3_75*tmp3_76;
    auto tmp3_78 = tmp3_66 + tmp3_77;
    auto tmp3_79 = x5*tmp3_78;
    auto tmp3_80 = x1 + 2*tmp3_44;
    auto tmp3_81 = tmp3_80*x1;
    auto tmp3_82 = x0 + 2;
    auto tmp3_83 = tmp3_82*x0;
    auto tmp3_84 = tmp3_81 + tmp3_83 + 1;
    auto tmp3_85 = x2-1;
    auto tmp1_24 = tmp3_85*x2;
    auto tmp1_25 = -tmp3_84*tmp1_24;
    auto tmp3_86 = tmp1_25 + tmp3_79;
    auto tmp3_87 = msq*tmp3_86;
    auto tmp3_88 = tmp3_20*s;
    auto tmp3_89 = tmp3_76*tmp3_88*tmp3_85;
    auto tmp1_26 = x3*s;
    auto tmp3_90 = tmp1_9-tmp1_26;
    auto tmp1_27 = tmp3_49*x4;
    auto tmp1_28 = tmp3_90-tmp1_27;
    auto tmp1_29 = -tmp1_28*tmp1_24;
    auto tmp3_91 = tmp1_29 + tmp3_89;
    auto tmp3_92 = x5*tmp3_91;
    auto tmp3_93 = tmp3_49*tmp1_24;
    auto tmp3_94 = tmp3_87 + tmp3_93 + tmp3_92;
    auto tmp3_95 = tmp3_21 + tmp3_49 + s;
    auto tmp3_96 = tmp3_95*x3;
    auto tmp3_97 = tmp1_26-s;
    auto tmp3_98 = tmp3_97*tmp3_76;
    auto tmp3_99 = tmp3_98 + tmp3_96-tmp3_95;
    auto tmp3_100 = tmp3_20*tmp3_99;
    auto tmp1_30 = x2*x3;
    auto tmp3_101 = tmp3_97*tmp1_30;
    auto tmp3_102 = tmp3_101 + tmp3_100;
    auto tmp3_103 = x5*tmp3_102;
    auto tmp3_104 = tmp3_68*x3;
    auto tmp3_105 = -tmp3_57*tmp3_104;
    auto tmp1_31 = tmp3_58-tmp3_57;
    auto tmp1_32 = -tmp1_31*tmp3_20;
    auto tmp3_106 = tmp3_105 + tmp1_32;
    auto tmp3_107 = x3-1;
    auto tmp1_33 = -tmp3_107*tmp3_20;
    auto tmp3_108 = -tmp3_104 + tmp1_33;
    auto tmp3_109 = -tmp3_107*tmp1_30;
    auto tmp3_110 = 2*tmp3_108 + tmp3_109;
    auto tmp3_111 = tmp3_110*tmp3_76;
    auto tmp3_112 = tmp1_31*tmp1_30;
    auto tmp3_113 = tmp3_111 + 2*tmp3_106-3*tmp3_112;
    auto tmp3_114 = x5*tmp3_113;
    auto tmp3_115 = tmp3_107*x3;
    auto tmp3_116 = -tmp3_84*tmp3_115;
    auto tmp3_117 = tmp3_116 + tmp3_114;
    auto tmp3_118 = msq*tmp3_117;
    auto tmp3_119 = tmp3_49*tmp3_115;
    auto tmp3_120 = tmp3_118 + tmp3_119 + tmp3_103;
    auto tmp3_121 = tmp3_95*tmp3_20;
    auto tmp3_122 = tmp1_27-tmp3_49;
    auto tmp3_123 = x2*tmp3_122;
    auto tmp3_124 = -tmp1_26 + tmp3_88;
    auto tmp3_125 = tmp3_124*tmp3_76;
    auto tmp3_126 = tmp3_125 + tmp3_123-tmp3_96 + tmp3_121;
    auto tmp3_127 = x5*tmp3_126;
    auto tmp3_128 = tmp3_122 + tmp3_127;
    auto tmp3_129 = x4*tmp3_128;
    auto tmp3_130 = -x4*tmp3_60;
    auto tmp3_131 = tmp3_130 + tmp1_17;
    auto tmp3_132 = 2*x4;
    auto tmp3_133 = tmp3_131*tmp3_132;
    auto tmp3_134 = x4 + x3;
    auto tmp3_135 = -x4*tmp3_134;
    auto tmp3_136 = tmp3_135 + tmp3_6;
    auto tmp3_137 = tmp3_136*tmp3_132;
    auto tmp3_138 = x4-1;
    auto tmp3_139 = x2*x4;
    auto tmp3_140 = -tmp3_138*tmp3_139;
    auto tmp3_141 = tmp3_137 + tmp3_140;
    auto tmp3_142 = tmp3_141*tmp3_76;
    auto tmp3_143 = -tmp3_59 + tmp3_57;
    auto tmp3_144 = tmp3_143*tmp3_139;
    auto tmp3_145 = tmp3_142 + tmp3_133 + 3*tmp3_144;
    auto tmp3_146 = x5*tmp3_145;
    auto tmp3_147 = -x4*tmp3_84*tmp3_138;
    auto tmp3_148 = tmp3_147 + tmp3_146;
    auto tmp3_149 = msq*tmp3_148;
    auto tmp3_150 = tmp3_149 + tmp3_129;
    auto tmp3_151 = tmp3_49-2*tmp1_26;
    auto tmp3_152 = x4*tmp3_151;
    auto tmp3_153 = tmp3_152-tmp3_90;
    auto tmp3_154 = x2*tmp3_153;
    auto tmp3_155 = 2*tmp3_76;
    auto tmp3_156 = tmp3_88*tmp3_155;
    auto tmp3_157 = tmp3_156 + tmp3_121 + tmp3_154;
    auto tmp3_158 = x5*tmp3_157;
    auto tmp3_159 = tmp3_132-tmp3_42 + tmp1_20 + 1;
    auto tmp3_160 = x2*tmp3_159;
    auto tmp3_161 = 3*tmp3_42;
    auto tmp3_162 = tmp3_161-1;
    auto tmp3_163 = tmp1_20-tmp3_162;
    auto tmp3_164 = x3*tmp3_163;
    auto tmp3_165 = tmp3_132 + 4*x3-tmp3_162;
    auto tmp3_166 = x4*tmp3_165;
    auto tmp3_167 = tmp3_160 + tmp3_166 + tmp3_164-1-tmp3_161;
    auto tmp3_168 = x2*tmp3_167;
    auto tmp3_169 = tmp3_59 + 2*tmp1_17;
    auto tmp3_170 = tmp3_169*x4;
    auto tmp3_171 = tmp3_61 + tmp3_58;
    auto tmp3_172 = tmp3_171*x3;
    auto tmp3_173 = tmp3_57 + tmp3_170 + tmp3_172;
    auto tmp3_174 = -tmp3_67-tmp3_74;
    auto tmp3_175 = tmp3_174*tmp3_155;
    auto tmp3_176 = tmp3_175 + tmp3_168-tmp3_173;
    auto tmp3_177 = x5*tmp3_176;
    auto tmp3_178 = x2*tmp3_57;
    auto tmp3_179 = tmp3_64 + tmp3_178;
    auto tmp3_180 = x2*tmp3_179;
    auto tmp3_181 = tmp3_177 + tmp3_180 + tmp3_173;
    auto tmp3_182 = msq*tmp3_181;
    auto tmp3_183 = tmp1_28*x2;
    auto tmp3_184 = tmp3_182 + tmp3_158-tmp3_121 + tmp3_183;
    auto tmp3_185 = x5*tmp3_184;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_27))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_56))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_94))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_120))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_150))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_185))));
}
}
