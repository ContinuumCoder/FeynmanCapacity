#include "optimize_deformation_parameters_sector_18_0.hpp"
namespace doublebox_planar_integral
{
void sector_18_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x0-1;
    auto tmp1_2 = tmp1_1*x0;
    auto tmp1_3 = tmp1_2*x2;
    auto tmp1_4 = -2*tmp1_2-tmp1_3;
    auto tmp3_1 = x2*tmp1_4;
    auto tmp3_2 = -tmp1_2-tmp1_3;
    auto tmp1_5 = -x4*tmp1_2;
    auto tmp3_3 = 2*tmp3_2 + tmp1_5;
    auto tmp3_4 = x4*tmp3_3;
    auto tmp3_5 = x4 + 1;
    auto tmp1_6 = tmp3_5 + x2;
    auto tmp3_6 = -3*tmp1_6-x1;
    auto tmp3_7 = x1*tmp1_2*tmp3_6;
    auto tmp3_8 = tmp3_7 + tmp3_4-tmp1_2 + tmp3_1;
    auto tmp3_9 = x5*tmp3_8;
    auto tmp3_10 = x3*x0;
    auto tmp3_11 = tmp1_1*tmp3_10;
    auto tmp3_12 = SecDecInternalSqr(x0);
    auto tmp3_13 = tmp3_12-1;
    auto tmp3_14 = tmp3_13*x0;
    auto tmp3_15 = tmp3_14 + tmp3_11;
    auto tmp3_16 = tmp3_5 + x1;
    auto tmp3_17 = tmp3_16 + x2;
    auto tmp3_18 = -tmp3_15*tmp3_17;
    auto tmp3_19 = 2*tmp3_18 + tmp3_9;
    auto tmp3_20 = msq*tmp3_19;
    auto tmp3_21 = tmp3_10*tmp3_17;
    auto tmp3_22 = x1*x4;
    auto tmp3_23 = x4*x2;
    auto tmp3_24 = tmp3_23 + tmp3_22;
    auto tmp3_25 = x5*tmp3_24*x0;
    auto tmp3_26 = tmp3_25 + tmp3_21;
    auto tmp3_27 = x0*s;
    auto tmp1_7 = tmp3_27-s;
    auto tmp3_28 = tmp1_7*tmp3_26;
    auto tmp3_29 = tmp3_20 + tmp3_28;
    auto tmp3_30 = x0 + 1;
    auto tmp3_31 = tmp3_30 + x3;
    auto tmp1_8 = tmp3_31*x2;
    auto tmp1_9 = tmp3_31*x4;
    auto tmp1_10 = tmp1_9 + tmp1_8;
    auto tmp1_11 = 2*tmp3_31;
    auto tmp1_12 = -x1*tmp1_11;
    auto tmp3_32 = tmp1_12-tmp3_31-3*tmp1_10;
    auto tmp3_33 = x1*tmp3_32;
    auto tmp1_13 = tmp1_8 + tmp3_31;
    auto tmp1_14 = tmp1_13 + tmp1_9;
    auto tmp3_34 = 3*tmp1_14;
    auto tmp3_35 = tmp3_34 + tmp3_33;
    auto tmp3_36 = x1*tmp3_35;
    auto tmp1_15 = x2 + 1;
    auto tmp1_16 = tmp1_15 + x4;
    auto tmp3_37 = tmp1_16*x1;
    auto tmp1_17 = SecDecInternalSqr(x2);
    auto tmp3_38 = tmp1_17-1;
    auto tmp1_18 = 2*x2;
    auto tmp1_19 = -tmp1_18-x4;
    auto tmp3_39 = x4*tmp1_19;
    auto tmp3_40 = -2*tmp3_37 + tmp3_39-tmp3_38;
    auto tmp3_41 = x1*tmp3_40;
    auto tmp1_20 = x2 + 2;
    auto tmp3_42 = tmp1_20*x2;
    auto tmp1_21 = x4 + 2*tmp1_15;
    auto tmp3_43 = tmp1_21*x4;
    auto tmp3_44 = tmp3_43 + tmp3_42 + 1;
    auto tmp3_45 = tmp3_41 + tmp3_44;
    auto tmp3_46 = x5*x1;
    auto tmp3_47 = tmp3_45*tmp3_46;
    auto tmp3_48 = tmp3_36 + tmp3_47;
    auto tmp3_49 = x5*tmp3_48;
    auto tmp3_50 = x3 + 2*tmp3_30;
    auto tmp3_51 = tmp3_50*x3;
    auto tmp1_22 = x0 + 2;
    auto tmp3_52 = tmp1_22*x0;
    auto tmp3_53 = tmp3_51 + tmp3_52 + 1;
    auto tmp3_54 = x1-1;
    auto tmp1_23 = tmp3_54*x1;
    auto tmp1_24 = -tmp3_53*tmp1_23;
    auto tmp3_55 = tmp1_24 + tmp3_49;
    auto tmp3_56 = msq*tmp3_55;
    auto tmp3_57 = tmp3_23*s;
    auto tmp3_58 = tmp3_46*tmp3_57*tmp3_54;
    auto tmp1_25 = x3*s;
    auto tmp1_26 = tmp1_25*x2;
    auto tmp1_27 = -t + tmp1_26-s;
    auto tmp1_28 = tmp3_27*x4;
    auto tmp1_29 = tmp1_27 + tmp1_28;
    auto tmp1_30 = tmp1_29*tmp1_23;
    auto tmp3_59 = tmp1_30 + tmp3_58;
    auto tmp3_60 = x5*tmp3_59;
    auto tmp3_61 = tmp3_27*x3;
    auto tmp3_62 = tmp3_61*tmp1_23;
    auto tmp3_63 = tmp3_56 + tmp3_62 + tmp3_60;
    auto tmp3_64 = s + tmp1_25 + tmp3_27;
    auto tmp3_65 = tmp3_64*x2;
    auto tmp1_31 = x2*s;
    auto tmp1_32 = -s + tmp1_31;
    auto tmp3_66 = tmp1_32*tmp3_46;
    auto tmp3_67 = tmp3_66 + tmp3_65-tmp3_64;
    auto tmp3_68 = tmp3_23*tmp3_67;
    auto tmp3_69 = -tmp1_25 + tmp1_26;
    auto tmp1_33 = x1*x2;
    auto tmp3_70 = tmp3_69*tmp1_33;
    auto tmp3_71 = tmp3_70 + tmp3_68;
    auto tmp3_72 = x5*tmp3_71;
    auto tmp3_73 = tmp3_38*x2;
    auto tmp3_74 = -tmp3_31*tmp3_73;
    auto tmp1_34 = tmp1_8-tmp3_31;
    auto tmp1_35 = -tmp1_34*tmp3_23;
    auto tmp3_75 = tmp3_74 + tmp1_35;
    auto tmp3_76 = x2-1;
    auto tmp1_36 = -tmp3_76*tmp3_23;
    auto tmp3_77 = -tmp3_73 + tmp1_36;
    auto tmp3_78 = -tmp3_76*tmp1_33;
    auto tmp3_79 = 2*tmp3_77 + tmp3_78;
    auto tmp3_80 = tmp3_79*tmp3_46;
    auto tmp3_81 = tmp1_34*tmp1_33;
    auto tmp3_82 = tmp3_80 + 2*tmp3_75-3*tmp3_81;
    auto tmp3_83 = x5*tmp3_82;
    auto tmp3_84 = -x2*tmp3_53*tmp3_76;
    auto tmp3_85 = tmp3_84 + tmp3_83;
    auto tmp3_86 = msq*tmp3_85;
    auto tmp3_87 = x2*x3;
    auto tmp3_88 = tmp3_27*tmp3_87;
    auto tmp3_89 = -tmp3_61 + tmp3_88;
    auto tmp3_90 = x2*tmp3_89;
    auto tmp3_91 = tmp3_86 + tmp3_90 + tmp3_72;
    auto tmp3_92 = x3-1;
    auto tmp3_93 = tmp3_92*tmp3_87;
    auto tmp3_94 = tmp3_92*x3;
    auto tmp3_95 = -2*tmp3_94-tmp3_93;
    auto tmp3_96 = x2*tmp3_95;
    auto tmp3_97 = tmp3_93 + tmp3_94;
    auto tmp3_98 = tmp3_94*x4;
    auto tmp3_99 = -2*tmp3_97-tmp3_98;
    auto tmp3_100 = x4*tmp3_99;
    auto tmp3_101 = -tmp3_98-tmp3_97;
    auto tmp3_102 = -x1*tmp3_94;
    auto tmp3_103 = 3*tmp3_101 + tmp3_102;
    auto tmp3_104 = x1*tmp3_103;
    auto tmp3_105 = tmp3_104 + tmp3_100-tmp3_94 + tmp3_96;
    auto tmp3_106 = x5*tmp3_105;
    auto tmp3_107 = tmp3_16*x3;
    auto tmp3_108 = tmp3_107 + tmp3_87;
    auto tmp3_109 = x3 + x0;
    auto tmp3_110 = tmp3_109*x3;
    auto tmp3_111 = tmp3_110-tmp3_30;
    auto tmp3_112 = -tmp3_111*tmp3_108;
    auto tmp3_113 = 2*tmp3_112 + tmp3_106;
    auto tmp3_114 = msq*tmp3_113;
    auto tmp3_115 = tmp3_61-tmp3_27;
    auto tmp3_116 = tmp3_115*tmp3_108;
    auto tmp3_117 = x4 + x1;
    auto tmp3_118 = tmp1_25-s;
    auto tmp3_119 = x5*tmp3_87*tmp3_118*tmp3_117;
    auto tmp3_120 = tmp3_114 + tmp3_119 + tmp3_116;
    auto tmp3_121 = tmp3_64*tmp3_23;
    auto tmp3_122 = -tmp1_31 + tmp3_57;
    auto tmp3_123 = tmp3_122*tmp3_46;
    auto tmp3_124 = tmp3_123-tmp3_65 + tmp3_121;
    auto tmp3_125 = x4*tmp3_124;
    auto tmp3_126 = -tmp3_27 + tmp1_28;
    auto tmp3_127 = tmp3_126*tmp3_22;
    auto tmp3_128 = tmp3_127 + tmp3_125;
    auto tmp3_129 = x5*tmp3_128;
    auto tmp3_130 = -x4*tmp1_10;
    auto tmp3_131 = tmp3_130 + tmp1_13;
    auto tmp3_132 = 2*x4;
    auto tmp3_133 = tmp3_131*tmp3_132;
    auto tmp3_134 = -x2-x4;
    auto tmp3_135 = x4*tmp3_134;
    auto tmp3_136 = tmp3_135 + tmp1_15;
    auto tmp3_137 = tmp3_136*tmp3_132;
    auto tmp3_138 = x4-1;
    auto tmp3_139 = -tmp3_138*tmp3_22;
    auto tmp3_140 = tmp3_137 + tmp3_139;
    auto tmp3_141 = tmp3_140*tmp3_46;
    auto tmp3_142 = -tmp1_9 + tmp3_31;
    auto tmp3_143 = tmp3_142*tmp3_22;
    auto tmp3_144 = tmp3_141 + tmp3_133 + 3*tmp3_143;
    auto tmp3_145 = x5*tmp3_144;
    auto tmp3_146 = tmp3_138*x4;
    auto tmp3_147 = -tmp3_53*tmp3_146;
    auto tmp3_148 = tmp3_147 + tmp3_145;
    auto tmp3_149 = msq*tmp3_148;
    auto tmp3_150 = tmp3_61*tmp3_146;
    auto tmp3_151 = tmp3_149 + tmp3_150 + tmp3_129;
    auto tmp3_152 = tmp3_27-2*tmp1_31;
    auto tmp3_153 = x4*tmp3_152;
    auto tmp3_154 = tmp3_153 + tmp1_27;
    auto tmp3_155 = x1*tmp3_154;
    auto tmp3_156 = 2*tmp3_46;
    auto tmp3_157 = tmp3_57*tmp3_156;
    auto tmp3_158 = tmp3_157 + tmp3_121 + tmp3_155;
    auto tmp3_159 = x5*tmp3_158;
    auto tmp3_160 = tmp3_132-tmp3_109 + tmp1_18 + 1;
    auto tmp3_161 = x1*tmp3_160;
    auto tmp3_162 = 3*tmp3_109;
    auto tmp3_163 = tmp3_162-1;
    auto tmp3_164 = tmp1_18-tmp3_163;
    auto tmp3_165 = x2*tmp3_164;
    auto tmp3_166 = tmp3_132 + 4*x2-tmp3_163;
    auto tmp3_167 = x4*tmp3_166;
    auto tmp3_168 = tmp3_161 + tmp3_167 + tmp3_165-1-tmp3_162;
    auto tmp3_169 = x1*tmp3_168;
    auto tmp3_170 = tmp1_9 + 2*tmp1_13;
    auto tmp3_171 = tmp3_170*x4;
    auto tmp3_172 = tmp1_11 + tmp1_8;
    auto tmp3_173 = tmp3_172*x2;
    auto tmp3_174 = tmp3_31 + tmp3_171 + tmp3_173;
    auto tmp3_175 = -tmp3_37-tmp3_44;
    auto tmp3_176 = tmp3_175*tmp3_156;
    auto tmp3_177 = tmp3_176 + tmp3_169-tmp3_174;
    auto tmp3_178 = x5*tmp3_177;
    auto tmp3_179 = x1*tmp3_31;
    auto tmp3_180 = tmp3_34 + tmp3_179;
    auto tmp3_181 = x1*tmp3_180;
    auto tmp3_182 = tmp3_178 + tmp3_181 + tmp3_174;
    auto tmp3_183 = msq*tmp3_182;
    auto tmp3_184 = tmp1_29*x1;
    auto tmp3_185 = tmp3_183 + tmp3_159-tmp3_121-tmp3_184;
    auto tmp3_186 = x5*tmp3_185;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_29))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_63))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_91))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_120))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_151))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_186))));
}
}
