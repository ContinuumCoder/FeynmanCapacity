#include "optimize_deformation_parameters_sector_1_0.hpp"
namespace doublebox_planar_integral
{
void sector_1_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x1 + 1;
    auto tmp1_2 = msq*x1;
    auto tmp1_3 = tmp1_1*tmp1_2;
    auto tmp1_4 = SecDecInternalSqr(x1);
    auto tmp1_5 = tmp1_4*x3;
    auto tmp1_6 = msq*tmp1_5;
    auto tmp3_1 = tmp1_3 + tmp1_6;
    auto tmp1_7 = tmp3_1*x2;
    auto tmp1_8 = 2*x4;
    auto tmp1_9 = tmp3_1*tmp1_8;
    auto tmp1_10 = tmp1_9 + 2*tmp1_7;
    auto tmp1_11 = 3*tmp1_2;
    auto tmp1_12 = tmp1_11 + tmp1_6;
    auto tmp3_2 = tmp1_12*x3;
    auto tmp1_13 = x1-1;
    auto tmp1_14 = tmp1_13*x1;
    auto tmp1_15 = tmp1_14-1;
    auto tmp3_3 = tmp1_15*msq;
    auto tmp3_4 = tmp3_2-tmp3_3;
    auto tmp3_5 = tmp3_4 + tmp1_10;
    auto tmp1_16 = 2*msq;
    auto tmp1_17 = tmp1_16*tmp1_4;
    auto tmp1_18 = tmp1_17*x4;
    auto tmp1_19 = 2*tmp1_6;
    auto tmp3_6 = tmp1_18 + tmp1_19;
    auto tmp1_20 = tmp3_6 + tmp1_11;
    auto tmp1_21 = tmp1_17*x2;
    auto tmp1_22 = tmp1_20 + tmp1_21;
    auto tmp1_23 = tmp1_4*msq;
    auto tmp1_24 = tmp1_23*x5;
    auto tmp1_25 = -tmp1_24-tmp1_22;
    auto tmp3_7 = x5*tmp1_25;
    auto tmp1_26 = -tmp1_24-tmp3_1;
    auto tmp1_27 = 2*x0;
    auto tmp3_8 = tmp1_26*tmp1_27;
    auto tmp3_9 = tmp3_8 + tmp3_7-tmp3_5;
    auto tmp3_10 = x0*tmp3_9;
    auto tmp3_11 = 2*x1;
    auto tmp1_28 = tmp3_11 + 3;
    auto tmp3_12 = tmp1_28*tmp1_2;
    auto tmp3_13 = tmp3_6 + tmp3_12;
    auto tmp3_14 = tmp3_13 + tmp1_21;
    auto tmp1_29 = tmp1_24 + tmp3_14;
    auto tmp3_15 = x5*tmp1_29;
    auto tmp1_30 = x5*x1;
    auto tmp1_31 = tmp1_30-tmp1_5;
    auto tmp3_16 = -s*tmp1_31;
    auto tmp1_32 = -t*tmp1_30;
    auto tmp3_17 = tmp1_32 + tmp3_16;
    auto tmp3_18 = x0-1;
    auto tmp3_19 = tmp3_18*tmp3_17;
    auto tmp3_20 = tmp3_12 + tmp1_6;
    auto tmp3_21 = tmp3_20*x3;
    auto tmp1_33 = x1 + 3;
    auto tmp3_22 = tmp1_33*x1;
    auto tmp3_23 = tmp3_22 + 1;
    auto tmp3_24 = tmp3_23*msq;
    auto tmp3_25 = tmp3_24 + tmp3_21;
    auto tmp3_26 = tmp3_10 + tmp3_15 + tmp1_10 + tmp3_25 + tmp3_19;
    auto tmp3_27 = x0*tmp3_26;
    auto tmp3_28 = -1 + 4*x1;
    auto tmp3_29 = tmp3_28*x1;
    auto tmp3_30 = tmp3_29-3;
    auto tmp3_31 = tmp3_30*tmp1_2;
    auto tmp3_32 = tmp1_6*tmp1_13;
    auto tmp3_33 = tmp3_31 + 4*tmp3_32;
    auto tmp3_34 = tmp1_13*tmp1_4;
    auto tmp3_35 = 4*tmp3_34;
    auto tmp1_34 = x4*msq;
    auto tmp1_35 = tmp3_35*tmp1_34;
    auto tmp3_36 = tmp3_33 + tmp1_35;
    auto tmp3_37 = tmp3_34*tmp1_16;
    auto tmp1_36 = tmp3_37*x5;
    auto tmp3_38 = -x2*msq*tmp3_35;
    auto tmp3_39 = -tmp1_36 + tmp3_38-tmp3_36;
    auto tmp3_40 = x5*tmp3_39;
    auto tmp1_37 = tmp1_19*tmp1_13;
    auto tmp3_41 = tmp3_31 + tmp1_37;
    auto tmp3_42 = tmp3_41*x3;
    auto tmp1_38 = tmp3_11 + 1;
    auto tmp1_39 = tmp1_38*x1;
    auto tmp3_43 = tmp1_39-3;
    auto tmp3_44 = tmp3_43*tmp1_2;
    auto tmp3_45 = tmp3_42 + tmp3_44;
    auto tmp3_46 = tmp3_11-1;
    auto tmp3_47 = tmp3_46*x1;
    auto tmp3_48 = tmp3_47-1;
    auto tmp3_49 = tmp3_48*tmp1_2;
    auto tmp3_50 = tmp3_49 + tmp1_37;
    auto tmp3_51 = -tmp1_8-2*x2;
    auto tmp3_52 = tmp3_50*tmp3_51;
    auto tmp3_53 = -tmp1_36-tmp3_50;
    auto tmp3_54 = x0*tmp3_53;
    auto tmp1_40 = tmp1_30*tmp1_13;
    auto tmp1_41 = -t*tmp1_40;
    auto tmp3_55 = tmp1_41 + tmp3_54 + tmp3_40 + tmp3_52-tmp3_45;
    auto tmp3_56 = x0*tmp3_55;
    auto tmp3_57 = -x4*tmp3_37;
    auto tmp3_58 = tmp3_57-tmp3_33;
    auto tmp3_59 = x4*tmp3_58;
    auto tmp3_60 = -x2*tmp3_37;
    auto tmp3_61 = tmp3_60-tmp3_36;
    auto tmp3_62 = x2*tmp3_61;
    auto tmp3_63 = x2 + x4;
    auto tmp3_64 = -tmp3_37*tmp3_63;
    auto tmp3_65 = tmp1_13*tmp1_2;
    auto tmp3_66 = -tmp3_65 + tmp3_64;
    auto tmp3_67 = x5*tmp3_66;
    auto tmp3_68 = -1-x3;
    auto tmp3_69 = tmp3_65*tmp3_68;
    auto tmp3_70 = tmp3_67 + tmp3_62 + 2*tmp3_69 + tmp3_59;
    auto tmp3_71 = x5*tmp3_70;
    auto tmp3_72 = 2*x3;
    auto tmp3_73 = tmp3_34*tmp3_72;
    auto tmp3_74 = tmp3_48*x1;
    auto tmp3_75 = tmp3_74 + tmp3_73;
    auto tmp3_76 = x4*tmp3_75;
    auto tmp3_77 = tmp3_76 + tmp1_14 + tmp3_73;
    auto tmp3_78 = x2*tmp3_77;
    auto tmp1_42 = x5*x2;
    auto tmp3_79 = tmp1_8*tmp3_34*tmp1_42;
    auto tmp3_80 = tmp3_73-tmp1_40;
    auto tmp3_81 = x0*tmp3_80;
    auto tmp3_82 = x4*x3;
    auto tmp3_83 = tmp3_82*tmp3_74;
    auto tmp3_84 = x3*tmp1_14;
    auto tmp3_85 = tmp3_81 + tmp3_79 + tmp3_78 + tmp3_84 + tmp3_83;
    auto tmp3_86 = s*tmp3_85;
    auto tmp3_87 = -x4*tmp3_50;
    auto tmp3_88 = tmp3_87-tmp3_45;
    auto tmp3_89 = x4*tmp3_88;
    auto tmp3_90 = -x2-tmp1_8;
    auto tmp3_91 = tmp3_50*tmp3_90;
    auto tmp3_92 = tmp3_91-tmp3_45;
    auto tmp3_93 = x2*tmp3_92;
    auto tmp3_94 = 2*tmp1_13;
    auto tmp3_95 = -tmp1_2*tmp3_94;
    auto tmp3_96 = -x3*tmp3_65;
    auto tmp3_97 = tmp3_95 + tmp3_96;
    auto tmp3_98 = x3*tmp3_97;
    auto tmp3_99 = tmp3_86 + tmp3_71 + tmp3_93 + tmp3_89-tmp3_65 + tmp3_98 + tmp3_56;
    auto tmp3_100 = -x2*tmp3_5;
    auto tmp3_101 = tmp3_100 + tmp1_9 + tmp3_25;
    auto tmp3_102 = x2*tmp3_101;
    auto tmp3_103 = -x2*tmp1_22;
    auto tmp3_104 = tmp3_103 + tmp3_13;
    auto tmp3_105 = x2*tmp3_104;
    auto tmp3_106 = tmp1_23*x2;
    auto tmp3_107 = tmp3_106-tmp1_23;
    auto tmp3_108 = tmp3_107*tmp1_42;
    auto tmp3_109 = tmp3_105-tmp3_108;
    auto tmp3_110 = x5*tmp3_109;
    auto tmp3_111 = -tmp1_7 + tmp3_1;
    auto tmp3_112 = x2*tmp3_111;
    auto tmp3_113 = tmp3_112-tmp3_108;
    auto tmp3_114 = tmp3_113*tmp1_27;
    auto tmp3_115 = tmp1_1*x1;
    auto tmp3_116 = tmp3_115 + tmp1_5;
    auto tmp3_117 = tmp3_116*x4;
    auto tmp3_118 = x1 + tmp3_117 + tmp1_5;
    auto tmp3_119 = x2-1;
    auto tmp3_120 = x2*tmp3_118*tmp3_119;
    auto tmp3_121 = tmp1_4*x4;
    auto tmp3_122 = x2*tmp3_121;
    auto tmp3_123 = -tmp3_121 + tmp3_122;
    auto tmp3_124 = tmp3_123*tmp1_42;
    auto tmp3_125 = tmp3_120 + tmp3_124;
    auto tmp3_126 = s*tmp3_125;
    auto tmp3_127 = tmp3_126 + tmp3_114 + tmp3_102 + tmp3_110;
    auto tmp3_128 = tmp1_11 + tmp1_19;
    auto tmp3_129 = tmp3_128*x3;
    auto tmp3_130 = tmp3_129-tmp3_12;
    auto tmp3_131 = tmp3_130*x3;
    auto tmp3_132 = tmp1_23-tmp1_6;
    auto tmp3_133 = tmp3_132*x3;
    auto tmp3_134 = tmp3_133*x2;
    auto tmp3_135 = tmp3_132*tmp3_72;
    auto tmp3_136 = x4*tmp3_135;
    auto tmp3_137 = tmp3_134-tmp3_131 + tmp3_136;
    auto tmp3_138 = x2*tmp3_137;
    auto tmp3_139 = tmp3_82*tmp3_132;
    auto tmp3_140 = x3-1;
    auto tmp1_43 = -x3*tmp1_2*tmp3_140;
    auto tmp3_141 = tmp3_134 + tmp1_43 + tmp3_139;
    auto tmp3_142 = 2*x5;
    auto tmp3_143 = tmp3_141*tmp3_142;
    auto tmp3_144 = x5 + tmp3_63;
    auto tmp3_145 = tmp3_135*tmp3_144;
    auto tmp3_146 = x0*tmp3_133;
    auto tmp3_147 = tmp3_146-tmp3_131 + tmp3_145;
    auto tmp3_148 = x0*tmp3_147;
    auto tmp3_149 = tmp3_82*tmp3_115*tmp3_140;
    auto tmp3_150 = tmp1_5-tmp1_4;
    auto tmp3_151 = x0*tmp3_150;
    auto tmp3_152 = x1*tmp3_140;
    auto tmp3_153 = tmp3_151 + tmp3_152;
    auto tmp3_154 = x3*tmp3_153;
    auto tmp3_155 = x3 + tmp3_82;
    auto tmp3_156 = x2*tmp3_150*tmp3_155;
    auto tmp3_157 = tmp3_156 + tmp3_149 + tmp3_154;
    auto tmp3_158 = s*tmp3_157;
    auto tmp3_159 = -tmp3_131 + tmp3_139;
    auto tmp3_160 = x4*tmp3_159;
    auto tmp3_161 = tmp3_72*tmp1_2;
    auto tmp3_162 = tmp3_161 + msq;
    auto tmp3_163 = -x3*tmp3_162;
    auto tmp3_164 = tmp1_38*msq;
    auto tmp3_165 = tmp3_164 + tmp3_163;
    auto tmp3_166 = x3*tmp3_165;
    auto tmp3_167 = tmp3_158 + tmp3_148 + tmp3_143 + tmp3_138 + tmp3_166 + tmp3_160;
    auto tmp3_168 = tmp3_117-tmp3_116;
    auto tmp3_169 = x2*tmp3_168;
    auto tmp3_170 = -x3 + tmp3_82;
    auto tmp3_171 = tmp3_115*tmp3_170;
    auto tmp3_172 = -tmp1_4 + tmp3_121;
    auto tmp3_173 = tmp3_172*tmp1_42;
    auto tmp3_174 = tmp3_173 + tmp3_171 + tmp3_169;
    auto tmp3_175 = s*tmp3_174;
    auto tmp3_176 = -tmp1_9-tmp3_4;
    auto tmp3_177 = x4*tmp3_176;
    auto tmp3_178 = tmp3_175 + tmp3_177 + tmp3_25;
    auto tmp3_179 = x4*tmp3_178;
    auto tmp3_180 = tmp1_8*x2;
    auto tmp3_181 = x5*x4;
    auto tmp3_182 = -tmp3_181-tmp3_180;
    auto tmp3_183 = tmp1_34*tmp1_4;
    auto tmp3_184 = tmp3_183-tmp1_23;
    auto tmp3_185 = tmp3_184*tmp3_182;
    auto tmp3_186 = tmp3_12 + tmp1_19;
    auto tmp3_187 = -x4*tmp1_20;
    auto tmp3_188 = tmp3_187 + tmp3_186;
    auto tmp3_189 = x4*tmp3_188;
    auto tmp3_190 = tmp3_189 + tmp3_185;
    auto tmp3_191 = x5*tmp3_190;
    auto tmp3_192 = x4-1;
    auto tmp3_193 = tmp3_192*tmp3_1;
    auto tmp3_194 = -x4*tmp3_193;
    auto tmp3_195 = -tmp3_184*tmp3_181;
    auto tmp3_196 = tmp3_194 + tmp3_195;
    auto tmp3_197 = tmp3_196*tmp1_27;
    auto tmp3_198 = -tmp3_193*tmp3_180;
    auto tmp3_199 = tmp3_197 + tmp3_191 + tmp3_198 + tmp3_179;
    auto tmp3_200 = -tmp3_183-tmp3_128;
    auto tmp3_201 = x4*tmp3_200;
    auto tmp3_202 = -tmp3_106-tmp1_2-tmp3_183;
    auto tmp3_203 = tmp3_202*tmp3_142;
    auto tmp3_204 = -tmp3_106-tmp1_20;
    auto tmp3_205 = x2*tmp3_204;
    auto tmp3_206 = tmp3_203 + tmp3_205 + tmp3_201-tmp3_162;
    auto tmp3_207 = x5*tmp3_206;
    auto tmp3_208 = tmp3_183 + tmp3_186;
    auto tmp3_209 = x4*tmp3_208;
    auto tmp3_210 = tmp3_106 + tmp3_13;
    auto tmp3_211 = x2*tmp3_210;
    auto tmp3_212 = tmp3_207 + tmp3_211 + tmp3_209 + tmp3_164 + tmp3_161;
    auto tmp3_213 = x5*tmp3_212;
    auto tmp3_214 = -x5*tmp1_17;
    auto tmp3_215 = tmp3_214-tmp1_22;
    auto tmp3_216 = x5*tmp3_215;
    auto tmp3_217 = tmp3_216 + tmp3_14;
    auto tmp3_218 = x5*tmp3_217;
    auto tmp3_219 = tmp1_23-tmp1_24;
    auto tmp3_220 = x0*x5;
    auto tmp3_221 = tmp3_219*tmp3_220;
    auto tmp3_222 = tmp3_218 + tmp3_221;
    auto tmp3_223 = x0*tmp3_222;
    auto tmp3_224 = tmp1_30-x1;
    auto tmp3_225 = tmp3_224*tmp3_220;
    auto tmp3_226 = -1 + x5;
    auto tmp3_227 = x5*tmp3_122*tmp3_226;
    auto tmp3_228 = tmp3_227-tmp3_225;
    auto tmp3_229 = s*tmp3_228;
    auto tmp3_230 = -t*tmp3_225;
    auto tmp3_231 = tmp3_230 + tmp3_229 + tmp3_213 + tmp3_223;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_27))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_99))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_127))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_167))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_199))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_231))));
}
}
