#include "optimize_deformation_parameters_sector_2_0.hpp"
namespace doublebox_planar_integral
{
void sector_2_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x1 + 1;
    auto tmp1_2 = msq*x1;
    auto tmp1_3 = tmp1_1*tmp1_2;
    auto tmp1_4 = SecDecInternalSqr(x1);
    auto tmp1_5 = tmp1_4*msq;
    auto tmp1_6 = x3*tmp1_5;
    auto tmp1_7 = x5*tmp1_5;
    auto tmp3_1 = tmp1_7 + tmp1_3 + tmp1_6;
    auto tmp1_8 = 2*x4;
    auto tmp1_9 = tmp3_1*tmp1_8;
    auto tmp1_10 = 2*x2;
    auto tmp1_11 = tmp1_10*tmp3_1;
    auto tmp1_12 = tmp1_11 + tmp1_9;
    auto tmp1_13 = 3*tmp1_2;
    auto tmp1_14 = tmp1_13 + tmp1_7;
    auto tmp3_2 = tmp1_14*x5;
    auto tmp1_15 = 2*tmp1_7;
    auto tmp3_3 = tmp1_13 + tmp1_15;
    auto tmp1_16 = tmp3_3 + tmp1_6;
    auto tmp3_4 = tmp1_16*x3;
    auto tmp1_17 = x1-1;
    auto tmp1_18 = tmp1_17*x1;
    auto tmp1_19 = tmp1_18-1;
    auto tmp3_5 = tmp1_19*msq;
    auto tmp3_6 = tmp3_2 + tmp3_4-tmp3_5;
    auto tmp3_7 = tmp3_6 + tmp1_12;
    auto tmp3_8 = tmp3_1*x0;
    auto tmp3_9 = -2*tmp3_8-tmp3_7;
    auto tmp3_10 = x0*tmp3_9;
    auto tmp3_11 = 2*x1;
    auto tmp1_20 = tmp3_11 + 3;
    auto tmp3_12 = tmp1_20*tmp1_2;
    auto tmp3_13 = tmp3_12 + tmp1_15;
    auto tmp1_21 = tmp3_13 + tmp1_6;
    auto tmp3_14 = tmp1_21*x3;
    auto tmp1_22 = tmp3_12 + tmp1_7;
    auto tmp3_15 = tmp1_22*x5;
    auto tmp1_23 = x1 + 3;
    auto tmp3_16 = tmp1_23*x1;
    auto tmp3_17 = tmp3_16 + 1;
    auto tmp3_18 = tmp3_17*msq;
    auto tmp3_19 = tmp3_18 + tmp3_14 + tmp3_15;
    auto tmp3_20 = tmp1_4*x5;
    auto tmp3_21 = tmp3_20*x3;
    auto tmp1_24 = tmp3_21-x1;
    auto tmp3_22 = s*tmp1_24;
    auto tmp1_25 = -t*x1;
    auto tmp3_23 = tmp1_25 + tmp3_22;
    auto tmp3_24 = x0-1;
    auto tmp3_25 = tmp3_24*tmp3_23;
    auto tmp3_26 = tmp3_10 + tmp1_12 + tmp3_19 + tmp3_25;
    auto tmp3_27 = x0*tmp3_26;
    auto tmp3_28 = -1 + 4*x1;
    auto tmp3_29 = tmp3_28*x1;
    auto tmp3_30 = tmp3_29-3;
    auto tmp3_31 = tmp3_30*tmp1_2;
    auto tmp3_32 = tmp1_7*tmp1_17;
    auto tmp3_33 = 2*tmp1_17;
    auto tmp1_26 = tmp3_33*tmp1_6;
    auto tmp3_34 = tmp3_31 + tmp1_26 + 4*tmp3_32;
    auto tmp3_35 = tmp3_34*x3;
    auto tmp1_27 = tmp3_33*tmp1_7;
    auto tmp3_36 = tmp3_31 + tmp1_27;
    auto tmp3_37 = tmp3_36*x5;
    auto tmp1_28 = tmp3_11 + 1;
    auto tmp1_29 = tmp1_28*x1;
    auto tmp3_38 = tmp1_29-3;
    auto tmp3_39 = tmp3_38*tmp1_2;
    auto tmp3_40 = tmp3_39 + tmp3_35 + tmp3_37;
    auto tmp3_41 = tmp3_11-1;
    auto tmp3_42 = tmp3_41*x1;
    auto tmp3_43 = tmp3_42-1;
    auto tmp3_44 = tmp3_43*tmp1_2;
    auto tmp3_45 = tmp3_44 + tmp1_27 + tmp1_26;
    auto tmp3_46 = -x0-tmp1_10-tmp1_8;
    auto tmp3_47 = tmp3_45*tmp3_46;
    auto tmp3_48 = -t*tmp1_18;
    auto tmp3_49 = tmp3_48 + tmp3_47-tmp3_40;
    auto tmp3_50 = x0*tmp3_49;
    auto tmp3_51 = -x4*tmp3_45;
    auto tmp3_52 = tmp3_51-tmp3_40;
    auto tmp3_53 = x4*tmp3_52;
    auto tmp3_54 = -x2-tmp1_8;
    auto tmp3_55 = tmp3_45*tmp3_54;
    auto tmp3_56 = tmp3_55-tmp3_40;
    auto tmp3_57 = x2*tmp3_56;
    auto tmp3_58 = 2*x3;
    auto tmp3_59 = 2*x5;
    auto tmp3_60 = tmp3_58 + tmp3_59;
    auto tmp3_61 = tmp1_17*tmp1_4;
    auto tmp3_62 = tmp3_61*tmp3_60;
    auto tmp3_63 = x1*tmp3_43;
    auto tmp3_64 = tmp3_63 + tmp3_62;
    auto tmp3_65 = x4*tmp3_64;
    auto tmp3_66 = tmp3_59*x3;
    auto tmp1_30 = tmp3_66*tmp3_61;
    auto tmp1_31 = x5*tmp1_18;
    auto tmp3_67 = tmp3_65 + tmp1_31 + tmp1_30;
    auto tmp3_68 = x2*tmp3_67;
    auto tmp3_69 = x3*x5;
    auto tmp1_32 = tmp1_18*tmp3_69;
    auto tmp3_70 = tmp3_59*tmp3_61;
    auto tmp3_71 = tmp1_18 + tmp3_70;
    auto tmp1_33 = x4*x3;
    auto tmp3_72 = tmp3_71*tmp1_33;
    auto tmp3_73 = -tmp1_18 + tmp1_30;
    auto tmp3_74 = x0*tmp3_73;
    auto tmp3_75 = tmp3_74 + tmp3_68 + tmp1_32 + tmp3_72;
    auto tmp3_76 = s*tmp3_75;
    auto tmp3_77 = -tmp1_2*tmp3_33;
    auto tmp3_78 = tmp1_17*tmp1_2;
    auto tmp3_79 = -x5*tmp3_78;
    auto tmp3_80 = tmp3_77 + tmp3_79;
    auto tmp3_81 = x5*tmp3_80;
    auto tmp3_82 = -1-x5;
    auto tmp3_83 = 2*tmp3_82-x3;
    auto tmp3_84 = x3*tmp3_78*tmp3_83;
    auto tmp3_85 = tmp3_76 + tmp3_57 + tmp3_53 + tmp3_84-tmp3_78 + tmp3_81 + tmp3_50;
    auto tmp3_86 = -x2*tmp3_7;
    auto tmp3_87 = tmp1_4*x3;
    auto tmp3_88 = tmp1_1*x1;
    auto tmp3_89 = tmp3_88 + tmp3_87 + tmp3_20;
    auto tmp3_90 = tmp3_89*x4;
    auto tmp3_91 = x5*x1;
    auto tmp3_92 = tmp3_91 + tmp3_90 + tmp3_21;
    auto tmp3_93 = x2-1;
    auto tmp3_94 = s*tmp3_92*tmp3_93;
    auto tmp3_95 = tmp3_94 + tmp3_86 + tmp1_9 + tmp3_19;
    auto tmp3_96 = x2*tmp3_95;
    auto tmp3_97 = -x0*tmp3_93*tmp1_11;
    auto tmp3_98 = tmp3_97 + tmp3_96;
    auto tmp3_99 = tmp3_3 + 2*tmp1_6;
    auto tmp3_100 = tmp3_99*x3;
    auto tmp3_101 = tmp3_100-tmp3_13;
    auto tmp3_102 = tmp1_5-tmp1_6;
    auto tmp3_103 = x0*tmp3_102;
    auto tmp3_104 = tmp3_103-tmp3_101;
    auto tmp3_105 = x3*tmp3_104;
    auto tmp3_106 = tmp3_102*tmp3_58;
    auto tmp3_107 = tmp3_106*x4;
    auto tmp3_108 = x2*tmp3_106;
    auto tmp3_109 = tmp3_108 + tmp3_107 + tmp3_105;
    auto tmp3_110 = x0*tmp3_109;
    auto tmp3_111 = -1 + x3;
    auto tmp3_112 = tmp3_91*tmp3_111;
    auto tmp3_113 = tmp3_21-tmp3_20;
    auto tmp3_114 = x0*tmp3_113;
    auto tmp3_115 = tmp3_114 + tmp3_112;
    auto tmp3_116 = x3*tmp3_115;
    auto tmp3_117 = x3*tmp3_113;
    auto tmp3_118 = -tmp1_4 + tmp3_87;
    auto tmp3_119 = tmp3_118*tmp1_33;
    auto tmp3_120 = tmp3_117 + tmp3_119;
    auto tmp3_121 = x2*tmp3_120;
    auto tmp3_122 = tmp3_20 + x1;
    auto tmp3_123 = tmp3_122*x3;
    auto tmp3_124 = tmp3_123-tmp3_122;
    auto tmp3_125 = tmp3_124*tmp1_33;
    auto tmp3_126 = tmp3_121 + tmp3_125 + tmp3_116;
    auto tmp3_127 = s*tmp3_126;
    auto tmp3_128 = tmp3_59*tmp1_2;
    auto tmp3_129 = tmp3_128 + msq;
    auto tmp3_130 = -tmp1_2*tmp3_58;
    auto tmp3_131 = tmp3_130-tmp3_129;
    auto tmp3_132 = x3*tmp3_131;
    auto tmp3_133 = tmp1_28*msq;
    auto tmp3_134 = tmp3_132 + tmp3_133 + tmp3_128;
    auto tmp3_135 = x3*tmp3_134;
    auto tmp3_136 = -x3*tmp3_101;
    auto tmp3_137 = tmp3_102*tmp1_33;
    auto tmp3_138 = tmp3_136 + tmp3_137;
    auto tmp3_139 = x4*tmp3_138;
    auto tmp3_140 = x2*tmp3_102;
    auto tmp3_141 = tmp3_140-tmp3_101;
    auto tmp3_142 = x3*tmp3_141;
    auto tmp3_143 = tmp3_107 + tmp3_142;
    auto tmp3_144 = x2*tmp3_143;
    auto tmp3_145 = tmp3_127 + tmp3_110 + tmp3_144 + tmp3_135 + tmp3_139;
    auto tmp3_146 = -tmp1_9-tmp3_6;
    auto tmp3_147 = x4*tmp3_146;
    auto tmp3_148 = tmp3_90-tmp3_89;
    auto tmp3_149 = x2*tmp3_148;
    auto tmp3_150 = tmp3_122*tmp1_33;
    auto tmp3_151 = tmp3_149-tmp3_123 + tmp3_150;
    auto tmp3_152 = s*tmp3_151;
    auto tmp3_153 = tmp3_152 + tmp3_147 + tmp3_19;
    auto tmp3_154 = x4*tmp3_153;
    auto tmp3_155 = -x0-x2;
    auto tmp3_156 = x4-1;
    auto tmp3_157 = tmp3_155*tmp3_156*tmp1_9;
    auto tmp3_158 = tmp3_157 + tmp3_154;
    auto tmp3_159 = tmp3_3*x5;
    auto tmp3_160 = tmp3_159-tmp3_12;
    auto tmp3_161 = tmp3_160*x5;
    auto tmp3_162 = tmp1_5-tmp1_7;
    auto tmp3_163 = tmp3_162*tmp3_59;
    auto tmp3_164 = x3*tmp3_163;
    auto tmp3_165 = tmp3_162*x5;
    auto tmp3_166 = x4*tmp3_165;
    auto tmp3_167 = tmp3_166-tmp3_161 + tmp3_164;
    auto tmp3_168 = x4*tmp3_167;
    auto tmp3_169 = x4 + x3;
    auto tmp3_170 = tmp3_163*tmp3_169;
    auto tmp3_171 = x2*tmp3_165;
    auto tmp3_172 = tmp3_171-tmp3_161 + tmp3_170;
    auto tmp3_173 = x2*tmp3_172;
    auto tmp3_174 = x2 + tmp3_169;
    auto tmp3_175 = tmp3_163*tmp3_174;
    auto tmp3_176 = x0*tmp3_165;
    auto tmp3_177 = tmp3_176-tmp3_161 + tmp3_175;
    auto tmp3_178 = x0*tmp3_177;
    auto tmp3_179 = x5*tmp1_33;
    auto tmp3_180 = x0*tmp3_69;
    auto tmp3_181 = tmp3_180 + tmp3_179;
    auto tmp3_182 = tmp3_20-tmp1_4;
    auto tmp3_183 = tmp3_182*tmp3_181;
    auto tmp3_184 = x4*x5;
    auto tmp3_185 = tmp3_184 + tmp3_69;
    auto tmp3_186 = tmp3_182*tmp3_185;
    auto tmp3_187 = tmp3_91-x1;
    auto tmp3_188 = x5*tmp3_187;
    auto tmp3_189 = tmp3_188 + tmp3_186;
    auto tmp3_190 = x2*tmp3_189;
    auto tmp3_191 = tmp3_187*tmp3_69;
    auto tmp3_192 = tmp3_190 + tmp3_191 + tmp3_183;
    auto tmp3_193 = s*tmp3_192;
    auto tmp3_194 = 1-x5;
    auto tmp3_195 = tmp3_66*tmp1_2*tmp3_194;
    auto tmp3_196 = -x5*tmp3_129;
    auto tmp3_197 = tmp3_133 + tmp3_196;
    auto tmp3_198 = x5*tmp3_197;
    auto tmp3_199 = tmp3_193 + tmp3_178 + tmp3_173 + tmp3_168 + tmp3_198 + tmp3_195;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_27))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_85))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_98))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_145))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_158))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_199))));
}
}
