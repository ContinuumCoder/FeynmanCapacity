#include "optimize_deformation_parameters_sector_3_0.hpp"
namespace doublebox_planar_integral
{
void sector_3_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x5*msq;
    auto tmp1_2 = SecDecInternalSqr(x1);
    auto tmp1_3 = tmp1_1*tmp1_2;
    auto tmp1_4 = msq*x1;
    auto tmp1_5 = 3*tmp1_4;
    auto tmp1_6 = tmp1_2*x2;
    auto tmp1_7 = msq*tmp1_6;
    auto tmp1_8 = 2*tmp1_7;
    auto tmp1_9 = tmp1_5 + tmp1_8;
    auto tmp1_10 = -tmp1_3-tmp1_9;
    auto tmp3_1 = x5*tmp1_10;
    auto tmp1_11 = tmp1_2*msq;
    auto tmp1_12 = tmp1_11*x3;
    auto tmp1_13 = -tmp1_12-tmp1_4-tmp1_3;
    auto tmp1_14 = 2*x0;
    auto tmp3_2 = tmp1_13*tmp1_14;
    auto tmp1_15 = 2*x2;
    auto tmp1_16 = tmp1_15*tmp1_4;
    auto tmp1_17 = tmp1_16 + msq;
    auto tmp1_18 = 2*msq;
    auto tmp1_19 = tmp1_18*tmp1_2;
    auto tmp1_20 = tmp1_19*x5;
    auto tmp3_3 = tmp1_20 + tmp1_8;
    auto tmp1_21 = tmp3_3 + tmp1_5;
    auto tmp1_22 = -tmp1_12-tmp1_21;
    auto tmp3_4 = x3*tmp1_22;
    auto tmp3_5 = tmp3_2 + tmp3_4 + tmp3_1-tmp1_17;
    auto tmp3_6 = x0*tmp3_5;
    auto tmp3_7 = 2*x1;
    auto tmp3_8 = tmp3_7 + 3;
    auto tmp3_9 = tmp3_8*tmp1_4;
    auto tmp1_23 = tmp3_9 + tmp1_8;
    auto tmp1_24 = tmp1_3 + tmp1_23;
    auto tmp3_10 = x5*tmp1_24;
    auto tmp3_11 = tmp3_3 + tmp3_9;
    auto tmp1_25 = tmp1_12 + tmp3_11;
    auto tmp3_12 = x3*tmp1_25;
    auto tmp1_26 = tmp3_7 + 1;
    auto tmp1_27 = tmp1_26*msq;
    auto tmp3_13 = tmp3_6 + tmp3_12 + tmp3_10 + tmp1_27 + tmp1_16;
    auto tmp3_14 = x0*tmp3_13;
    auto tmp3_15 = tmp1_19*x3;
    auto tmp3_16 = tmp3_11 + tmp3_15;
    auto tmp3_17 = tmp1_21 + tmp3_15;
    auto tmp3_18 = -x0*tmp1_19;
    auto tmp3_19 = tmp3_18-tmp3_17;
    auto tmp3_20 = x0*tmp3_19;
    auto tmp3_21 = tmp3_20 + tmp3_16;
    auto tmp3_22 = x0*tmp3_21;
    auto tmp3_23 = tmp1_11*x0;
    auto tmp1_28 = tmp1_11-tmp3_23;
    auto tmp1_29 = x4*x0;
    auto tmp3_24 = tmp1_28*tmp1_29;
    auto tmp3_25 = tmp3_22 + tmp3_24;
    auto tmp3_26 = x4*tmp3_25;
    auto tmp3_27 = x0*x1;
    auto tmp1_30 = tmp3_27-x1;
    auto tmp3_28 = tmp1_30*tmp1_29;
    auto tmp3_29 = -1 + x0;
    auto tmp1_31 = tmp1_2*x5;
    auto tmp1_32 = x3*tmp1_31;
    auto tmp3_30 = x0*tmp1_32*tmp3_29;
    auto tmp3_31 = tmp3_30-tmp3_28;
    auto tmp3_32 = s*tmp3_31;
    auto tmp3_33 = -t*tmp3_28;
    auto tmp3_34 = tmp3_33 + tmp3_32 + tmp3_14 + tmp3_26;
    auto tmp3_35 = -1 + 4*x1;
    auto tmp3_36 = tmp3_35*x1;
    auto tmp3_37 = tmp3_36-3;
    auto tmp3_38 = tmp3_37*tmp1_4;
    auto tmp3_39 = x1-1;
    auto tmp3_40 = tmp1_7*tmp3_39;
    auto tmp3_41 = tmp3_38 + 4*tmp3_40;
    auto tmp1_33 = tmp3_39*tmp1_2;
    auto tmp1_34 = 4*tmp1_33;
    auto tmp3_42 = tmp1_34*tmp1_1;
    auto tmp3_43 = tmp3_41 + tmp3_42;
    auto tmp3_44 = tmp1_33*tmp1_18;
    auto tmp1_35 = tmp3_44*x0;
    auto tmp3_45 = -x3*msq*tmp1_34;
    auto tmp3_46 = -tmp1_35 + tmp3_45-tmp3_43;
    auto tmp3_47 = x0*tmp3_46;
    auto tmp3_48 = tmp1_8*tmp3_39;
    auto tmp3_49 = tmp3_38 + tmp3_48;
    auto tmp3_50 = tmp3_49*x2;
    auto tmp3_51 = tmp1_26*x1;
    auto tmp3_52 = tmp3_51-3;
    auto tmp3_53 = tmp3_52*tmp1_4;
    auto tmp3_54 = tmp3_50 + tmp3_53;
    auto tmp3_55 = tmp3_7-1;
    auto tmp3_56 = tmp3_55*x1;
    auto tmp3_57 = tmp3_56-1;
    auto tmp3_58 = tmp3_57*tmp1_4;
    auto tmp3_59 = tmp3_58 + tmp3_48;
    auto tmp3_60 = 2*x5;
    auto tmp1_36 = -tmp3_60-2*x3;
    auto tmp3_61 = tmp3_59*tmp1_36;
    auto tmp3_62 = -tmp1_35-tmp3_59;
    auto tmp3_63 = x4*tmp3_62;
    auto tmp1_37 = tmp3_27*tmp3_39;
    auto tmp1_38 = -t*tmp1_37;
    auto tmp3_64 = tmp1_38 + tmp3_63 + tmp3_47 + tmp3_61-tmp3_54;
    auto tmp3_65 = x4*tmp3_64;
    auto tmp3_66 = -x5*tmp3_44;
    auto tmp3_67 = tmp3_66-tmp3_41;
    auto tmp3_68 = x5*tmp3_67;
    auto tmp3_69 = -x3*tmp3_44;
    auto tmp3_70 = tmp3_69-tmp3_43;
    auto tmp3_71 = x3*tmp3_70;
    auto tmp3_72 = x3 + x5;
    auto tmp3_73 = -tmp3_44*tmp3_72;
    auto tmp3_74 = tmp3_39*tmp1_4;
    auto tmp3_75 = -tmp3_74 + tmp3_73;
    auto tmp3_76 = x0*tmp3_75;
    auto tmp3_77 = -1-x2;
    auto tmp3_78 = tmp3_74*tmp3_77;
    auto tmp3_79 = tmp3_76 + tmp3_71 + 2*tmp3_78 + tmp3_68;
    auto tmp3_80 = x0*tmp3_79;
    auto tmp3_81 = tmp1_33*tmp1_15;
    auto tmp3_82 = tmp3_57*x1;
    auto tmp3_83 = tmp3_82 + tmp3_81;
    auto tmp3_84 = x5*tmp3_83;
    auto tmp3_85 = tmp3_39*x1;
    auto tmp3_86 = tmp3_84 + tmp3_85 + tmp3_81;
    auto tmp3_87 = x3*tmp3_86;
    auto tmp1_39 = x0*x3;
    auto tmp3_88 = tmp3_60*tmp1_33*tmp1_39;
    auto tmp3_89 = tmp3_81-tmp1_37;
    auto tmp3_90 = x4*tmp3_89;
    auto tmp3_91 = x5*x2;
    auto tmp3_92 = tmp3_91*tmp3_82;
    auto tmp1_40 = x2*tmp3_85;
    auto tmp3_93 = tmp3_90 + tmp3_88 + tmp3_87 + tmp1_40 + tmp3_92;
    auto tmp3_94 = s*tmp3_93;
    auto tmp3_95 = -x5*tmp3_59;
    auto tmp3_96 = tmp3_95-tmp3_54;
    auto tmp3_97 = x5*tmp3_96;
    auto tmp3_98 = -x3-tmp3_60;
    auto tmp3_99 = tmp3_59*tmp3_98;
    auto tmp3_100 = tmp3_99-tmp3_54;
    auto tmp3_101 = x3*tmp3_100;
    auto tmp3_102 = 2*tmp3_39;
    auto tmp3_103 = -tmp1_4*tmp3_102;
    auto tmp3_104 = -x2*tmp3_74;
    auto tmp3_105 = tmp3_103 + tmp3_104;
    auto tmp3_106 = x2*tmp3_105;
    auto tmp3_107 = tmp3_94 + tmp3_80 + tmp3_101 + tmp3_97-tmp3_74 + tmp3_106 + tmp3_65;
    auto tmp3_108 = tmp1_9*x2;
    auto tmp3_109 = tmp3_108-tmp3_9;
    auto tmp3_110 = tmp3_109*x2;
    auto tmp3_111 = tmp1_11-tmp1_7;
    auto tmp3_112 = tmp3_111*x2;
    auto tmp3_113 = tmp3_112*x3;
    auto tmp3_114 = tmp3_111*tmp1_15;
    auto tmp3_115 = x5*tmp3_114;
    auto tmp3_116 = tmp3_113-tmp3_110 + tmp3_115;
    auto tmp3_117 = x3*tmp3_116;
    auto tmp3_118 = tmp3_91*tmp3_111;
    auto tmp3_119 = x2-1;
    auto tmp3_120 = -x2*tmp1_4*tmp3_119;
    auto tmp3_121 = tmp3_113 + tmp3_120 + tmp3_118;
    auto tmp3_122 = tmp3_121*tmp1_14;
    auto tmp3_123 = x0 + tmp3_72;
    auto tmp3_124 = tmp3_114*tmp3_123;
    auto tmp3_125 = x4*tmp3_112;
    auto tmp3_126 = tmp3_125-tmp3_110 + tmp3_124;
    auto tmp3_127 = x4*tmp3_126;
    auto tmp3_128 = x1 + 1;
    auto tmp3_129 = tmp3_128*x1;
    auto tmp3_130 = tmp3_91*tmp3_129*tmp3_119;
    auto tmp3_131 = tmp1_6-tmp1_2;
    auto tmp3_132 = x4*tmp3_131;
    auto tmp3_133 = x1*tmp3_119;
    auto tmp3_134 = tmp3_132 + tmp3_133;
    auto tmp3_135 = x2*tmp3_134;
    auto tmp3_136 = x2 + tmp3_91;
    auto tmp3_137 = x3*tmp3_131*tmp3_136;
    auto tmp3_138 = tmp3_137 + tmp3_130 + tmp3_135;
    auto tmp3_139 = s*tmp3_138;
    auto tmp3_140 = -tmp3_110 + tmp3_118;
    auto tmp3_141 = x5*tmp3_140;
    auto tmp3_142 = -x2*tmp1_17;
    auto tmp3_143 = tmp1_27 + tmp3_142;
    auto tmp3_144 = x2*tmp3_143;
    auto tmp3_145 = tmp3_139 + tmp3_127 + tmp3_122 + tmp3_117 + tmp3_144 + tmp3_141;
    auto tmp3_146 = tmp3_128*tmp1_4;
    auto tmp3_147 = tmp3_146 + tmp1_7;
    auto tmp3_148 = tmp3_147*x3;
    auto tmp3_149 = tmp3_147*tmp3_60;
    auto tmp3_150 = tmp3_149 + 2*tmp3_148;
    auto tmp3_151 = tmp1_5 + tmp1_7;
    auto tmp3_152 = tmp3_151*x2;
    auto tmp3_153 = tmp3_85-1;
    auto tmp3_154 = tmp3_153*msq;
    auto tmp3_155 = tmp3_152-tmp3_154;
    auto tmp3_156 = tmp3_155 + tmp3_150;
    auto tmp3_157 = -x3*tmp3_156;
    auto tmp3_158 = tmp3_9 + tmp1_7;
    auto tmp3_159 = tmp3_158*x2;
    auto tmp3_160 = x1 + 3;
    auto tmp3_161 = tmp3_160*x1;
    auto tmp3_162 = tmp3_161 + 1;
    auto tmp3_163 = tmp3_162*msq;
    auto tmp3_164 = tmp3_163 + tmp3_159;
    auto tmp3_165 = tmp3_157 + tmp3_149 + tmp3_164;
    auto tmp3_166 = x3*tmp3_165;
    auto tmp3_167 = -x3*tmp3_17;
    auto tmp3_168 = tmp3_167 + tmp3_11;
    auto tmp3_169 = x3*tmp3_168;
    auto tmp3_170 = tmp1_12-tmp1_11;
    auto tmp3_171 = tmp3_170*tmp1_39;
    auto tmp3_172 = tmp3_169-tmp3_171;
    auto tmp3_173 = x0*tmp3_172;
    auto tmp3_174 = -tmp3_148 + tmp3_147;
    auto tmp3_175 = x3*tmp3_174;
    auto tmp3_176 = tmp3_175-tmp3_171;
    auto tmp3_177 = 2*x4;
    auto tmp3_178 = tmp3_176*tmp3_177;
    auto tmp3_179 = tmp3_129 + tmp1_6;
    auto tmp3_180 = tmp3_179*x5;
    auto tmp3_181 = x1 + tmp3_180 + tmp1_6;
    auto tmp3_182 = x3-1;
    auto tmp3_183 = x3*tmp3_181*tmp3_182;
    auto tmp3_184 = -tmp1_31 + tmp1_32;
    auto tmp3_185 = tmp3_184*tmp1_39;
    auto tmp3_186 = tmp3_183 + tmp3_185;
    auto tmp3_187 = s*tmp3_186;
    auto tmp3_188 = tmp3_187 + tmp3_178 + tmp3_166 + tmp3_173;
    auto tmp3_189 = -tmp3_23-tmp3_17;
    auto tmp3_190 = x0*tmp3_189;
    auto tmp3_191 = -tmp3_23-tmp3_147;
    auto tmp3_192 = tmp3_191*tmp3_177;
    auto tmp3_193 = tmp3_192 + tmp3_190-tmp3_156;
    auto tmp3_194 = x4*tmp3_193;
    auto tmp3_195 = tmp3_23 + tmp3_16;
    auto tmp3_196 = x0*tmp3_195;
    auto tmp3_197 = tmp3_27-tmp1_6;
    auto tmp3_198 = -s*tmp3_197;
    auto tmp3_199 = -t*tmp3_27;
    auto tmp3_200 = tmp3_199 + tmp3_198;
    auto tmp3_201 = x4-1;
    auto tmp3_202 = tmp3_201*tmp3_200;
    auto tmp3_203 = tmp3_194 + tmp3_196 + tmp3_150 + tmp3_164 + tmp3_202;
    auto tmp3_204 = x4*tmp3_203;
    auto tmp3_205 = tmp3_180-tmp3_179;
    auto tmp3_206 = x3*tmp3_205;
    auto tmp3_207 = -x2 + tmp3_91;
    auto tmp3_208 = tmp3_129*tmp3_207;
    auto tmp3_209 = -tmp1_2 + tmp1_31;
    auto tmp3_210 = tmp3_209*tmp1_39;
    auto tmp3_211 = tmp3_210 + tmp3_208 + tmp3_206;
    auto tmp3_212 = s*tmp3_211;
    auto tmp3_213 = -tmp3_149-tmp3_155;
    auto tmp3_214 = x5*tmp3_213;
    auto tmp3_215 = tmp3_212 + tmp3_214 + tmp3_164;
    auto tmp3_216 = x5*tmp3_215;
    auto tmp3_217 = tmp3_60*x3;
    auto tmp3_218 = x0*x5;
    auto tmp3_219 = -tmp3_218-tmp3_217;
    auto tmp3_220 = tmp1_3-tmp1_11;
    auto tmp3_221 = tmp3_220*tmp3_219;
    auto tmp3_222 = -x5*tmp1_21;
    auto tmp3_223 = tmp3_222 + tmp1_23;
    auto tmp3_224 = x5*tmp3_223;
    auto tmp3_225 = tmp3_224 + tmp3_221;
    auto tmp3_226 = x0*tmp3_225;
    auto tmp3_227 = x5-1;
    auto tmp3_228 = tmp3_227*tmp3_147;
    auto tmp3_229 = -x5*tmp3_228;
    auto tmp3_230 = -tmp3_220*tmp3_218;
    auto tmp3_231 = tmp3_229 + tmp3_230;
    auto tmp3_232 = tmp3_231*tmp3_177;
    auto tmp3_233 = -tmp3_228*tmp3_217;
    auto tmp3_234 = tmp3_232 + tmp3_226 + tmp3_233 + tmp3_216;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_34))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_107))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_145))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_188))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_204))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_234))));
}
}
