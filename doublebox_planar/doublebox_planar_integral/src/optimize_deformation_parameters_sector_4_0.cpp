#include "optimize_deformation_parameters_sector_4_0.hpp"
namespace doublebox_planar_integral
{
void sector_4_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x5 + 1;
    auto tmp1_2 = tmp1_1*x0;
    auto tmp1_3 = tmp1_2-tmp1_1;
    auto tmp1_4 = tmp1_3*x0;
    auto tmp1_5 = x0-1;
    auto tmp1_6 = x3*x0;
    auto tmp1_7 = tmp1_5*tmp1_6;
    auto tmp3_1 = tmp1_4 + tmp1_7;
    auto tmp1_8 = 2*x4;
    auto tmp1_9 = 2*x2;
    auto tmp1_10 = -tmp1_8-tmp1_9;
    auto tmp3_2 = tmp3_1*tmp1_10;
    auto tmp3_3 = x4 + x2;
    auto tmp1_11 = 2*x0;
    auto tmp1_12 = -tmp3_3*tmp1_5*tmp1_11;
    auto tmp1_13 = tmp1_11-1;
    auto tmp1_14 = -x0*tmp1_13;
    auto tmp3_4 = 1 + tmp1_14;
    auto tmp3_5 = x0*tmp3_4;
    auto tmp3_6 = tmp3_5 + tmp1_12;
    auto tmp3_7 = x1*tmp3_6;
    auto tmp3_8 = tmp1_11*tmp1_1;
    auto tmp1_15 = tmp3_8 + tmp1_1;
    auto tmp1_16 = -x0*tmp1_15;
    auto tmp1_17 = 3*tmp1_1;
    auto tmp3_9 = tmp1_17 + tmp1_16;
    auto tmp3_10 = x0*tmp3_9;
    auto tmp1_18 = tmp1_11 + 1;
    auto tmp1_19 = -x0*tmp1_18;
    auto tmp3_11 = 3 + tmp1_19;
    auto tmp3_12 = tmp3_11*tmp1_6;
    auto tmp3_13 = tmp3_7 + tmp3_10 + tmp3_12 + tmp3_2;
    auto tmp3_14 = x1*tmp3_13;
    auto tmp3_15 = -tmp1_3*tmp1_11;
    auto tmp3_16 = tmp3_15-tmp1_7;
    auto tmp3_17 = x3*tmp3_16;
    auto tmp3_18 = x5 + 2;
    auto tmp3_19 = tmp3_18*x5;
    auto tmp3_20 = tmp3_19 + 1;
    auto tmp3_21 = -x0*tmp3_20*tmp1_5;
    auto tmp3_22 = tmp3_14 + tmp3_21 + tmp3_17;
    auto tmp3_23 = msq*tmp3_22;
    auto tmp3_24 = x0*s;
    auto tmp3_25 = -s + tmp3_24;
    auto tmp3_26 = tmp3_25*tmp1_6;
    auto tmp3_27 = s + t;
    auto tmp3_28 = x0*x5;
    auto tmp3_29 = tmp3_27*tmp3_28;
    auto tmp3_30 = tmp3_27*x5;
    auto tmp1_20 = tmp3_30-tmp3_29;
    auto tmp3_31 = x1*x0*tmp1_20;
    auto tmp3_32 = tmp3_23 + tmp3_26 + tmp3_31;
    auto tmp3_33 = x5-1;
    auto tmp3_34 = tmp3_33*tmp1_11;
    auto tmp1_21 = 1 + 3*x5;
    auto tmp3_35 = tmp1_11 + 3;
    auto tmp1_22 = tmp3_35*x3;
    auto tmp3_36 = tmp1_22 + tmp3_34 + tmp1_21;
    auto tmp1_23 = tmp3_33 + x3;
    auto tmp1_24 = -x2*tmp1_23;
    auto tmp3_37 = tmp1_24-tmp3_36;
    auto tmp3_38 = x2*tmp3_37;
    auto tmp1_25 = tmp1_9 + x4;
    auto tmp3_39 = -tmp1_23*tmp1_25;
    auto tmp3_40 = tmp3_39-tmp3_36;
    auto tmp3_41 = x4*tmp3_40;
    auto tmp3_42 = -tmp1_18-tmp1_25;
    auto tmp3_43 = x4*tmp3_42;
    auto tmp1_26 = x0 + 1;
    auto tmp1_27 = -x0*tmp1_26;
    auto tmp1_28 = -x2-tmp1_18;
    auto tmp3_44 = x2*tmp1_28;
    auto tmp3_45 = tmp3_43 + tmp1_27 + tmp3_44;
    auto tmp3_46 = x1*tmp3_45;
    auto tmp3_47 = x0 + 3;
    auto tmp3_48 = tmp3_47*x0;
    auto tmp3_49 = tmp3_48 + 1;
    auto tmp3_50 = tmp3_49*x3;
    auto tmp1_29 = tmp3_50 + tmp1_1;
    auto tmp1_30 = -x0*tmp3_33;
    auto tmp3_51 = tmp1_30-tmp1_21;
    auto tmp3_52 = x0*tmp3_51;
    auto tmp3_53 = 2*tmp3_46 + tmp3_41 + tmp3_38 + tmp3_52-tmp1_29;
    auto tmp3_54 = x1*tmp3_53;
    auto tmp3_55 = tmp3_8 + tmp1_22 + tmp1_17;
    auto tmp3_56 = tmp1_1 + x3;
    auto tmp3_57 = tmp3_56*x2;
    auto tmp3_58 = tmp3_57 + tmp3_55;
    auto tmp3_59 = x2*tmp3_58;
    auto tmp3_60 = tmp3_56*tmp1_9;
    auto tmp1_31 = tmp3_55 + tmp3_60;
    auto tmp1_32 = x4*tmp3_56;
    auto tmp3_61 = tmp1_32 + tmp1_31;
    auto tmp3_62 = x4*tmp3_61;
    auto tmp3_63 = tmp1_17 + tmp1_2;
    auto tmp3_64 = x0*tmp3_63;
    auto tmp3_65 = tmp3_54 + tmp3_62 + tmp3_59 + tmp3_64 + tmp1_29;
    auto tmp3_66 = msq*tmp3_65;
    auto tmp3_67 = x2*s;
    auto tmp3_68 = tmp3_29-tmp3_67;
    auto tmp3_69 = x5*s;
    auto tmp3_70 = x3*s;
    auto tmp3_71 = tmp3_69 + tmp3_70;
    auto tmp1_33 = -s + tmp3_71;
    auto tmp3_72 = x2*tmp1_33;
    auto tmp3_73 = tmp3_70 + tmp3_72;
    auto tmp3_74 = x4*tmp3_73;
    auto tmp1_34 = x1*x4;
    auto tmp1_35 = s*tmp1_9*tmp1_34;
    auto tmp3_75 = tmp1_35 + tmp3_74-tmp3_68;
    auto tmp3_76 = x1*tmp3_75;
    auto tmp3_77 = tmp3_71 + s;
    auto tmp3_78 = tmp3_77*x2;
    auto tmp1_36 = tmp3_78 + tmp3_70;
    auto tmp1_37 = tmp1_36*x4;
    auto tmp3_79 = tmp3_66 + tmp3_76-tmp1_37 + tmp3_68;
    auto tmp3_80 = x1*tmp3_79;
    auto tmp3_81 = tmp1_18*x3;
    auto tmp3_82 = tmp3_81 + tmp3_60 + tmp1_15;
    auto tmp3_83 = -x2*tmp3_82;
    auto tmp3_84 = tmp3_83 + tmp3_55;
    auto tmp3_85 = x2*tmp3_84;
    auto tmp3_86 = tmp1_13 + tmp1_9;
    auto tmp3_87 = -x2*tmp3_86;
    auto tmp3_88 = tmp3_87 + tmp1_18;
    auto tmp3_89 = x2*tmp3_88;
    auto tmp3_90 = tmp1_9*x4;
    auto tmp3_91 = x2-1;
    auto tmp1_38 = -tmp3_91*tmp3_90;
    auto tmp3_92 = tmp3_89 + tmp1_38;
    auto tmp3_93 = x1*tmp3_92;
    auto tmp3_94 = -tmp3_57 + tmp3_56;
    auto tmp3_95 = tmp3_94*tmp3_90;
    auto tmp3_96 = tmp3_93 + tmp3_85 + tmp3_95;
    auto tmp3_97 = x1*tmp3_96;
    auto tmp3_98 = x3 + 2*tmp1_1;
    auto tmp3_99 = tmp3_98*x3;
    auto tmp3_100 = tmp3_99 + tmp3_20;
    auto tmp3_101 = tmp3_91*x2;
    auto tmp3_102 = -tmp3_100*tmp3_101;
    auto tmp3_103 = tmp3_102 + tmp3_97;
    auto tmp3_104 = msq*tmp3_103;
    auto tmp3_105 = tmp3_67-s;
    auto tmp3_106 = x1*tmp3_105;
    auto tmp3_107 = tmp3_106 + tmp3_78-tmp3_77;
    auto tmp3_108 = x4*x2;
    auto tmp3_109 = tmp3_108*tmp3_107;
    auto tmp3_110 = x2*tmp3_105;
    auto tmp3_111 = tmp3_110 + tmp3_109;
    auto tmp3_112 = x1*tmp3_111;
    auto tmp3_113 = tmp3_70*tmp3_101;
    auto tmp3_114 = tmp3_104 + tmp3_113 + tmp3_112;
    auto tmp3_115 = -x3*tmp1_26;
    auto tmp3_116 = tmp3_115-x5-tmp3_28;
    auto tmp3_117 = x3*tmp3_116;
    auto tmp3_118 = x3 + x5;
    auto tmp3_119 = tmp3_118*x3;
    auto tmp3_120 = tmp3_119-tmp1_1;
    auto tmp3_121 = -x4*tmp3_120;
    auto tmp3_122 = tmp3_121 + tmp3_117 + tmp1_2 + tmp1_1;
    auto tmp3_123 = x3*tmp3_122;
    auto tmp3_124 = x2*x3;
    auto tmp3_125 = -tmp3_120*tmp3_124;
    auto tmp3_126 = tmp3_125 + tmp3_123;
    auto tmp3_127 = tmp3_35-tmp1_22;
    auto tmp3_128 = x3-1;
    auto tmp3_129 = -tmp3_128*tmp1_25;
    auto tmp3_130 = tmp3_127 + tmp3_129;
    auto tmp3_131 = x4*tmp3_130;
    auto tmp3_132 = tmp3_131-tmp3_50 + tmp3_49;
    auto tmp3_133 = x3*tmp3_132;
    auto tmp3_134 = x3*tmp3_127;
    auto tmp3_135 = -tmp3_128*tmp3_124;
    auto tmp3_136 = tmp3_134 + tmp3_135;
    auto tmp3_137 = x2*tmp3_136;
    auto tmp3_138 = tmp3_137 + tmp3_133;
    auto tmp3_139 = x1*tmp3_138;
    auto tmp3_140 = 2*tmp3_126 + tmp3_139;
    auto tmp3_141 = msq*tmp3_140;
    auto tmp3_142 = tmp3_24 + s;
    auto tmp3_143 = x3*tmp3_142*tmp3_128;
    auto tmp3_144 = tmp3_70-s;
    auto tmp3_145 = tmp3_144*x3;
    auto tmp3_146 = tmp3_145*x2;
    auto tmp3_147 = tmp3_145 + tmp3_146;
    auto tmp3_148 = tmp3_147*tmp1_34;
    auto tmp3_149 = x4*tmp3_145;
    auto tmp3_150 = tmp3_141 + tmp3_148 + tmp3_149 + tmp3_143 + tmp3_146;
    auto tmp3_151 = tmp1_37-tmp1_36;
    auto tmp3_152 = x4*tmp3_151;
    auto tmp3_153 = x4-1;
    auto tmp3_154 = tmp1_34*tmp3_67*tmp3_153;
    auto tmp3_155 = tmp3_152 + tmp3_154;
    auto tmp3_156 = x1*tmp3_155;
    auto tmp3_157 = -tmp3_56*tmp1_8;
    auto tmp3_158 = tmp3_157-tmp3_82;
    auto tmp3_159 = x4*tmp3_158;
    auto tmp3_160 = tmp3_159 + tmp1_31;
    auto tmp3_161 = x4*tmp3_160;
    auto tmp3_162 = -tmp1_8-tmp3_86;
    auto tmp3_163 = x4*tmp3_162;
    auto tmp3_164 = tmp3_163 + tmp1_9 + tmp1_18;
    auto tmp3_165 = tmp3_164*tmp1_34;
    auto tmp3_166 = tmp3_161 + tmp3_165;
    auto tmp3_167 = x1*tmp3_166;
    auto tmp3_168 = tmp3_153*x4;
    auto tmp3_169 = -tmp3_100*tmp3_168;
    auto tmp3_170 = tmp3_169 + tmp3_167;
    auto tmp3_171 = msq*tmp3_170;
    auto tmp3_172 = tmp3_70*tmp3_168;
    auto tmp3_173 = tmp3_171 + tmp3_172 + tmp3_156;
    auto tmp3_174 = tmp3_33*x5;
    auto tmp3_175 = tmp3_174*x3;
    auto tmp3_176 = SecDecInternalSqr(x5);
    auto tmp3_177 = tmp3_176-1;
    auto tmp3_178 = tmp3_177*x5;
    auto tmp3_179 = tmp3_175 + tmp3_178;
    auto tmp3_180 = -tmp3_179*tmp3_3;
    auto tmp3_181 = -tmp3_177*tmp3_28;
    auto tmp3_182 = tmp3_28*tmp3_33;
    auto tmp3_183 = -tmp3_174-tmp3_182;
    auto tmp3_184 = x3*tmp3_183;
    auto tmp3_185 = tmp3_184-tmp3_178 + tmp3_181 + tmp3_180;
    auto tmp3_186 = -tmp3_35-tmp1_25;
    auto tmp3_187 = x4*tmp3_186;
    auto tmp3_188 = -x2-tmp3_35;
    auto tmp3_189 = x2*tmp3_188;
    auto tmp3_190 = tmp3_187 + tmp3_189-1;
    auto tmp3_191 = tmp3_174*tmp3_190;
    auto tmp3_192 = -3*tmp3_174-tmp3_182;
    auto tmp3_193 = x0*tmp3_192;
    auto tmp3_194 = tmp3_193 + tmp3_191;
    auto tmp3_195 = x1*tmp3_194;
    auto tmp3_196 = 2*tmp3_185 + tmp3_195;
    auto tmp3_197 = msq*tmp3_196;
    auto tmp3_198 = -tmp3_30 + tmp3_27;
    auto tmp3_199 = tmp3_198*tmp3_28;
    auto tmp3_200 = -s + tmp3_69;
    auto tmp3_201 = x5*tmp3_200*tmp3_108;
    auto tmp3_202 = tmp3_199 + tmp3_201;
    auto tmp3_203 = x1*tmp3_202;
    auto tmp3_204 = tmp3_203 + tmp3_197;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_32))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_80))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_114))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_150))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_173))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_204))));
}
}
