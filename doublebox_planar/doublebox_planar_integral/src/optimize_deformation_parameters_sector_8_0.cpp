#include "optimize_deformation_parameters_sector_8_0.hpp"
namespace doublebox_planar_integral
{
void sector_8_order_0_maximal_allowed_deformation_parameters
(
    real_t * restrict const output_deformation_parameters,
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    auto tmp1_1 = x3 + 1;
    auto tmp1_2 = SecDecInternalSqr(x0);
    auto tmp3_1 = tmp1_2-1;
    auto tmp1_3 = tmp3_1*x0;
    auto tmp1_4 = -tmp1_3*tmp1_1;
    auto tmp1_5 = x5*x0;
    auto tmp1_6 = -tmp3_1*tmp1_5;
    auto tmp1_7 = x0-1;
    auto tmp3_2 = tmp1_7*x0;
    auto tmp1_8 = tmp3_2*x5;
    auto tmp1_9 = tmp1_8 + tmp3_2;
    auto tmp1_10 = tmp3_2*x3;
    auto tmp1_11 = tmp1_9 + tmp1_10;
    auto tmp1_12 = -x4*tmp1_11;
    auto tmp3_3 = tmp1_12 + tmp1_6 + tmp1_4;
    auto tmp3_4 = x2*tmp1_11;
    auto tmp3_5 = -x4*tmp3_2;
    auto tmp3_6 = -tmp1_3 + tmp3_5;
    auto tmp3_7 = -x2*tmp3_2;
    auto tmp3_8 = 2*tmp3_6 + tmp3_7;
    auto tmp3_9 = x1*x2;
    auto tmp3_10 = tmp3_8*tmp3_9;
    auto tmp3_11 = tmp3_10 + 2*tmp3_3-3*tmp3_4;
    auto tmp3_12 = x1*tmp3_11;
    auto tmp3_13 = -2*tmp3_2-tmp1_8;
    auto tmp3_14 = x5*tmp3_13;
    auto tmp3_15 = -2*tmp1_9-tmp1_10;
    auto tmp3_16 = x3*tmp3_15;
    auto tmp3_17 = tmp3_12 + tmp3_16-tmp3_2 + tmp3_14;
    auto tmp3_18 = msq*tmp3_17;
    auto tmp3_19 = x3*x5;
    auto tmp3_20 = x0*s;
    auto tmp3_21 = -s + tmp3_20;
    auto tmp3_22 = tmp3_21*tmp3_19;
    auto tmp3_23 = s + t;
    auto tmp3_24 = tmp3_23*x0;
    auto tmp3_25 = -tmp3_24 + tmp3_23;
    auto tmp3_26 = tmp3_25*tmp3_9;
    auto tmp3_27 = tmp3_22 + tmp3_26;
    auto tmp3_28 = x0*tmp3_27;
    auto tmp3_29 = tmp3_18 + tmp3_28;
    auto tmp3_30 = x0 + 1;
    auto tmp3_31 = tmp3_30*x5;
    auto tmp3_32 = tmp3_30*x3;
    auto tmp3_33 = tmp3_32 + tmp3_31;
    auto tmp1_13 = tmp3_33 + tmp3_30;
    auto tmp1_14 = x5 + 1;
    auto tmp1_15 = tmp1_14 + x3;
    auto tmp1_16 = tmp1_15*x4;
    auto tmp1_17 = tmp1_16 + 2*tmp1_13;
    auto tmp3_34 = tmp1_17*x4;
    auto tmp1_18 = x0 + 2;
    auto tmp3_35 = tmp1_18*x0;
    auto tmp3_36 = tmp3_35 + 1;
    auto tmp1_19 = tmp3_36*x5;
    auto tmp1_20 = tmp3_36*x3;
    auto tmp3_37 = tmp3_34 + tmp3_36 + tmp1_19 + tmp1_20;
    auto tmp1_21 = x3 + x5;
    auto tmp1_22 = 2*x0;
    auto tmp1_23 = tmp1_22 + 1;
    auto tmp1_24 = 2*x4;
    auto tmp1_25 = tmp1_24-tmp1_21 + tmp1_23;
    auto tmp3_38 = x2*tmp1_25;
    auto tmp1_26 = tmp1_24 + 1 + 4*x0-3*tmp1_21;
    auto tmp3_39 = x4*tmp1_26;
    auto tmp3_40 = x0*tmp1_23;
    auto tmp3_41 = tmp3_38 + tmp3_39-1 + tmp3_40-3*tmp3_33;
    auto tmp3_42 = x2*tmp3_41;
    auto tmp3_43 = x4 + 2*tmp3_30;
    auto tmp3_44 = tmp3_43*x4;
    auto tmp3_45 = tmp3_44 + tmp3_36;
    auto tmp3_46 = tmp3_30 + x4;
    auto tmp1_27 = -x2*tmp3_46;
    auto tmp3_47 = tmp1_27-tmp3_45;
    auto tmp3_48 = tmp3_47*tmp3_9;
    auto tmp3_49 = 2*tmp3_48 + tmp3_42-tmp3_37;
    auto tmp3_50 = x1*tmp3_49;
    auto tmp3_51 = tmp1_13 + tmp1_16;
    auto tmp3_52 = 3*tmp3_51;
    auto tmp1_28 = tmp1_15*x2;
    auto tmp1_29 = tmp3_52 + tmp1_28;
    auto tmp3_53 = x2*tmp1_29;
    auto tmp3_54 = tmp3_50 + tmp3_53 + tmp3_37;
    auto tmp3_55 = msq*tmp3_54;
    auto tmp3_56 = x3*s;
    auto tmp3_57 = x5*s;
    auto tmp1_30 = s + tmp3_56 + tmp3_57;
    auto tmp1_31 = tmp1_30*x4;
    auto tmp3_58 = tmp3_24-tmp3_57;
    auto tmp1_32 = -2*s + tmp3_56;
    auto tmp3_59 = x4*tmp1_32;
    auto tmp3_60 = tmp3_59-tmp3_58;
    auto tmp3_61 = x2*tmp3_60;
    auto tmp1_33 = tmp3_9*s;
    auto tmp1_34 = tmp1_24*tmp1_33;
    auto tmp3_62 = tmp1_34 + tmp1_31 + tmp3_61;
    auto tmp3_63 = x1*tmp3_62;
    auto tmp3_64 = tmp3_56*x4;
    auto tmp3_65 = tmp3_58-tmp3_64;
    auto tmp1_35 = tmp3_65*x2;
    auto tmp3_66 = tmp3_55 + tmp3_63-tmp1_31 + tmp1_35;
    auto tmp3_67 = x1*tmp3_66;
    auto tmp3_68 = -x5-tmp1_1;
    auto tmp1_36 = 1 + 3*x0;
    auto tmp3_69 = tmp1_36*tmp3_68;
    auto tmp3_70 = -2*tmp1_28-3*tmp1_16 + tmp3_69;
    auto tmp3_71 = x2*tmp3_70;
    auto tmp3_72 = tmp3_52 + tmp3_71;
    auto tmp3_73 = x2*tmp3_72;
    auto tmp3_74 = 2*x2;
    auto tmp3_75 = -tmp3_46*tmp3_74;
    auto tmp3_76 = -tmp1_22-x4;
    auto tmp3_77 = x4*tmp3_76;
    auto tmp3_78 = tmp3_75 + tmp3_77-tmp3_1;
    auto tmp3_79 = x2*tmp3_78;
    auto tmp3_80 = tmp3_79 + tmp3_45;
    auto tmp3_81 = tmp3_80*tmp3_9;
    auto tmp3_82 = tmp3_73 + tmp3_81;
    auto tmp3_83 = x1*tmp3_82;
    auto tmp3_84 = x3 + 2*tmp1_14;
    auto tmp3_85 = tmp3_84*x3;
    auto tmp3_86 = x5 + 2;
    auto tmp3_87 = tmp3_86*x5;
    auto tmp3_88 = tmp3_85 + tmp3_87 + 1;
    auto tmp3_89 = x2-1;
    auto tmp3_90 = tmp3_89*x2;
    auto tmp3_91 = -tmp3_88*tmp3_90;
    auto tmp3_92 = tmp3_91 + tmp3_83;
    auto tmp3_93 = msq*tmp3_92;
    auto tmp3_94 = -tmp1_35 + tmp3_65;
    auto tmp3_95 = x2*tmp3_94;
    auto tmp3_96 = x2*x4;
    auto tmp3_97 = -x4 + tmp3_96;
    auto tmp3_98 = tmp3_97*tmp1_33;
    auto tmp3_99 = tmp3_95 + tmp3_98;
    auto tmp3_100 = x1*tmp3_99;
    auto tmp3_101 = tmp3_57*x3;
    auto tmp3_102 = tmp3_101*tmp3_90;
    auto tmp3_103 = tmp3_93 + tmp3_102 + tmp3_100;
    auto tmp3_104 = x2*x3;
    auto tmp3_105 = x4*x3;
    auto tmp3_106 = tmp3_104 + tmp3_105;
    auto tmp3_107 = tmp1_21*x3;
    auto tmp3_108 = tmp3_107-tmp1_14;
    auto tmp3_109 = -tmp3_108*tmp3_106;
    auto tmp3_110 = -x3*tmp3_33;
    auto tmp3_111 = tmp3_110 + tmp3_31 + tmp3_30;
    auto tmp3_112 = x3*tmp3_111;
    auto tmp3_113 = tmp3_112 + tmp3_109;
    auto tmp3_114 = tmp3_32-tmp3_30;
    auto tmp3_115 = tmp3_114*x3;
    auto tmp3_116 = x3-1;
    auto tmp3_117 = tmp3_116*tmp3_105;
    auto tmp3_118 = -2*tmp3_115-tmp3_117;
    auto tmp3_119 = x4*tmp3_118;
    auto tmp3_120 = -tmp3_115-tmp3_117;
    auto tmp3_121 = -tmp3_116*tmp3_104;
    auto tmp3_122 = 3*tmp3_120 + tmp3_121;
    auto tmp3_123 = x2*tmp3_122;
    auto tmp3_124 = -tmp1_20 + tmp3_36;
    auto tmp3_125 = x3*tmp3_124;
    auto tmp3_126 = tmp3_123 + tmp3_125 + tmp3_119;
    auto tmp3_127 = x1*tmp3_126;
    auto tmp3_128 = 2*tmp3_113 + tmp3_127;
    auto tmp3_129 = msq*tmp3_128;
    auto tmp3_130 = tmp3_101-tmp3_57;
    auto tmp3_131 = tmp3_130*tmp3_106;
    auto tmp3_132 = 1 + x2;
    auto tmp3_133 = tmp3_56-s;
    auto tmp3_134 = x1*tmp3_105*tmp3_133*tmp3_132;
    auto tmp3_135 = tmp3_20 + s;
    auto tmp3_136 = tmp3_135*tmp3_19;
    auto tmp3_137 = tmp3_135*x5;
    auto tmp3_138 = -tmp3_137 + tmp3_136;
    auto tmp3_139 = x3*tmp3_138;
    auto tmp3_140 = tmp3_129 + tmp3_134 + tmp3_139 + tmp3_131;
    auto tmp3_141 = x4-1;
    auto tmp3_142 = tmp3_141*tmp1_33;
    auto tmp3_143 = tmp3_142 + tmp1_31-tmp1_30;
    auto tmp3_144 = x4*tmp3_143;
    auto tmp3_145 = -tmp3_56 + tmp3_64;
    auto tmp3_146 = tmp3_145*tmp3_96;
    auto tmp3_147 = tmp3_146 + tmp3_144;
    auto tmp3_148 = x1*tmp3_147;
    auto tmp3_149 = -x0*tmp1_1;
    auto tmp3_150 = -tmp1_16-tmp1_5 + tmp3_149;
    auto tmp3_151 = x4*tmp3_150;
    auto tmp3_152 = tmp3_151 + tmp1_13;
    auto tmp3_153 = tmp3_152*tmp1_24;
    auto tmp3_154 = -x0-x4;
    auto tmp3_155 = x4*tmp3_154;
    auto tmp3_156 = tmp3_155 + tmp3_30;
    auto tmp3_157 = tmp3_156*tmp1_24;
    auto tmp3_158 = -tmp3_141*tmp3_96;
    auto tmp3_159 = tmp3_157 + tmp3_158;
    auto tmp3_160 = tmp3_159*tmp3_9;
    auto tmp3_161 = -tmp1_16 + tmp1_15;
    auto tmp3_162 = tmp3_161*tmp3_96;
    auto tmp3_163 = tmp3_160 + tmp3_153 + 3*tmp3_162;
    auto tmp3_164 = x1*tmp3_163;
    auto tmp3_165 = -x4*tmp3_88*tmp3_141;
    auto tmp3_166 = tmp3_165 + tmp3_164;
    auto tmp3_167 = msq*tmp3_166;
    auto tmp3_168 = tmp3_57*tmp3_105;
    auto tmp3_169 = -tmp3_101 + tmp3_168;
    auto tmp3_170 = x4*tmp3_169;
    auto tmp3_171 = tmp3_167 + tmp3_170 + tmp3_148;
    auto tmp3_172 = x5-1;
    auto tmp3_173 = tmp3_172*tmp3_19;
    auto tmp3_174 = SecDecInternalSqr(x5);
    auto tmp3_175 = tmp3_174-1;
    auto tmp3_176 = tmp3_175*x5;
    auto tmp3_177 = tmp3_176 + tmp3_173;
    auto tmp3_178 = x2 + x4;
    auto tmp3_179 = -tmp3_177*tmp3_178;
    auto tmp3_180 = -tmp3_30*tmp3_176;
    auto tmp3_181 = tmp3_31-tmp3_30;
    auto tmp3_182 = -tmp3_181*tmp3_19;
    auto tmp3_183 = tmp3_180 + tmp3_182 + tmp3_179;
    auto tmp3_184 = -tmp1_19 + tmp3_36;
    auto tmp3_185 = x5*tmp3_184;
    auto tmp3_186 = tmp3_181*x5;
    auto tmp3_187 = tmp3_172*x5;
    auto tmp3_188 = tmp3_187*x4;
    auto tmp3_189 = -2*tmp3_186-tmp3_188;
    auto tmp3_190 = x4*tmp3_189;
    auto tmp3_191 = -tmp3_186-tmp3_188;
    auto tmp3_192 = -x2*tmp3_187;
    auto tmp3_193 = 3*tmp3_191 + tmp3_192;
    auto tmp3_194 = x2*tmp3_193;
    auto tmp3_195 = tmp3_194 + tmp3_185 + tmp3_190;
    auto tmp3_196 = x1*tmp3_195;
    auto tmp3_197 = 2*tmp3_183 + tmp3_196;
    auto tmp3_198 = msq*tmp3_197;
    auto tmp3_199 = tmp3_57-s;
    auto tmp3_200 = tmp3_199*tmp3_178;
    auto tmp3_201 = tmp3_200 + tmp3_137-tmp3_135;
    auto tmp3_202 = tmp3_19*tmp3_201;
    auto tmp3_203 = x1*x5*tmp3_200;
    auto tmp3_204 = tmp3_198 + tmp3_203 + tmp3_202;
    SecDecInternalOutputDeformationParameters(0, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_29))));
    SecDecInternalOutputDeformationParameters(1, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_67))));
    SecDecInternalOutputDeformationParameters(2, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_103))));
    SecDecInternalOutputDeformationParameters(3, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_140))));
    SecDecInternalOutputDeformationParameters(4, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_171))));
    SecDecInternalOutputDeformationParameters(5, SecDecInternalDenominator(SecDecInternalAbs(SecDecInternalRealPart(tmp3_204))));
}
}
