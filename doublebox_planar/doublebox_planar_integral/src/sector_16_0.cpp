#include "sector_16_0.hpp"
namespace doublebox_planar_integral
{
#ifdef SECDEC_WITH_CUDA
__host__ __device__
#endif
integrand_return_t sector_16_order_0_integrand
(
    real_t const * restrict const integration_variables,
    real_t const * restrict const real_parameters,
    complex_t const * restrict const complex_parameters,
    real_t const * restrict const deformation_parameters,
    secdecutil::ResultInfo * restrict const result_info
)
{
    const auto x0 = integration_variables[0]; (void)x0;
    const auto x1 = integration_variables[1]; (void)x1;
    const auto x2 = integration_variables[2]; (void)x2;
    const auto x3 = integration_variables[3]; (void)x3;
    const auto x4 = integration_variables[4]; (void)x4;
    const auto x5 = integration_variables[5]; (void)x5;
    const auto s = real_parameters[0]; (void)s;
    const auto t = real_parameters[1]; (void)t;
    const auto msq = real_parameters[2]; (void)msq;
    const auto SecDecInternalLambda0 = deformation_parameters[0]; (void)SecDecInternalLambda0;
    const auto SecDecInternalLambda1 = deformation_parameters[1]; (void)SecDecInternalLambda1;
    const auto SecDecInternalLambda2 = deformation_parameters[2]; (void)SecDecInternalLambda2;
    const auto SecDecInternalLambda3 = deformation_parameters[3]; (void)SecDecInternalLambda3;
    const auto SecDecInternalLambda4 = deformation_parameters[4]; (void)SecDecInternalLambda4;
    const auto SecDecInternalLambda5 = deformation_parameters[5]; (void)SecDecInternalLambda5;
    auto tmp1_1 = 2*x3;
    auto tmp1_2 = tmp1_1 + 3;
    auto tmp1_3 = 2*x1;
    auto tmp1_4 = tmp1_2 + tmp1_3;
    auto tmp1_5 = 2*x4;
    auto tmp1_6 = tmp1_5 + tmp1_4;
    auto tmp3_1 = tmp1_6*x5;
    auto tmp1_7 = x0 + 1;
    auto tmp1_8 = tmp1_7 + x2;
    auto tmp3_2 = tmp3_1 + 2*tmp1_8;
    auto tmp3_3 = tmp3_2*msq;
    auto tmp1_9 = x2*s;
    auto tmp1_10 = tmp3_3-tmp1_9;
    auto tmp1_11 = x4*s;
    auto tmp1_12 = tmp1_11*x5;
    auto tmp1_13 = -tmp1_12 + tmp1_10;
    auto tmp1_14 = x1*s;
    auto tmp1_15 = tmp1_14 + s;
    auto tmp1_16 = tmp1_15*x5;
    auto tmp1_17 = -tmp1_16 + tmp1_10;
    auto tmp1_18 = 1 + x0 + x2;
    auto tmp3_4 = tmp1_2*tmp1_18;
    auto tmp1_19 = tmp1_8*tmp1_3;
    auto tmp3_5 = tmp1_19 + tmp3_4;
    auto tmp1_20 = tmp1_8*tmp1_5;
    auto tmp3_6 = tmp1_20 + tmp3_5;
    auto tmp1_21 = tmp1_1 + 1;
    auto tmp1_22 = tmp1_3 + tmp1_21;
    auto tmp1_23 = tmp1_22 + tmp1_5;
    auto tmp1_24 = 2*x5;
    auto tmp1_25 = tmp1_23*tmp1_24;
    auto tmp3_7 = tmp1_25 + tmp3_6;
    auto tmp3_8 = tmp3_7*msq;
    auto tmp1_26 = x0*s;
    auto tmp1_27 = s + tmp1_26 + tmp1_9;
    auto tmp1_28 = tmp1_27*x1;
    auto tmp3_9 = tmp1_28 + tmp1_26;
    auto tmp1_29 = x5*s;
    auto tmp1_30 = -tmp1_3*tmp1_29;
    auto tmp3_10 = tmp3_8 + tmp1_30-tmp3_9;
    auto tmp3_11 = tmp3_3-tmp1_26;
    auto tmp1_31 = -x5*tmp1_14;
    auto tmp3_12 = tmp1_31 + tmp3_11;
    auto tmp3_13 = tmp3_5*x4;
    auto tmp3_14 = tmp3_4*x1;
    auto tmp1_32 = 1 + 3*x3;
    auto tmp1_33 = tmp1_8*tmp1_32;
    auto tmp3_15 = tmp3_14 + tmp3_13 + tmp1_33;
    auto tmp3_16 = tmp1_22*x4;
    auto tmp3_17 = tmp1_21*x1;
    auto tmp3_18 = x3 + tmp3_17 + tmp3_16;
    auto tmp3_19 = tmp3_18*tmp1_24;
    auto tmp3_20 = tmp3_19 + tmp3_15;
    auto tmp3_21 = msq*tmp3_20;
    auto tmp3_22 = tmp3_9*x4;
    auto tmp3_23 = s + t;
    auto tmp1_34 = tmp3_23*x3;
    auto tmp1_35 = tmp1_9*x1;
    auto tmp3_24 = -tmp1_35 + tmp1_34-tmp3_22;
    auto tmp3_25 = -tmp1_3*tmp1_12;
    auto tmp3_26 = tmp3_21 + tmp3_25 + tmp3_24;
    auto tmp3_27 = tmp1_8 + tmp1_24;
    auto tmp3_28 = tmp3_27*msq;
    auto tmp3_29 = tmp1_27*x4;
    auto tmp3_30 = tmp3_29 + tmp1_9;
    auto tmp3_31 = -tmp1_5*tmp1_29;
    auto tmp3_32 = tmp3_8 + tmp3_31-tmp3_30;
    auto tmp3_33 = 2*msq;
    auto tmp1_36 = x5*tmp1_8*tmp3_33;
    auto tmp1_37 = x4 + x1;
    auto tmp1_38 = x3 + 1;
    auto tmp1_39 = tmp1_37 + tmp1_38;
    auto tmp1_40 = tmp1_39*tmp3_33;
    auto tmp3_34 = tmp1_4*x4;
    auto tmp3_35 = tmp1_2*x1;
    auto tmp3_36 = tmp3_34 + tmp3_35 + tmp1_32;
    auto tmp3_37 = tmp3_36*x5;
    auto tmp3_38 = tmp1_39*tmp1_8;
    auto tmp3_39 = tmp3_37 + 2*tmp3_38;
    auto tmp3_40 = tmp3_39*msq;
    auto tmp3_41 = -tmp1_16-tmp1_9;
    auto tmp3_42 = x4*tmp3_41;
    auto tmp3_43 = s*tmp1_38;
    auto tmp3_44 = tmp3_43*x2;
    auto tmp3_45 = tmp3_40-tmp3_44-tmp1_35 + tmp3_42;
    auto tmp3_46 = msq*x5;
    auto tmp3_47 = tmp3_6*x5;
    auto tmp1_41 = 2*x2;
    auto tmp3_48 = tmp1_7*tmp1_41;
    auto tmp3_49 = tmp3_48 + 1 + 2*x0;
    auto tmp3_50 = tmp3_47 + tmp3_49;
    auto tmp3_51 = tmp3_50*msq;
    auto tmp3_52 = tmp1_9*x0;
    auto tmp3_53 = tmp3_51-tmp3_52;
    auto tmp3_54 = x5*tmp3_23;
    auto tmp3_55 = tmp3_54 + tmp3_53;
    auto tmp3_56 = tmp1_23*msq;
    auto tmp1_42 = tmp1_40-tmp1_11-tmp1_14-tmp3_43;
    auto tmp3_57 = -x5*tmp3_9;
    auto tmp3_58 = tmp3_57 + tmp3_53;
    auto tmp1_43 = -tmp1_14 + tmp3_56;
    auto tmp3_59 = -x5*tmp3_30;
    auto tmp3_60 = tmp3_59 + tmp3_53;
    auto tmp3_61 = -tmp1_11 + tmp3_56;
    auto tmp3_62 = -x5*tmp1_27;
    auto tmp3_63 = tmp3_62 + tmp1_36;
    auto tmp1_44 = tmp3_33-s;
    auto tmp3_64 = tmp3_18*msq;
    auto tmp1_45 = tmp1_14*x4;
    auto tmp3_65 = tmp3_64-tmp1_45;
    auto tmp1_46 = 2*tmp3_65;
    auto tmp3_66 = tmp3_36*msq;
    auto tmp3_67 = tmp1_45 + tmp1_14;
    auto tmp3_68 = tmp3_66-tmp3_67;
    auto tmp3_69 = -tmp1_26*tmp1_37;
    auto tmp3_70 = -x5*tmp3_67;
    auto tmp3_71 = tmp3_43*x0;
    auto tmp3_72 = tmp3_40 + tmp3_70-tmp3_71 + tmp3_69;
    auto tmp3_73 = -s-tmp1_11;
    auto tmp3_74 = x5*tmp3_73;
    auto tmp3_75 = tmp3_74 + tmp3_11;
    auto tmp3_76 = tmp1_15*x4;
    auto tmp3_77 = -tmp3_76 + tmp3_66;
    auto tmp3_78 = tmp3_8 + tmp3_23;
    auto tmp3_79 = x5*tmp3_15;
    auto tmp3_80 = tmp3_49*tmp1_39;
    auto tmp3_81 = tmp3_79 + tmp3_80;
    auto tmp3_82 = msq*tmp3_81;
    auto tmp3_83 = x5*tmp3_24;
    auto tmp3_84 = -tmp3_52*tmp1_37;
    auto tmp3_85 = -x0*tmp3_44;
    auto tmp3_86 = tmp3_82 + tmp3_83 + tmp3_85 + tmp3_84;
    auto tmp3_87 = tmp3_46*tmp1_8;
    auto tmp3_88 = tmp1_39*msq;
    auto tmp3_89 = 3*msq;
    auto tmp3_90 = tmp3_89 + tmp3_23;
    auto tmp3_91 = tmp3_89-s;
    auto tmp3_92 = x5*SecDecInternalLambda5;
    auto tmp3_93 = -SecDecInternalLambda5 + tmp3_92;
    auto tmp3_94 = -SecDecInternalLambda5 + 2*tmp3_92;
    auto tmp3_95 = x4*SecDecInternalLambda4;
    auto tmp3_96 = -1 + tmp1_5;
    auto tmp3_97 = SecDecInternalLambda4*tmp3_96;
    auto tmp3_98 = x3*SecDecInternalLambda3;
    auto tmp3_99 = -1 + tmp1_1;
    auto tmp3_100 = SecDecInternalLambda3*tmp3_99;
    auto tmp3_101 = x2*SecDecInternalLambda2;
    auto tmp3_102 = -SecDecInternalLambda2 + 2*tmp3_101;
    auto tmp1_47 = x1*SecDecInternalLambda1;
    auto tmp3_103 = -1 + tmp1_3;
    auto tmp3_104 = SecDecInternalLambda1*tmp3_103;
    auto tmp1_48 = x0*SecDecInternalLambda0;
    auto tmp1_49 = -SecDecInternalLambda0 + 2*tmp1_48;
    auto __PowCall1 = SecDecInternalSqr(x0);
    auto __PowCall2 = SecDecInternalSqr(x1);
    auto __PowCall3 = SecDecInternalSqr(x2);
    auto __PowCall4 = SecDecInternalSqr(x3);
    auto __PowCall5 = SecDecInternalSqr(x4);
    auto __PowCall6 = SecDecInternalSqr(x5);
    auto tmp2_23 = __PowCall5 + __PowCall2 + __PowCall4;
    auto tmp2_24 = msq*tmp2_23;
    auto tmp2_25 = tmp3_77 + tmp2_24;
    auto tmp2_26 = tmp2_23*tmp3_46;
    auto tmp2_27 = tmp2_26 + tmp3_72;
    auto tmp2_28 = tmp3_65 + tmp2_24;
    auto tmp3_105 = __PowCall6*tmp2_28;
    auto tmp2_29 = tmp3_87*tmp2_23;
    auto tmp2_30 = __PowCall1 + __PowCall3;
    auto tmp2_31 = tmp3_88*tmp2_30;
    auto tmp3_106 = tmp3_86 + tmp2_31 + tmp2_29 + tmp3_105;
    auto tmp3_107 = tmp3_33*__PowCall6;
    auto tmp3_108 = tmp3_107 + tmp1_36;
    auto tmp3_109 = tmp3_68 + tmp2_24;
    auto tmp3_110 = tmp3_33*tmp2_23;
    auto tmp3_111 = tmp1_46 + tmp3_110;
    auto tmp2_32 = tmp1_44*__PowCall6;
    auto tmp3_112 = tmp3_63 + tmp2_32;
    auto tmp3_113 = msq*tmp2_30;
    auto tmp2_33 = tmp3_61*__PowCall6;
    auto tmp3_114 = tmp2_33 + tmp3_60 + tmp3_113;
    auto tmp2_34 = tmp1_43*__PowCall6;
    auto tmp3_115 = tmp2_34 + tmp3_58 + tmp3_113;
    auto tmp2_35 = tmp3_56*__PowCall6;
    auto tmp3_116 = tmp3_55 + tmp2_35 + tmp3_113;
    auto tmp3_117 = tmp2_26 + tmp3_45;
    auto tmp3_118 = tmp3_28*tmp2_23;
    auto tmp3_119 = tmp3_118 + tmp3_26;
    auto __RealPartCall1 = SecDecInternalRealPart(tmp3_78);
    auto __RealPartCall3 = SecDecInternalRealPart(tmp1_10);
    auto __RealPartCall4 = SecDecInternalRealPart(tmp3_75);
    auto __RealPartCall14 = SecDecInternalRealPart(tmp1_42);
    auto __RealPartCall16 = SecDecInternalRealPart(tmp1_40);
    auto __RealPartCall18 = SecDecInternalRealPart(tmp1_40);
    auto __RealPartCall20 = SecDecInternalRealPart(tmp3_11);
    auto __RealPartCall22 = SecDecInternalRealPart(tmp3_32);
    auto __RealPartCall24 = SecDecInternalRealPart(tmp3_12);
    auto __RealPartCall25 = SecDecInternalRealPart(tmp3_10);
    auto __RealPartCall26 = SecDecInternalRealPart(tmp1_17);
    auto __RealPartCall27 = SecDecInternalRealPart(tmp1_13);
    auto tmp3_120 = __PowCall1*SecDecInternalLambda0;
    auto tmp3_121 = tmp3_120-tmp1_48;
    auto tmp3_122 = SecDecInternalI(tmp3_121);
    auto tmp3_123 = __RealPartCall27*tmp3_122;
    auto tmp3_124 = __RealPartCall14*tmp3_122;
    auto tmp3_125 = __RealPartCall3*tmp3_122;
    auto tmp3_126 = __RealPartCall26*tmp3_122;
    auto tmp3_127 = __PowCall2*SecDecInternalLambda1;
    auto tmp3_128 = tmp3_127-tmp1_47;
    auto tmp3_129 = SecDecInternalI(tmp3_128);
    auto tmp3_130 = __RealPartCall27*tmp3_129;
    auto tmp3_131 = __RealPartCall4*tmp3_129;
    auto tmp3_132 = SecDecInternalI(__RealPartCall22);
    auto tmp3_133 = tmp3_128*tmp3_132;
    auto tmp3_134 = __PowCall3*SecDecInternalLambda2;
    auto tmp3_135 = tmp3_134-tmp3_101;
    auto tmp3_136 = SecDecInternalI(tmp3_135);
    auto tmp3_137 = __RealPartCall14*tmp3_136;
    auto tmp3_138 = __RealPartCall4*tmp3_136;
    auto tmp3_139 = __RealPartCall20*tmp3_136;
    auto tmp3_140 = __RealPartCall24*tmp3_136;
    auto tmp3_141 = __PowCall4*SecDecInternalLambda3;
    auto tmp3_142 = tmp3_141-tmp3_98;
    auto tmp3_143 = SecDecInternalI(tmp3_142);
    auto tmp3_144 = __RealPartCall3*tmp3_143;
    auto tmp3_145 = __RealPartCall20*tmp3_143;
    auto tmp3_146 = SecDecInternalI(__RealPartCall1);
    auto tmp3_147 = tmp3_142*tmp3_146;
    auto tmp3_148 = __PowCall5*SecDecInternalLambda4;
    auto tmp3_149 = tmp3_148-tmp3_95;
    auto tmp3_150 = SecDecInternalI(tmp3_149);
    auto tmp3_151 = __RealPartCall26*tmp3_150;
    auto tmp3_152 = __RealPartCall24*tmp3_150;
    auto tmp3_153 = SecDecInternalI(__RealPartCall25);
    auto tmp3_154 = tmp3_149*tmp3_153;
    auto tmp3_155 = __PowCall6*SecDecInternalLambda5;
    auto tmp3_156 = tmp3_155-tmp3_92;
    auto tmp3_157 = tmp3_156*tmp3_132;
    auto tmp3_158 = tmp3_156*tmp3_146;
    auto tmp3_159 = tmp3_156*tmp3_153;
    auto __RealPartCall2 = SecDecInternalRealPart(tmp2_25);
    auto __RealPartCall5 = SecDecInternalRealPart(tmp2_27);
    auto __RealPartCall6 = SecDecInternalRealPart(tmp3_108);
    auto __RealPartCall7 = SecDecInternalRealPart(tmp3_109);
    auto __RealPartCall8 = SecDecInternalRealPart(tmp3_111);
    auto __RealPartCall9 = SecDecInternalRealPart(tmp3_108);
    auto __RealPartCall10 = SecDecInternalRealPart(tmp3_112);
    auto __RealPartCall11 = SecDecInternalRealPart(tmp3_108);
    auto __RealPartCall12 = SecDecInternalRealPart(tmp3_114);
    auto __RealPartCall13 = SecDecInternalRealPart(tmp3_115);
    auto __RealPartCall15 = SecDecInternalRealPart(tmp3_116);
    auto __RealPartCall17 = SecDecInternalRealPart(tmp3_117);
    auto __RealPartCall19 = SecDecInternalRealPart(tmp3_108);
    auto __RealPartCall21 = SecDecInternalRealPart(tmp3_108);
    auto __RealPartCall23 = SecDecInternalRealPart(tmp3_119);
    auto tmp3_160 = SecDecInternalI(tmp3_93*__RealPartCall23);
    auto tmp3_161 = 1 + tmp3_160;
    auto tmp3_162 = __PowCall1*SecDecInternalLambda0;
    auto tmp3_163 = tmp3_162-tmp1_48;
    auto tmp3_164 = SecDecInternalI(tmp3_163);
    auto tmp3_165 = __RealPartCall17*tmp3_164;
    auto tmp3_166 = x0 + tmp3_165;
    auto tmp3_167 = __RealPartCall16*tmp3_163;
    auto tmp3_168 = __RealPartCall17*tmp1_49;
    auto tmp3_169 = tmp3_168 + tmp3_167;
    auto tmp3_170 = SecDecInternalI(tmp3_169);
    auto tmp3_171 = 1 + tmp3_170;
    auto tmp3_172 = __RealPartCall2*tmp3_164;
    auto tmp3_173 = __PowCall2*SecDecInternalLambda1;
    auto tmp3_174 = tmp3_173-tmp1_47;
    auto tmp3_175 = SecDecInternalI(tmp3_174);
    auto tmp3_176 = __RealPartCall12*tmp3_175;
    auto tmp3_177 = x1 + tmp3_176;
    auto tmp3_178 = __RealPartCall6*tmp3_174;
    auto tmp3_179 = __RealPartCall12*tmp3_104;
    auto tmp3_180 = tmp3_179 + tmp3_178;
    auto tmp3_181 = SecDecInternalI(tmp3_180);
    auto tmp3_182 = 1 + tmp3_181;
    auto tmp3_183 = __RealPartCall21*tmp3_175;
    auto tmp3_184 = __RealPartCall10*tmp3_175;
    auto tmp3_185 = __PowCall3*SecDecInternalLambda2;
    auto tmp3_186 = tmp3_185-tmp3_101;
    auto tmp3_187 = SecDecInternalI(tmp3_186);
    auto tmp3_188 = __RealPartCall5*tmp3_187;
    auto tmp3_189 = x2 + tmp3_188;
    auto tmp3_190 = __RealPartCall18*tmp3_186;
    auto tmp3_191 = __RealPartCall5*tmp3_102;
    auto tmp3_192 = tmp3_191 + tmp3_190;
    auto tmp3_193 = SecDecInternalI(tmp3_192);
    auto tmp3_194 = 1 + tmp3_193;
    auto tmp3_195 = __RealPartCall7*tmp3_187;
    auto tmp3_196 = __PowCall4*SecDecInternalLambda3;
    auto tmp3_197 = tmp3_196-tmp3_98;
    auto tmp3_198 = SecDecInternalI(tmp3_197);
    auto tmp3_199 = __RealPartCall15*tmp3_198;
    auto tmp3_200 = x3 + tmp3_199;
    auto tmp3_201 = __RealPartCall21*tmp3_198;
    auto tmp3_202 = __RealPartCall11*tmp3_197;
    auto tmp3_203 = __RealPartCall15*tmp3_100;
    auto tmp3_204 = tmp3_203 + tmp3_202;
    auto tmp3_205 = SecDecInternalI(tmp3_204);
    auto tmp3_206 = 1 + tmp3_205;
    auto tmp3_207 = __RealPartCall9*tmp3_198;
    auto tmp3_208 = __PowCall5*SecDecInternalLambda4;
    auto tmp3_209 = tmp3_208-tmp3_95;
    auto tmp3_210 = SecDecInternalI(tmp3_209);
    auto tmp3_211 = __RealPartCall13*tmp3_210;
    auto tmp3_212 = x4 + tmp3_211;
    auto tmp3_213 = __RealPartCall10*tmp3_210;
    auto tmp3_214 = __RealPartCall9*tmp3_210;
    auto tmp3_215 = __RealPartCall19*tmp3_209;
    auto tmp3_216 = __RealPartCall13*tmp3_97;
    auto tmp3_217 = tmp3_216 + tmp3_215;
    auto tmp3_218 = SecDecInternalI(tmp3_217);
    auto tmp3_219 = 1 + tmp3_218;
    auto tmp3_220 = __PowCall6*SecDecInternalLambda5;
    auto tmp3_221 = tmp3_220-tmp3_92;
    auto tmp3_222 = SecDecInternalI(tmp3_221);
    auto tmp3_223 = __RealPartCall23*tmp3_222;
    auto tmp3_224 = x5 + tmp3_223;
    auto tmp2_36 = __RealPartCall2*tmp3_222;
    auto tmp3_225 = __RealPartCall7*tmp3_222;
    auto tmp3_226 = __RealPartCall8*tmp3_221;
    auto tmp2_37 = __RealPartCall23*tmp3_94;
    auto tmp3_227 = tmp2_37 + tmp3_226;
    auto tmp3_228 = SecDecInternalI(tmp3_227);
    auto tmp3_229 = 1 + tmp3_228;
    auto tmp3_230 = tmp3_166 + tmp3_189 + 1;
    auto tmp3_231 = tmp3_177 + tmp3_200 + tmp3_212;
    auto tmp3_232 = 1 + tmp3_231;
    auto tmp3_233 = tmp3_232*tmp3_230;
    auto tmp3_234 = tmp3_224*tmp3_231;
    auto tmp3_235 = tmp3_234 + tmp3_233;
    auto tmp3_236 = tmp3_152*tmp3_157;
    auto tmp3_237 = tmp3_213*tmp3_225;
    auto tmp3_238 = tmp3_236-tmp3_237;
    auto tmp3_239 = tmp3_238*tmp3_144;
    auto tmp3_240 = tmp3_152*tmp2_36;
    auto tmp3_241 = tmp3_151*tmp3_225;
    auto tmp3_242 = tmp3_240-tmp3_241;
    auto tmp3_243 = tmp3_242*tmp3_201;
    auto tmp3_244 = tmp3_213*tmp2_36;
    auto tmp3_245 = tmp3_151*tmp3_157;
    auto tmp3_246 = tmp3_244-tmp3_245;
    auto tmp3_247 = tmp3_246*tmp3_145;
    auto tmp3_248 = tmp3_247 + tmp3_239-tmp3_243;
    auto tmp3_249 = tmp3_248*tmp3_139;
    auto tmp3_250 = tmp3_214*tmp2_36;
    auto tmp3_251 = tmp3_151*tmp3_158;
    auto tmp3_252 = tmp3_250-tmp3_251;
    auto tmp3_253 = tmp3_252*tmp3_145;
    auto tmp3_254 = tmp3_242*tmp3_206;
    auto tmp3_255 = tmp3_214*tmp3_225;
    auto tmp3_256 = tmp3_152*tmp3_158;
    auto tmp3_257 = tmp3_255-tmp3_256;
    auto tmp3_258 = tmp3_257*tmp3_144;
    auto tmp3_259 = -tmp3_258 + tmp3_253-tmp3_254;
    auto tmp3_260 = tmp3_259*tmp3_138;
    auto tmp3_261 = tmp3_214*tmp3_157;
    auto tmp3_262 = tmp3_213*tmp3_158;
    auto tmp3_263 = tmp3_261-tmp3_262;
    auto tmp3_264 = tmp3_263*tmp3_144;
    auto tmp3_265 = tmp3_252*tmp3_201;
    auto tmp3_266 = tmp3_246*tmp3_206;
    auto tmp3_267 = tmp3_266 + tmp3_264-tmp3_265;
    auto tmp3_268 = tmp3_267*tmp3_194;
    auto tmp3_269 = tmp3_263*tmp3_145;
    auto tmp3_270 = tmp3_238*tmp3_206;
    auto tmp3_271 = tmp3_257*tmp3_201;
    auto tmp3_272 = -tmp3_271 + tmp3_269-tmp3_270;
    auto tmp3_273 = tmp3_272*tmp3_137;
    auto tmp3_274 = -tmp3_273-tmp3_249 + tmp3_260 + tmp3_268;
    auto tmp3_275 = tmp3_184*tmp3_274;
    auto tmp3_276 = tmp3_219*tmp3_157;
    auto tmp3_277 = tmp3_213*tmp3_159;
    auto tmp3_278 = tmp3_276-tmp3_277;
    auto tmp3_279 = tmp3_278*tmp3_144;
    auto tmp3_280 = tmp3_246*tmp3_207;
    auto tmp3_281 = tmp3_219*tmp2_36;
    auto tmp3_282 = tmp3_151*tmp3_159;
    auto tmp3_283 = tmp3_281-tmp3_282;
    auto tmp3_284 = tmp3_283*tmp3_201;
    auto tmp3_285 = -tmp3_284 + tmp3_279 + tmp3_280;
    auto tmp3_286 = tmp3_285*tmp3_194;
    auto tmp3_287 = tmp3_219*tmp3_225;
    auto tmp3_288 = tmp3_152*tmp3_159;
    auto tmp3_289 = tmp3_287-tmp3_288;
    auto tmp3_290 = tmp3_289*tmp3_144;
    auto tmp3_291 = tmp3_283*tmp3_145;
    auto tmp3_292 = tmp3_242*tmp3_207;
    auto tmp3_293 = tmp3_292 + tmp3_290-tmp3_291;
    auto tmp3_294 = tmp3_293*tmp3_138;
    auto tmp3_295 = tmp3_248*tmp3_140;
    auto tmp3_296 = tmp3_289*tmp3_201;
    auto tmp3_297 = tmp3_278*tmp3_145;
    auto tmp3_298 = tmp3_238*tmp3_207;
    auto tmp3_299 = tmp3_298 + tmp3_296-tmp3_297;
    auto tmp3_300 = tmp3_299*tmp3_137;
    auto tmp3_301 = -tmp3_286 + tmp3_294 + tmp3_295-tmp3_300;
    auto tmp3_302 = tmp3_183*tmp3_301;
    auto tmp3_303 = tmp3_219*tmp3_158;
    auto tmp3_304 = tmp3_214*tmp3_159;
    auto tmp3_305 = tmp3_303-tmp3_304;
    auto tmp3_306 = tmp3_305*tmp3_144;
    auto tmp3_307 = tmp3_283*tmp3_206;
    auto tmp3_308 = tmp3_252*tmp3_207;
    auto tmp3_309 = tmp3_308 + tmp3_306-tmp3_307;
    auto tmp3_310 = tmp3_309*tmp3_138;
    auto tmp3_311 = tmp3_305*tmp3_201;
    auto tmp3_312 = tmp3_278*tmp3_206;
    auto tmp3_313 = tmp3_263*tmp3_207;
    auto tmp3_314 = tmp3_313 + tmp3_311-tmp3_312;
    auto tmp3_315 = tmp3_314*tmp3_137;
    auto tmp3_316 = tmp3_285*tmp3_139;
    auto tmp3_317 = tmp3_267*tmp3_140;
    auto tmp3_318 = -tmp3_310 + tmp3_315 + tmp3_316-tmp3_317;
    auto tmp3_319 = tmp3_131*tmp3_318;
    auto tmp3_320 = tmp3_309*tmp3_194;
    auto tmp3_321 = tmp3_305*tmp3_145;
    auto tmp3_322 = tmp3_289*tmp3_206;
    auto tmp3_323 = tmp3_257*tmp3_207;
    auto tmp3_324 = tmp3_323 + tmp3_321-tmp3_322;
    auto tmp3_325 = tmp3_324*tmp3_137;
    auto tmp3_326 = tmp3_293*tmp3_139;
    auto tmp3_327 = tmp3_259*tmp3_140;
    auto tmp3_328 = -tmp3_320 + tmp3_325 + tmp3_326 + tmp3_327;
    auto tmp3_329 = -tmp3_182*tmp3_328;
    auto tmp3_330 = tmp3_314*tmp3_194;
    auto tmp3_331 = tmp3_324*tmp3_138;
    auto tmp3_332 = tmp3_299*tmp3_139;
    auto tmp3_333 = tmp3_272*tmp3_140;
    auto tmp3_334 = -tmp3_330 + tmp3_331 + tmp3_332 + tmp3_333;
    auto tmp3_335 = tmp3_130*tmp3_334;
    auto tmp3_336 = tmp3_335 + tmp3_329 + tmp3_319 + tmp3_275 + tmp3_302;
    auto tmp3_337 = tmp3_172*tmp3_336;
    auto tmp3_338 = -tmp3_133*tmp3_274;
    auto tmp3_339 = tmp3_154*tmp3_157;
    auto tmp3_340 = tmp3_213*tmp3_229;
    auto tmp3_341 = tmp3_339-tmp3_340;
    auto tmp3_342 = tmp3_341*tmp3_144;
    auto tmp3_343 = tmp3_154*tmp2_36;
    auto tmp3_344 = tmp3_151*tmp3_229;
    auto tmp3_345 = tmp3_343-tmp3_344;
    auto tmp3_346 = tmp3_345*tmp3_201;
    auto tmp3_347 = tmp3_246*tmp3_147;
    auto tmp3_348 = tmp3_347 + tmp3_342-tmp3_346;
    auto tmp3_349 = tmp3_348*tmp3_194;
    auto tmp3_350 = tmp3_154*tmp3_225;
    auto tmp3_351 = tmp3_152*tmp3_229;
    auto tmp3_352 = tmp3_350-tmp3_351;
    auto tmp3_353 = tmp3_352*tmp3_144;
    auto tmp3_354 = tmp3_345*tmp3_145;
    auto tmp3_355 = tmp3_242*tmp3_147;
    auto tmp3_356 = tmp3_355 + tmp3_353-tmp3_354;
    auto tmp3_357 = tmp3_356*tmp3_138;
    auto tmp3_358 = tmp3_352*tmp3_201;
    auto tmp3_359 = tmp3_341*tmp3_145;
    auto tmp3_360 = tmp3_238*tmp3_147;
    auto tmp3_361 = tmp3_360 + tmp3_358-tmp3_359;
    auto tmp3_362 = tmp3_361*tmp3_137;
    auto tmp3_363 = tmp3_248*tmp3_195;
    auto tmp3_364 = tmp3_349-tmp3_357 + tmp3_362-tmp3_363;
    auto tmp3_365 = tmp3_183*tmp3_364;
    auto tmp3_366 = tmp3_154*tmp3_158;
    auto tmp3_367 = tmp3_214*tmp3_229;
    auto tmp3_368 = tmp3_366-tmp3_367;
    auto tmp3_369 = tmp3_368*tmp3_144;
    auto tmp3_370 = tmp3_345*tmp3_206;
    auto tmp3_371 = tmp3_252*tmp3_147;
    auto tmp3_372 = tmp3_371 + tmp3_369-tmp3_370;
    auto tmp3_373 = tmp3_372*tmp3_138;
    auto tmp3_374 = tmp3_368*tmp3_201;
    auto tmp3_375 = tmp3_341*tmp3_206;
    auto tmp3_376 = tmp3_263*tmp3_147;
    auto tmp3_377 = tmp3_376 + tmp3_374-tmp3_375;
    auto tmp3_378 = tmp3_377*tmp3_137;
    auto tmp3_379 = tmp3_348*tmp3_139;
    auto tmp3_380 = tmp3_267*tmp3_195;
    auto tmp3_381 = -tmp3_373 + tmp3_378 + tmp3_379-tmp3_380;
    auto tmp3_382 = -tmp3_131*tmp3_381;
    auto tmp3_383 = tmp3_372*tmp3_194;
    auto tmp3_384 = tmp3_368*tmp3_145;
    auto tmp3_385 = tmp3_352*tmp3_206;
    auto tmp3_386 = tmp3_257*tmp3_147;
    auto tmp3_387 = tmp3_386 + tmp3_384-tmp3_385;
    auto tmp3_388 = tmp3_387*tmp3_137;
    auto tmp3_389 = tmp3_356*tmp3_139;
    auto tmp3_390 = tmp3_259*tmp3_195;
    auto tmp3_391 = -tmp3_383 + tmp3_388 + tmp3_389 + tmp3_390;
    auto tmp3_392 = tmp3_182*tmp3_391;
    auto tmp3_393 = tmp3_377*tmp3_194;
    auto tmp3_394 = tmp3_387*tmp3_138;
    auto tmp3_395 = tmp3_361*tmp3_139;
    auto tmp3_396 = tmp3_272*tmp3_195;
    auto tmp3_397 = -tmp3_393 + tmp3_394 + tmp3_395 + tmp3_396;
    auto tmp3_398 = -tmp3_130*tmp3_397;
    auto tmp3_399 = tmp3_398 + tmp3_392 + tmp3_382 + tmp3_338 + tmp3_365;
    auto tmp3_400 = tmp3_126*tmp3_399;
    auto tmp3_401 = -tmp3_133*tmp3_301;
    auto tmp3_402 = -tmp3_184*tmp3_364;
    auto tmp3_403 = tmp3_154*tmp3_159;
    auto tmp3_404 = tmp3_219*tmp3_229;
    auto tmp3_405 = tmp3_403-tmp3_404;
    auto tmp3_406 = tmp3_405*tmp3_144;
    auto tmp3_407 = tmp3_345*tmp3_207;
    auto tmp3_408 = tmp3_283*tmp3_147;
    auto tmp3_409 = tmp3_408 + tmp3_406-tmp3_407;
    auto tmp3_410 = tmp3_409*tmp3_138;
    auto tmp3_411 = tmp3_405*tmp3_201;
    auto tmp3_412 = tmp3_341*tmp3_207;
    auto tmp3_413 = tmp3_278*tmp3_147;
    auto tmp3_414 = tmp3_413 + tmp3_411-tmp3_412;
    auto tmp3_415 = tmp3_414*tmp3_137;
    auto tmp3_416 = tmp3_348*tmp3_140;
    auto tmp3_417 = tmp3_285*tmp3_195;
    auto tmp3_418 = -tmp3_410 + tmp3_415 + tmp3_416-tmp3_417;
    auto tmp3_419 = tmp3_131*tmp3_418;
    auto tmp3_420 = tmp3_409*tmp3_194;
    auto tmp3_421 = tmp3_405*tmp3_145;
    auto tmp3_422 = tmp3_352*tmp3_207;
    auto tmp3_423 = tmp3_289*tmp3_147;
    auto tmp3_424 = tmp3_423 + tmp3_421-tmp3_422;
    auto tmp3_425 = tmp3_424*tmp3_137;
    auto tmp3_426 = tmp3_356*tmp3_140;
    auto tmp3_427 = tmp3_293*tmp3_195;
    auto tmp3_428 = -tmp3_420 + tmp3_425 + tmp3_426-tmp3_427;
    auto tmp3_429 = -tmp3_182*tmp3_428;
    auto tmp3_430 = tmp3_414*tmp3_194;
    auto tmp3_431 = tmp3_424*tmp3_138;
    auto tmp3_432 = tmp3_361*tmp3_140;
    auto tmp3_433 = tmp3_299*tmp3_195;
    auto tmp3_434 = -tmp3_430 + tmp3_431 + tmp3_432-tmp3_433;
    auto tmp3_435 = tmp3_130*tmp3_434;
    auto tmp3_436 = tmp3_435 + tmp3_429 + tmp3_419 + tmp3_401 + tmp3_402;
    auto tmp3_437 = tmp3_125*tmp3_436;
    auto tmp3_438 = -tmp3_133*tmp3_318;
    auto tmp3_439 = tmp3_184*tmp3_381;
    auto tmp3_440 = -tmp3_183*tmp3_418;
    auto tmp3_441 = tmp3_372*tmp3_140;
    auto tmp3_442 = tmp3_409*tmp3_139;
    auto tmp3_443 = tmp3_405*tmp3_206;
    auto tmp3_444 = tmp3_368*tmp3_207;
    auto tmp3_445 = tmp3_305*tmp3_147;
    auto tmp3_446 = tmp3_445 + tmp3_443-tmp3_444;
    auto tmp3_447 = tmp3_446*tmp3_137;
    auto tmp3_448 = tmp3_309*tmp3_195;
    auto tmp3_449 = tmp3_441-tmp3_442 + tmp3_447-tmp3_448;
    auto tmp3_450 = tmp3_182*tmp3_449;
    auto tmp3_451 = tmp3_377*tmp3_140;
    auto tmp3_452 = tmp3_414*tmp3_139;
    auto tmp3_453 = tmp3_446*tmp3_138;
    auto tmp3_454 = tmp3_314*tmp3_195;
    auto tmp3_455 = tmp3_451-tmp3_452 + tmp3_453-tmp3_454;
    auto tmp3_456 = -tmp3_130*tmp3_455;
    auto tmp3_457 = tmp3_456 + tmp3_450 + tmp3_440 + tmp3_438 + tmp3_439;
    auto tmp3_458 = tmp3_124*tmp3_457;
    auto tmp3_459 = tmp3_133*tmp3_328;
    auto tmp3_460 = -tmp3_184*tmp3_391;
    auto tmp3_461 = tmp3_183*tmp3_428;
    auto tmp3_462 = -tmp3_131*tmp3_449;
    auto tmp3_463 = tmp3_387*tmp3_140;
    auto tmp3_464 = tmp3_424*tmp3_139;
    auto tmp3_465 = tmp3_446*tmp3_194;
    auto tmp3_466 = tmp3_324*tmp3_195;
    auto tmp3_467 = tmp3_463-tmp3_464 + tmp3_465-tmp3_466;
    auto tmp3_468 = tmp3_130*tmp3_467;
    auto tmp3_469 = tmp3_468 + tmp3_462 + tmp3_461 + tmp3_459 + tmp3_460;
    auto tmp3_470 = tmp3_123*tmp3_469;
    auto tmp3_471 = -tmp3_133*tmp3_334;
    auto tmp3_472 = tmp3_184*tmp3_397;
    auto tmp3_473 = -tmp3_183*tmp3_434;
    auto tmp3_474 = tmp3_131*tmp3_455;
    auto tmp3_475 = -tmp3_182*tmp3_467;
    auto tmp3_476 = tmp3_475 + tmp3_474 + tmp3_473 + tmp3_471 + tmp3_472;
    auto tmp3_477 = tmp3_171*tmp3_476;
    auto tmp3_478 = tmp3_477 + tmp3_470 + tmp3_458 + tmp3_437 + tmp3_337 + tmp3_400;
    auto __PowCall7 = SecDecInternalSqr(tmp3_166);
    auto __PowCall8 = SecDecInternalSqr(tmp3_177);
    auto __PowCall9 = SecDecInternalSqr(tmp3_189);
    auto __PowCall10 = SecDecInternalSqr(tmp3_200);
    auto __PowCall11 = SecDecInternalSqr(tmp3_212);
    auto __PowCall12 = SecDecInternalSqr(tmp3_224);
    auto tmp3_479 = tmp3_166*tmp3_33;
    auto tmp3_480 = tmp3_479 + tmp3_33;
    auto tmp3_481 = tmp3_189*tmp3_33;
    auto tmp3_482 = tmp3_481 + tmp3_480;
    auto tmp3_483 = tmp3_200*tmp3_482;
    auto tmp3_484 = tmp3_166*tmp3_91;
    auto tmp3_485 = tmp3_166*tmp1_44;
    auto tmp3_486 = tmp1_44 + tmp3_485;
    auto tmp3_487 = tmp3_177*tmp3_486;
    auto tmp3_488 = tmp3_177*tmp1_44;
    auto tmp3_489 = tmp3_89 + tmp3_488;
    auto tmp3_490 = tmp3_189*tmp3_489;
    auto tmp3_491 = tmp3_483 + tmp3_490 + tmp3_487 + tmp3_89 + tmp3_484;
    auto tmp3_492 = tmp3_212*tmp3_491;
    auto tmp3_493 = tmp3_166*tmp3_89;
    auto tmp3_494 = tmp3_177*tmp3_480;
    auto tmp3_495 = tmp3_177*tmp3_33;
    auto tmp3_496 = tmp3_89 + tmp3_495;
    auto tmp3_497 = tmp3_189*tmp3_496;
    auto tmp3_498 = tmp3_497 + tmp3_494 + tmp3_90 + tmp3_493;
    auto tmp3_499 = tmp3_200*tmp3_498;
    auto tmp3_500 = tmp3_189*tmp3_91;
    auto tmp3_501 = tmp3_500 + tmp3_89 + tmp3_493;
    auto tmp3_502 = tmp3_177*tmp3_501;
    auto tmp3_503 = tmp3_189 + tmp3_166 + 1;
    auto tmp3_504 = __PowCall8 + __PowCall11 + __PowCall10;
    auto tmp3_505 = tmp3_504 + 1;
    auto tmp3_506 = msq*tmp3_505*tmp3_503;
    auto tmp3_507 = tmp3_506 + tmp3_492 + tmp3_499 + tmp3_502;
    auto tmp3_508 = tmp3_224*tmp3_507;
    auto tmp3_509 = tmp3_485 + tmp3_33;
    auto tmp3_510 = tmp3_509*tmp3_189;
    auto tmp3_511 = tmp3_510 + tmp3_479;
    auto tmp3_512 = tmp3_200*tmp3_33;
    auto tmp3_513 = tmp3_512 + tmp3_488;
    auto tmp3_514 = __PowCall12*tmp3_513;
    auto tmp3_515 = tmp3_514 + tmp3_511;
    auto tmp3_516 = tmp3_212*tmp3_515;
    auto tmp3_517 = tmp3_212 + tmp3_200 + tmp3_177;
    auto tmp3_518 = __PowCall7 + __PowCall9 + 1;
    auto tmp3_519 = tmp3_518 + __PowCall12;
    auto tmp3_520 = tmp3_519*tmp3_517;
    auto tmp3_521 = __PowCall12*tmp3_504;
    auto tmp3_522 = tmp3_521 + tmp3_518 + tmp3_520;
    auto tmp3_523 = msq*tmp3_522;
    auto tmp3_524 = tmp3_177 + 1;
    auto tmp3_525 = tmp3_524*tmp3_511;
    auto tmp3_526 = __PowCall12*tmp3_495;
    auto tmp3_527 = tmp3_526 + tmp3_511;
    auto tmp3_528 = tmp3_200*tmp3_527;
    auto tmp3_529 = tmp3_508 + tmp3_523 + tmp3_516 + tmp3_528 + tmp3_525;
    auto __PowCall13 = SecDecInternalSqr(tmp3_529)*tmp3_529;
    auto __DenominatorCall1 = SecDecInternalDenominator(__PowCall13);
    auto tmp3_530 = -tmp3_106 + tmp3_529;
    auto tmp3_531 = x5*tmp3_478*tmp3_161*__DenominatorCall1*tmp3_235;
    auto _SignCheckExpression = SecDecInternalImagPart(tmp3_530);
    SecDecInternalSignCheckContourDeformation(!(_SignCheckExpression<=0), 1);
    auto tmp3_532 = SecDecInternalRealPart(tmp3_235);
    SecDecInternalSignCheckPositivePolynomial(!(tmp3_532>=0), 1);
    return(tmp3_531);
}
#ifdef SECDEC_WITH_CUDA
__device__ secdecutil::SectorContainerWithDeformation<real_t, complex_t>::DeformedIntegrandFunction* const device_sector_16_order_0_integrand = sector_16_order_0_integrand;
secdecutil::SectorContainerWithDeformation<real_t, complex_t>::DeformedIntegrandFunction* get_device_sector_16_order_0_integrand()
{
    using IntegrandFunction = secdecutil::SectorContainerWithDeformation<real_t, complex_t>::DeformedIntegrandFunction;
    IntegrandFunction* device_address_on_host;
    auto errcode = cudaMemcpyFromSymbol(&device_address_on_host,device_sector_16_order_0_integrand, sizeof(IntegrandFunction*));
    if (errcode != cudaSuccess) throw secdecutil::cuda_error( cudaGetErrorString(errcode) );
    return device_address_on_host;
}
#endif
}
